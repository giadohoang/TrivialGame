!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=32)}([function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(13)},function(e,t,n){e.exports=n(17)()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.canUseDOM=void 0;var r,o=n(23);var i=((r=o)&&r.__esModule?r:{default:r}).default,a=i.canUseDOM?window.HTMLElement:{};t.canUseDOM=i.canUseDOM;t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),a=l(i),u=l(n(2));function l(e){return e&&e.__esModule?e:{default:e}}var s={position:"absolute",top:0,left:0,visibility:"hidden",height:0,overflow:"scroll",whiteSpace:"pre"},c=["extraWidth","injectStyles","inputClassName","inputRef","inputStyle","minWidth","onAutosize","placeholderIsMinWidth"],f=function(e,t){t.style.fontSize=e.fontSize,t.style.fontFamily=e.fontFamily,t.style.fontWeight=e.fontWeight,t.style.fontStyle=e.fontStyle,t.style.letterSpacing=e.letterSpacing,t.style.textTransform=e.textTransform},p=!("undefined"==typeof window||!window.navigator)&&/MSIE |Trident\/|Edge\//.test(window.navigator.userAgent),d=function(){return p?"_"+Math.random().toString(36).substr(2,12):void 0},h=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.inputRef=function(e){n.input=e,"function"==typeof n.props.inputRef&&n.props.inputRef(e)},n.placeHolderSizerRef=function(e){n.placeHolderSizer=e},n.sizerRef=function(e){n.sizer=e},n.state={inputWidth:e.minWidth,inputId:e.id||d()},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"componentDidMount",value:function(){this.mounted=!0,this.copyInputStyles(),this.updateInputWidth()}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){var t=e.id;t!==this.props.id&&this.setState({inputId:t||d()})}},{key:"componentDidUpdate",value:function(e,t){t.inputWidth!==this.state.inputWidth&&"function"==typeof this.props.onAutosize&&this.props.onAutosize(this.state.inputWidth),this.updateInputWidth()}},{key:"componentWillUnmount",value:function(){this.mounted=!1}},{key:"copyInputStyles",value:function(){if(this.mounted&&window.getComputedStyle){var e=this.input&&window.getComputedStyle(this.input);e&&(f(e,this.sizer),this.placeHolderSizer&&f(e,this.placeHolderSizer))}}},{key:"updateInputWidth",value:function(){if(this.mounted&&this.sizer&&void 0!==this.sizer.scrollWidth){var e=void 0;e=this.props.placeholder&&(!this.props.value||this.props.value&&this.props.placeholderIsMinWidth)?Math.max(this.sizer.scrollWidth,this.placeHolderSizer.scrollWidth)+2:this.sizer.scrollWidth+2,(e+="number"===this.props.type&&void 0===this.props.extraWidth?16:parseInt(this.props.extraWidth)||0)<this.props.minWidth&&(e=this.props.minWidth),e!==this.state.inputWidth&&this.setState({inputWidth:e})}}},{key:"getInput",value:function(){return this.input}},{key:"focus",value:function(){this.input.focus()}},{key:"blur",value:function(){this.input.blur()}},{key:"select",value:function(){this.input.select()}},{key:"renderStyles",value:function(){var e=this.props.injectStyles;return p&&e?a.default.createElement("style",{dangerouslySetInnerHTML:{__html:"input#"+this.state.inputId+"::-ms-clear {display: none;}"}}):null}},{key:"render",value:function(){var e=[this.props.defaultValue,this.props.value,""].reduce((function(e,t){return null!=e?e:t})),t=r({},this.props.style);t.display||(t.display="inline-block");var n=r({boxSizing:"content-box",width:this.state.inputWidth+"px"},this.props.inputStyle),o=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(this.props,[]);return function(e){c.forEach((function(t){return delete e[t]}))}(o),o.className=this.props.inputClassName,o.id=this.state.inputId,o.style=n,a.default.createElement("div",{className:this.props.className,style:t},this.renderStyles(),a.default.createElement("input",r({},o,{ref:this.inputRef})),a.default.createElement("div",{ref:this.sizerRef,style:s},e),this.props.placeholder?a.default.createElement("div",{ref:this.placeHolderSizerRef,style:s},this.props.placeholder):null)}}]),t}(i.Component);h.propTypes={className:u.default.string,defaultValue:u.default.any,extraWidth:u.default.oneOfType([u.default.number,u.default.string]),id:u.default.string,injectStyles:u.default.bool,inputClassName:u.default.string,inputRef:u.default.func,inputStyle:u.default.object,minWidth:u.default.oneOfType([u.default.number,u.default.string]),onAutosize:u.default.func,onChange:u.default.func,placeholder:u.default.string,placeholderIsMinWidth:u.default.bool,style:u.default.object,value:u.default.any},h.defaultProps={minWidth:1,injectStyles:!0},t.default=h},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=a(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(l[c]=n[c]);if(r){u=r(n);for(var f=0;f<u.length;f++)i.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return[].slice.call(e.querySelectorAll("*"),0).filter(a)};
/*!
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
var r=/input|select|textarea|button|object/;function o(e){var t=e.offsetWidth<=0&&e.offsetHeight<=0;if(t&&!e.innerHTML)return!0;var n=window.getComputedStyle(e);return t?"visible"!==n.getPropertyValue("overflow")||e.scrollWidth<=0&&e.scrollHeight<=0:"none"==n.getPropertyValue("display")}function i(e,t){var n=e.nodeName.toLowerCase();return(r.test(n)&&!e.disabled||"a"===n&&e.href||t)&&function(e){for(var t=e;t&&t!==document.body;){if(o(t))return!1;t=t.parentNode}return!0}(e)}function a(e){var t=e.getAttribute("tabindex");null===t&&(t=void 0);var n=isNaN(t);return(n||t>=0)&&i(e,!n)}e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assertNodeList=l,t.setElement=function(e){var t=e;if("string"==typeof t&&a.canUseDOM){var n=document.querySelectorAll(t);l(n,t),t="length"in n?n[0]:n}return u=t||u},t.validateElement=s,t.hide=function(e){s(e)&&(e||u).setAttribute("aria-hidden","true")},t.show=function(e){s(e)&&(e||u).removeAttribute("aria-hidden")},t.documentNotReadyOrSSRTesting=function(){u=null},t.resetForTesting=function(){u=null};var r,o=n(22),i=(r=o)&&r.__esModule?r:{default:r},a=n(3);var u=null;function l(e,t){if(!e||!e.length)throw new Error("react-modal: No elements were found for selector "+t+".")}function s(e){return!(!e&&!u)||((0,i.default)(!1,["react-modal: App element is not defined.","Please use `Modal.setAppElement(el)` or set `appElement={el}`.","This is needed so screen readers don't see main content","when modal is opened. It is not recommended, but you can opt-out","by setting `ariaHideApp={false}`."].join(" ")),!1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=new function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.register=function(e){-1===t.openInstances.indexOf(e)&&(t.openInstances.push(e),t.emit("register"))},this.deregister=function(e){var n=t.openInstances.indexOf(e);-1!==n&&(t.openInstances.splice(n,1),t.emit("deregister"))},this.subscribe=function(e){t.subscribers.push(e)},this.emit=function(e){t.subscribers.forEach((function(n){return n(e,t.openInstances.slice())}))},this.openInstances=[],this.subscribers=[]};t.default=r,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(16),i=(r=o)&&r.__esModule?r:{default:r};t.default=i.default,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==l(e)&&"function"!=typeof e)return{default:e};var t=u();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=r?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}n.default=e,t&&t.set(e,n);return n}(n(0)),o=a(n(1)),i=a(n(27));function a(e){return e&&e.__esModule?e:{default:e}}function u(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return u=function(){return e},e}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=function(e){function t(e){var n,r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=this,(n=!(o=f(t).call(this,e))||"object"!==l(o)&&"function"!=typeof o?p(r):o).state={selected:n.parseValue(e.value,e.options)||{label:void 0===e.placeholder?"Select...":e.placeholder,value:""},isOpen:!1},n.mounted=!0,n.handleDocumentClick=n.handleDocumentClick.bind(p(n)),n.fireChangeEvent=n.fireChangeEvent.bind(p(n)),n}var n,a,u;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,e),n=t,(a=[{key:"componentWillReceiveProps",value:function(e){if(e.value){var t=this.parseValue(e.value,e.options);t!==this.state.selected&&this.setState({selected:t})}else this.setState({selected:{label:void 0===e.placeholder?"Select...":e.placeholder,value:""}})}},{key:"componentDidMount",value:function(){document.addEventListener("click",this.handleDocumentClick,!1),document.addEventListener("touchend",this.handleDocumentClick,!1)}},{key:"componentWillUnmount",value:function(){this.mounted=!1,document.removeEventListener("click",this.handleDocumentClick,!1),document.removeEventListener("touchend",this.handleDocumentClick,!1)}},{key:"handleMouseDown",value:function(e){this.props.onFocus&&"function"==typeof this.props.onFocus&&this.props.onFocus(this.state.isOpen),"mousedown"===e.type&&0!==e.button||(e.stopPropagation(),e.preventDefault(),this.props.disabled||this.setState({isOpen:!this.state.isOpen}))}},{key:"parseValue",value:function(e,t){var n;if("string"==typeof e)for(var r=0,o=t.length;r<o;r++)if("group"===t[r].type){var i=t[r].items.filter((function(t){return t.value===e}));i.length&&(n=i[0])}else void 0!==t[r].value&&t[r].value===e&&(n=t[r]);return n||e}},{key:"setValue",value:function(e,t){var n={selected:{value:e,label:t},isOpen:!1};this.fireChangeEvent(n),this.setState(n)}},{key:"fireChangeEvent",value:function(e){e.selected!==this.state.selected&&this.props.onChange&&this.props.onChange(e.selected)}},{key:"renderOption",value:function(e){var t,n=e.value;void 0===n&&(n=e.label||e);var o=e.label||e.value||e,a=n===this.state.selected.value||n===this.state.selected,u=(s(t={},"".concat(this.props.baseClassName,"-option"),!0),s(t,e.className,!!e.className),s(t,"is-selected",a),t),l=(0,i.default)(u);return r.default.createElement("div",{key:n,className:l,onMouseDown:this.setValue.bind(this,n,o),onClick:this.setValue.bind(this,n,o),role:"option","aria-selected":a?"true":"false"},o)}},{key:"buildMenu",value:function(){var e=this,t=this.props,n=t.options,o=t.baseClassName,i=n.map((function(t){if("group"===t.type){var n=r.default.createElement("div",{className:"".concat(o,"-title")},t.name),i=t.items.map((function(t){return e.renderOption(t)}));return r.default.createElement("div",{className:"".concat(o,"-group"),key:t.name,role:"listbox",tabIndex:"-1"},n,i)}return e.renderOption(t)}));return i.length?i:r.default.createElement("div",{className:"".concat(o,"-noresults")},"No options found")}},{key:"handleDocumentClick",value:function(e){this.mounted&&(o.default.findDOMNode(this).contains(e.target)||this.state.isOpen&&this.setState({isOpen:!1}))}},{key:"isValueSelected",value:function(){return"string"==typeof this.state.selected||""!==this.state.selected.value}},{key:"render",value:function(){var e,t,n,o,a,u=this.props,l=u.baseClassName,c=u.controlClassName,f=u.placeholderClassName,p=u.menuClassName,d=u.arrowClassName,h=u.arrowClosed,m=u.arrowOpen,v=u.className,g=this.props.disabled?"Dropdown-disabled":"",b="string"==typeof this.state.selected?this.state.selected:this.state.selected.label,y=(0,i.default)((s(e={},"".concat(l,"-root"),!0),s(e,v,!!v),s(e,"is-open",this.state.isOpen),e)),E=(0,i.default)((s(t={},"".concat(l,"-control"),!0),s(t,c,!!c),s(t,g,!!g),t)),w=(0,i.default)((s(n={},"".concat(l,"-placeholder"),!0),s(n,f,!!f),s(n,"is-selected",this.isValueSelected()),n)),C=(0,i.default)((s(o={},"".concat(l,"-menu"),!0),s(o,p,!!p),o)),x=(0,i.default)((s(a={},"".concat(l,"-arrow"),!0),s(a,d,!!d),a)),k=r.default.createElement("div",{className:w},b),O=this.state.isOpen?r.default.createElement("div",{className:C,"aria-expanded":"true"},this.buildMenu()):null;return r.default.createElement("div",{className:y},r.default.createElement("div",{className:E,onMouseDown:this.handleMouseDown.bind(this),onTouchEnd:this.handleMouseDown.bind(this),"aria-haspopup":"listbox"},k,r.default.createElement("div",{className:"".concat(l,"-arrow-wrapper")},m&&h?this.state.isOpen?m:h:r.default.createElement("span",{className:x}))),O)}}])&&c(n.prototype,a),u&&c(n,u),t}(r.Component);h.defaultProps={baseClassName:"Dropdown"};var m=h;t.default=m},function(e,t){e.exports=function(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,u=o?Symbol.for("react.fragment"):60107,l=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.forward_ref"):60112,d=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function E(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||b}function w(){}function C(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||b}E.prototype.isReactComponent={},E.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},E.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=E.prototype;var x=C.prototype=new w;x.constructor=C,r(x,E.prototype),x.isPureReactComponent=!0;var k={current:null},O=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r,o={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)O.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:i,type:e,key:a,ref:u,props:o,_owner:k.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var A=/\/+/g,_=[];function F(e,t,n,r){if(_.length){var o=_.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function D(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>_.length&&_.push(e)}function M(e,t,n){return null==e?0:function e(t,n,r,o){var u=typeof t;"undefined"!==u&&"boolean"!==u||(t=null);var l=!1;if(null===t)l=!0;else switch(u){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case i:case a:l=!0}}if(l)return r(o,t,""===n?"."+N(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+N(u=t[s],s);l+=e(u,c,r,o)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=v&&t[v]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(u=t.next()).done;)l+=e(u=u.value,c=n+N(u,s++),r,o);else if("object"===u)throw r=""+t,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return l}(e,"",t,n)}function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(A,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(A,"$&/")+"/"),M(e,R,t=F(t,i,r,o)),D(t)}var j={current:null};function z(){var e=j.current;if(null===e)throw Error(g(321));return e}var V={ReactCurrentDispatcher:j,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,I,t=F(null,null,t,n)),D(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=E,t.Fragment=u,t.Profiler=s,t.PureComponent=C,t.StrictMode=l,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=V,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),a=e.key,u=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(u=t.ref,l=k.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)O.call(t,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:i,type:e.type,key:a,ref:u,props:o,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:p,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return z().useCallback(e,t)},t.useContext=function(e,t){return z().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return z().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return z().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return z().useLayoutEffect(e,t)},t.useMemo=function(e,t){return z().useMemo(e,t)},t.useReducer=function(e,t,n){return z().useReducer(e,t,n)},t.useRef=function(e){return z().useRef(e)},t.useState=function(e){return z().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),i=n(14);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function u(e,t,n,r,o,i,a,u,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var l=!1,s=null,c=!1,f=null,p={onError:function(e){l=!0,s=e}};function d(e,t,n,r,o,i,a,c,f){l=!1,s=null,u.apply(p,arguments)}var h=null,m=null,v=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,o,i,u,p,h){if(d.apply(this,arguments),l){if(!l)throw Error(a(198));var m=s;l=!1,s=null,c||(c=!0,f=m)}}(r,t,void 0,e),e.currentTarget=null}var b=null,y={};function E(){if(b)for(var e in y){var t=y[e],n=b.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!C[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in C[n]=t,n=t.eventTypes){var o=void 0,i=n[r],u=t,l=r;if(x.hasOwnProperty(l))throw Error(a(99,l));x[l]=i;var s=i.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&w(s[o],u,l);o=!0}else i.registrationName?(w(i.registrationName,u,l),o=!0):o=!1;if(!o)throw Error(a(98,r,e))}}}}function w(e,t,n){if(k[e])throw Error(a(100,e));k[e]=t,O[e]=t.eventTypes[n].dependencies}var C=[],x={},k={},O={};function S(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!y.hasOwnProperty(t)||y[t]!==r){if(y[t])throw Error(a(102,t));y[t]=r,n=!0}}n&&E()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,A=null,_=null;function F(e){if(e=m(e)){if("function"!=typeof P)throw Error(a(280));var t=e.stateNode;t&&(t=h(t),P(e.stateNode,e.type,t))}}function D(e){A?_?_.push(e):_=[e]:A=e}function M(){if(A){var e=A,t=_;if(_=A=null,F(e),t)for(e=0;e<t.length;e++)F(t[e])}}function N(e,t){return e(t)}function I(e,t,n,r,o){return e(t,n,r,o)}function R(){}var L=N,j=!1,z=!1;function V(){null===A&&null===_||(R(),M())}function B(e,t,n){if(z)return e(t,n);z=!0;try{return L(e,t,n)}finally{z=!1,V()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,H={},Q={};function q(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var $={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){$[e]=new q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];$[t]=new q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){$[e]=new q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){$[e]=new q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){$[e]=new q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){$[e]=new q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){$[e]=new q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){$[e]=new q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){$[e]=new q(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,G);$[t]=new q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,G);$[t]=new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,G);$[t]=new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){$[e]=new q(e,1,!1,e.toLowerCase(),null,!1)})),$.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){$[e]=new q(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=$.hasOwnProperty(t)?$[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!W.call(Q,e)||!W.call(H,e)&&(U.test(e)?Q[e]=!0:(H[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,ae=J?Symbol.for("react.context"):60110,ue=J?Symbol.for("react.concurrent_mode"):60111,le=J?Symbol.for("react.forward_ref"):60112,se=J?Symbol.for("react.suspense"):60113,ce=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,pe=J?Symbol.for("react.lazy"):60116,de=J?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function me(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case se:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case de:return ve(e.render);case pe:if(e=1===e._status?e._result:null)return ve(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ve(e.type);n=null,r&&(n=ve(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function be(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ye(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ee(e){e._valueTracker||(e._valueTracker=function(e){var t=ye(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ye(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ce(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=be(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function ke(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Oe(e,t){ke(e,t);var n=be(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,n):t.hasOwnProperty("defaultValue")&&Te(e,t.type,be(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Se(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Te(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Ae(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+be(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function _e(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Fe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:be(n)}}function De(e,t){var n=be(t.value),r=be(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Me(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Ne="http://www.w3.org/1999/xhtml",Ie="http://www.w3.org/2000/svg";function Re(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Re(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var je,ze=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==Ie||"innerHTML"in e)e.innerHTML=t;else{for((je=je||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=je.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ue={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},We={},He={};function Qe(e){if(We[e])return We[e];if(!Ue[e])return e;var t,n=Ue[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return We[e]=n[t];return e}T&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete Ue.animationend.animation,delete Ue.animationiteration.animation,delete Ue.animationstart.animation),"TransitionEvent"in window||delete Ue.transitionend.transition);var qe=Qe("animationend"),$e=Qe("animationiteration"),Ke=Qe("animationstart"),Ge=Qe("transitionend"),Ye="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Ze(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Je(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Je(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return tt(o),e;if(i===r)return tt(o),t;i=i.sibling}throw Error(a(188))}if(n.return!==r.return)n=o,r=i;else{for(var u=!1,l=o.child;l;){if(l===n){u=!0,n=o,r=i;break}if(l===r){u=!0,r=o,n=i;break}l=l.sibling}if(!u){for(l=i.child;l;){if(l===n){u=!0,n=i,r=o;break}if(l===r){u=!0,r=i,n=o;break}l=l.sibling}if(!u)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function ut(e){if(null!==e&&(it=rt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(c)throw e=f,c=!1,f=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function st(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function pt(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=lt(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var u=null,l=0;l<C.length;l++){var s=C[l];s&&(s=s.extractEvents(r,t,i,o,a))&&(u=rt(u,s))}ut(u)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":st(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ye.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,vt,gt,bt=!1,yt=[],Et=null,wt=null,Ct=null,xt=new Map,kt=new Map,Ot=[],St="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function At(e,t){switch(e){case"focus":case"blur":Et=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":Ct=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":kt.delete(t.pointerId)}}function _t(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=Pt(t,n,r,o,i),null!==t&&(null!==(t=Pn(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function Ft(e){var t=Tn(e.target);if(null!==t){var n=Je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){gt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){Dt(e)&&n.delete(t)}function Nt(){for(bt=!1;0<yt.length;){var e=yt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&mt(e);break}var t=Zt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:yt.shift()}null!==Et&&Dt(Et)&&(Et=null),null!==wt&&Dt(wt)&&(wt=null),null!==Ct&&Dt(Ct)&&(Ct=null),xt.forEach(Mt),kt.forEach(Mt)}function It(e,t){e.blockedOn===t&&(e.blockedOn=null,bt||(bt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Nt)))}function Rt(e){function t(t){return It(t,e)}if(0<yt.length){It(yt[0],e);for(var n=1;n<yt.length;n++){var r=yt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Et&&It(Et,e),null!==wt&&It(wt,e),null!==Ct&&It(Ct,e),xt.forEach(t),kt.forEach(t),n=0;n<Ot.length;n++)(r=Ot[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Ft(n),null===n.blockedOn&&Ot.shift()}var Lt={},jt=new Map,zt=new Map,Vt=["abort","abort",qe,"animationEnd",$e,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ge,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},zt.set(r,t),jt.set(r,i),Lt[o]=i}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Vt,2);for(var Ut="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Wt=0;Wt<Ut.length;Wt++)zt.set(Ut[Wt],0);var Ht=i.unstable_UserBlockingPriority,Qt=i.unstable_runWithPriority,qt=!0;function $t(e,t){Kt(t,e,!1)}function Kt(e,t,n){var r=zt.get(t);switch(void 0===r?2:r){case 0:r=Gt.bind(null,t,1,e);break;case 1:r=Yt.bind(null,t,1,e);break;default:r=Xt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Gt(e,t,n,r){j||R();var o=Xt,i=j;j=!0;try{I(o,e,t,n,r)}finally{(j=i)||V()}}function Yt(e,t,n,r){Qt(Ht,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){if(qt)if(0<yt.length&&-1<St.indexOf(e))e=Pt(null,e,t,n,r),yt.push(e);else{var o=Zt(e,t,n,r);if(null===o)At(e,r);else if(-1<St.indexOf(e))e=Pt(o,e,t,n,r),yt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return Et=_t(Et,e,t,n,r,o),!0;case"dragenter":return wt=_t(wt,e,t,n,r,o),!0;case"mouseover":return Ct=_t(Ct,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,_t(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,kt.set(i,_t(kt.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){At(e,r),e=pt(e,r,null,t);try{B(dt,e)}finally{ft(e)}}}}function Zt(e,t,n,r){if(null!==(n=Tn(n=lt(r)))){var o=Je(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=et(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=pt(e,r,n,t);try{B(dt,e)}finally{ft(e)}return null}var Jt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Jt.hasOwnProperty(e)&&Jt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Jt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Jt[t]=Jt[e]}))}));var rn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var un=Ne;function ln(e,t){var n=Ze(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=O[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function sn(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function pn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function dn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mn=null,vn=null;function gn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function bn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var yn="function"==typeof setTimeout?setTimeout:void 0,En="function"==typeof clearTimeout?clearTimeout:void 0;function wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Cn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var xn=Math.random().toString(36).slice(2),kn="__reactInternalInstance$"+xn,On="__reactEventHandlers$"+xn,Sn="__reactContainere$"+xn;function Tn(e){var t=e[kn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Sn]||n[kn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Cn(e);null!==e;){if(n=e[kn])return n;e=Cn(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[kn]||e[Sn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function An(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function _n(e){return e[On]||null}function Fn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Dn(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function Mn(e,t,n){(t=Dn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Nn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Fn(t);for(t=n.length;0<t--;)Mn(n[t],"captured",e);for(t=0;t<n.length;t++)Mn(n[t],"bubbled",e)}}function In(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Dn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Rn(e){e&&e.dispatchConfig.registrationName&&In(e._targetInst,null,e)}function Ln(e){ot(e,Nn)}var jn=null,zn=null,Vn=null;function Bn(){if(Vn)return Vn;var e,t,n=zn,r=n.length,o="value"in jn?jn.value:jn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return Vn=o.slice(e,1<t?1-t:void 0)}function Un(){return!0}function Wn(){return!1}function Hn(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Un:Wn,this.isPropagationStopped=Wn,this}function Qn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function qn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function $n(e){e.eventPool=[],e.getPooled=Qn,e.release=qn}o(Hn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Un)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Un)},persist:function(){this.isPersistent=Un},isPersistent:Wn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wn,this._dispatchInstances=this._dispatchListeners=null}}),Hn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Hn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,$n(n),n},$n(Hn);var Kn=Hn.extend({data:null}),Gn=Hn.extend({data:null}),Yn=[9,13,27,32],Xn=T&&"CompositionEvent"in window,Zn=null;T&&"documentMode"in document&&(Zn=document.documentMode);var Jn=T&&"TextEvent"in window&&!Zn,er=T&&(!Xn||Zn&&8<Zn&&11>=Zn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function or(e,t){switch(e){case"keyup":return-1!==Yn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var ur={eventTypes:nr,extractEvents:function(e,t,n,r){var o;if(Xn)e:{switch(e){case"compositionstart":var i=nr.compositionStart;break e;case"compositionend":i=nr.compositionEnd;break e;case"compositionupdate":i=nr.compositionUpdate;break e}i=void 0}else ar?or(e,n)&&(i=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=nr.compositionStart);return i?(er&&"ko"!==n.locale&&(ar||i!==nr.compositionStart?i===nr.compositionEnd&&ar&&(o=Bn()):(zn="value"in(jn=r)?jn.value:jn.textContent,ar=!0)),i=Kn.getPooled(i,t,n,r),o?i.data=o:null!==(o=ir(n))&&(i.data=o),Ln(i),o=i):o=null,(e=Jn?function(e,t){switch(e){case"compositionend":return ir(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Xn&&or(e,t)?(e=Bn(),Vn=zn=jn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Gn.getPooled(nr.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===o?t:null===t?o:[o,t]}},lr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function sr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!lr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Hn.getPooled(cr.change,e,t,n)).type="change",D(n),Ln(e),e}var pr=null,dr=null;function hr(e){ut(e)}function mr(e){if(we(An(e)))return e}function vr(e,t){if("change"===e)return t}var gr=!1;function br(){pr&&(pr.detachEvent("onpropertychange",yr),dr=pr=null)}function yr(e){if("value"===e.propertyName&&mr(dr))if(e=fr(dr,e,lt(e)),j)ut(e);else{j=!0;try{N(hr,e)}finally{j=!1,V()}}}function Er(e,t,n){"focus"===e?(br(),dr=n,(pr=t).attachEvent("onpropertychange",yr)):"blur"===e&&br()}function wr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return mr(dr)}function Cr(e,t){if("click"===e)return mr(t)}function xr(e,t){if("input"===e||"change"===e)return mr(t)}T&&(gr=st("input")&&(!document.documentMode||9<document.documentMode));var kr={eventTypes:cr,_isInputEventSupported:gr,extractEvents:function(e,t,n,r){var o=t?An(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=vr;else if(sr(o))if(gr)a=xr;else{a=wr;var u=Er}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=Cr);if(a&&(a=a(e,t)))return fr(a,n,r);u&&u(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Te(o,"number",o.value)}},Or=Hn.extend({view:null,detail:null}),Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Pr(){return Tr}var Ar=0,_r=0,Fr=!1,Dr=!1,Mr=Or.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Pr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ar;return Ar=e.screenX,Fr?"mousemove"===e.type?e.screenX-t:0:(Fr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=_r;return _r=e.screenY,Dr?"mousemove"===e.type?e.screenY-t:0:(Dr=!0,0)}}),Nr=Mr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Ir={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Rr={eventTypes:Ir,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!a&&!i)return null;(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Tn(t):null)&&(t!==Je(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var u=Mr,l=Ir.mouseLeave,s=Ir.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(u=Nr,l=Ir.pointerLeave,s=Ir.pointerEnter,c="pointer");if(e=null==a?i:An(a),i=null==t?i:An(t),(l=u.getPooled(l,a,n,r)).type=c+"leave",l.target=e,l.relatedTarget=i,(n=u.getPooled(s,t,n,r)).type=c+"enter",n.target=i,n.relatedTarget=e,c=t,(r=a)&&c)e:{for(s=c,a=0,e=u=r;e;e=Fn(e))a++;for(e=0,t=s;t;t=Fn(t))e++;for(;0<a-e;)u=Fn(u),a--;for(;0<e-a;)s=Fn(s),e--;for(;a--;){if(u===s||u===s.alternate)break e;u=Fn(u),s=Fn(s)}u=null}else u=null;for(s=u,u=[];r&&r!==s&&(null===(a=r.alternate)||a!==s);)u.push(r),r=Fn(r);for(r=[];c&&c!==s&&(null===(a=c.alternate)||a!==s);)r.push(c),c=Fn(c);for(c=0;c<u.length;c++)In(u[c],"bubbled",l);for(c=r.length;0<c--;)In(r[c],"captured",n);return 0==(64&o)?[l]:[l,n]}};var Lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},jr=Object.prototype.hasOwnProperty;function zr(e,t){if(Lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!jr.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var Vr=T&&"documentMode"in document&&11>=document.documentMode,Br={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Ur=null,Wr=null,Hr=null,Qr=!1;function qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qr||null==Ur||Ur!==cn(n)?null:("selectionStart"in(n=Ur)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hr&&zr(Hr,n)?null:(Hr=n,(e=Hn.getPooled(Br.select,Wr,e,t)).type="select",e.target=Ur,Ln(e),e))}var $r={eventTypes:Br,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Ze(o),i=O.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?An(t):window,e){case"focus":(sr(o)||"true"===o.contentEditable)&&(Ur=o,Wr=t,Hr=null);break;case"blur":Hr=Wr=Ur=null;break;case"mousedown":Qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qr=!1,qr(n,r);case"selectionchange":if(Vr)break;case"keydown":case"keyup":return qr(n,r)}return null}},Kr=Hn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Gr=Hn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Yr=Or.extend({relatedTarget:null});function Xr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Zr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=Or.extend({key:function(e){if(e.key){var t=Zr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Jr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Pr,charCode:function(e){return"keypress"===e.type?Xr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=Mr.extend({dataTransfer:null}),no=Or.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Pr}),ro=Hn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=Mr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Lt,extractEvents:function(e,t,n,r){var o=jt.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xr(n))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Yr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Mr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=no;break;case qe:case $e:case Ke:e=Kr;break;case Ge:e=ro;break;case"scroll":e=Or;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Gr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Nr;break;default:e=Hn}return Ln(t=e.getPooled(o,t,n,r)),t}};if(b)throw Error(a(101));b=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),E(),h=_n,m=Pn,v=An,S({SimpleEventPlugin:io,EnterLeaveEventPlugin:Rr,ChangeEventPlugin:kr,SelectEventPlugin:$r,BeforeInputEventPlugin:ur});var ao=[],uo=-1;function lo(e){0>uo||(e.current=ao[uo],ao[uo]=null,uo--)}function so(e,t){uo++,ao[uo]=e.current,e.current=t}var co={},fo={current:co},po={current:!1},ho=co;function mo(e,t){var n=e.type.contextTypes;if(!n)return co;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function vo(e){return null!=(e=e.childContextTypes)}function go(){lo(po),lo(fo)}function bo(e,t,n){if(fo.current!==co)throw Error(a(168));so(fo,t),so(po,n)}function yo(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(a(108,ve(t)||"Unknown",i));return o({},n,{},r)}function Eo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||co,ho=fo.current,so(fo,e),so(po,po.current),!0}function wo(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=yo(e,t,ho),r.__reactInternalMemoizedMergedChildContext=e,lo(po),lo(fo),so(fo,e)):lo(po),so(po,n)}var Co=i.unstable_runWithPriority,xo=i.unstable_scheduleCallback,ko=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,So=i.unstable_now,To=i.unstable_getCurrentPriorityLevel,Po=i.unstable_ImmediatePriority,Ao=i.unstable_UserBlockingPriority,_o=i.unstable_NormalPriority,Fo=i.unstable_LowPriority,Do=i.unstable_IdlePriority,Mo={},No=i.unstable_shouldYield,Io=void 0!==Oo?Oo:function(){},Ro=null,Lo=null,jo=!1,zo=So(),Vo=1e4>zo?So:function(){return So()-zo};function Bo(){switch(To()){case Po:return 99;case Ao:return 98;case _o:return 97;case Fo:return 96;case Do:return 95;default:throw Error(a(332))}}function Uo(e){switch(e){case 99:return Po;case 98:return Ao;case 97:return _o;case 96:return Fo;case 95:return Do;default:throw Error(a(332))}}function Wo(e,t){return e=Uo(e),Co(e,t)}function Ho(e,t,n){return e=Uo(e),xo(e,t,n)}function Qo(e){return null===Ro?(Ro=[e],Lo=xo(Po,$o)):Ro.push(e),Mo}function qo(){if(null!==Lo){var e=Lo;Lo=null,ko(e)}$o()}function $o(){if(!jo&&null!==Ro){jo=!0;var e=0;try{var t=Ro;Wo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ro=null}catch(t){throw null!==Ro&&(Ro=Ro.slice(e+1)),xo(Po,qo),t}finally{jo=!1}}}function Ko(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Go(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Yo={current:null},Xo=null,Zo=null,Jo=null;function ei(){Jo=Zo=Xo=null}function ti(e){var t=Yo.current;lo(Yo),e.type._context._currentValue=t}function ni(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ri(e,t){Xo=e,Jo=Zo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(_a=!0),e.firstContext=null)}function oi(e,t){if(Jo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Jo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Zo){if(null===Xo)throw Error(a(308));Zo=t,Xo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Zo=Zo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ui(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function li(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function si(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ci(e,t){var n=e.alternate;null!==n&&ui(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fi(e,t,n,r){var i=e.updateQueue;ii=!1;var a=i.baseQueue,u=i.shared.pending;if(null!==u){if(null!==a){var l=a.next;a.next=u.next,u.next=l}a=u,i.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=u))}if(null!==a){l=a.next;var s=i.baseState,c=0,f=null,p=null,d=null;if(null!==l)for(var h=l;;){if((u=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===d?(p=d=m,f=s):d=d.next=m,u>c&&(c=u)}else{null!==d&&(d=d.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),il(u,h.suspenseConfig);e:{var v=e,g=h;switch(u=t,m=n,g.tag){case 1:if("function"==typeof(v=g.payload)){s=v.call(m,s,u);break e}s=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(u="function"==typeof(v=g.payload)?v.call(m,s,u):v))break e;s=o({},s,u);break e;case 2:ii=!0}}null!==h.callback&&(e.effectTag|=32,null===(u=i.effects)?i.effects=[h]:u.push(h))}if(null===(h=h.next)||h===l){if(null===(u=i.shared.pending))break;h=a.next=u.next,u.next=l,i.baseQueue=a=u,i.shared.pending=null}}null===d?f=s:d.next=p,i.baseState=f,i.baseQueue=d,al(c),e.expirationTime=c,e.memoizedState=s}}function pi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(a(191,r));r.call(o)}}}var di=Y.ReactCurrentBatchConfig,hi=(new r.Component).refs;function mi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=qu(),o=di.suspense;(o=li(r=$u(r,e,o),o)).payload=t,null!=n&&(o.callback=n),si(e,o),Ku(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=qu(),o=di.suspense;(o=li(r=$u(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),si(e,o),Ku(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=qu(),r=di.suspense;(r=li(n=$u(n,e,r),r)).tag=2,null!=t&&(r.callback=t),si(e,r),Ku(e,n)}};function gi(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!zr(n,r)||!zr(o,i))}function bi(e,t,n){var r=!1,o=co,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=vo(t)?ho:fo.current,i=(r=null!=(r=t.contextTypes))?mo(e,o):co),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vi.enqueueReplaceState(t,t.state,null)}function Ei(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=hi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=vo(t)?ho:fo.current,o.context=mo(e,i)),fi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(mi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&vi.enqueueReplaceState(o,o.state,null),fi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var wi=Array.isArray;function Ci(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===hi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function xi(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function ki(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Sl(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function u(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Al(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Ci(e,t,n),r.return=e,r):((r=Tl(n.type,n.key,n.props,null,e.mode,r)).ref=Ci(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=_l(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Pl(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Al(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Tl(t.type,t.key,t.props,null,e.mode,n)).ref=Ci(e,null,t),n.return=e,n;case te:return(t=_l(t,e.mode,n)).return=e,t}if(wi(t)||me(t))return(t=Pl(t,e.mode,n,null)).return=e,t;xi(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case te:return n.key===o?c(e,t,n,r):null}if(wi(n)||me(n))return null!==o?null:f(e,t,n,r,null);xi(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(wi(r)||me(r))return f(t,e=e.get(n)||null,r,o,null);xi(t,r)}return null}function m(o,a,u,l){for(var s=null,c=null,f=a,m=a=0,v=null;null!==f&&m<u.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var g=d(o,f,u[m],l);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(o,f),a=i(g,a,m),null===c?s=g:c.sibling=g,c=g,f=v}if(m===u.length)return n(o,f),s;if(null===f){for(;m<u.length;m++)null!==(f=p(o,u[m],l))&&(a=i(f,a,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);m<u.length;m++)null!==(v=h(f,o,m,u[m],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(o,e)})),s}function v(o,u,l,s){var c=me(l);if("function"!=typeof c)throw Error(a(150));if(null==(l=c.call(l)))throw Error(a(151));for(var f=c=null,m=u,v=u=0,g=null,b=l.next();null!==m&&!b.done;v++,b=l.next()){m.index>v?(g=m,m=null):g=m.sibling;var y=d(o,m,b.value,s);if(null===y){null===m&&(m=g);break}e&&m&&null===y.alternate&&t(o,m),u=i(y,u,v),null===f?c=y:f.sibling=y,f=y,m=g}if(b.done)return n(o,m),c;if(null===m){for(;!b.done;v++,b=l.next())null!==(b=p(o,b.value,s))&&(u=i(b,u,v),null===f?c=b:f.sibling=b,f=b);return c}for(m=r(o,m);!b.done;v++,b=l.next())null!==(b=h(m,o,v,b.value,s))&&(e&&null!==b.alternate&&m.delete(null===b.key?v:b.key),u=i(b,u,v),null===f?c=b:f.sibling=b,f=b);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,i,l){var s="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;s&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case ee:e:{for(c=i.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(i.type===ne){n(e,s.sibling),(r=o(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=o(s,i.props)).ref=Ci(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===ne?((r=Pl(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=Tl(i.type,i.key,i.props,null,e.mode,l)).ref=Ci(e,r,i),l.return=e,e=l)}return u(e);case te:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=_l(i,e.mode,l)).return=e,e=r}return u(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Al(i,e.mode,l)).return=e,e=r),u(e);if(wi(i))return m(e,r,i,l);if(me(i))return v(e,r,i,l);if(c&&xi(e,i),void 0===i&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var Oi=ki(!0),Si=ki(!1),Ti={},Pi={current:Ti},Ai={current:Ti},_i={current:Ti};function Fi(e){if(e===Ti)throw Error(a(174));return e}function Di(e,t){switch(so(_i,t),so(Ai,e),so(Pi,Ti),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Le(null,"");break;default:t=Le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Pi),so(Pi,t)}function Mi(){lo(Pi),lo(Ai),lo(_i)}function Ni(e){Fi(_i.current);var t=Fi(Pi.current),n=Le(t,e.type);t!==n&&(so(Ai,e),so(Pi,n))}function Ii(e){Ai.current===e&&(lo(Pi),lo(Ai))}var Ri={current:0};function Li(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function ji(e,t){return{responder:e,props:t}}var zi=Y.ReactCurrentDispatcher,Vi=Y.ReactCurrentBatchConfig,Bi=0,Ui=null,Wi=null,Hi=null,Qi=!1;function qi(){throw Error(a(321))}function $i(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Ki(e,t,n,r,o,i){if(Bi=i,Ui=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,zi.current=null===e||null===e.memoizedState?ga:ba,e=n(r,o),t.expirationTime===Bi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Hi=Wi=null,t.updateQueue=null,zi.current=ya,e=n(r,o)}while(t.expirationTime===Bi)}if(zi.current=va,t=null!==Wi&&null!==Wi.next,Bi=0,Hi=Wi=Ui=null,Qi=!1,t)throw Error(a(300));return e}function Gi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Hi?Ui.memoizedState=Hi=e:Hi=Hi.next=e,Hi}function Yi(){if(null===Wi){var e=Ui.alternate;e=null!==e?e.memoizedState:null}else e=Wi.next;var t=null===Hi?Ui.memoizedState:Hi.next;if(null!==t)Hi=t,Wi=e;else{if(null===e)throw Error(a(310));e={memoizedState:(Wi=e).memoizedState,baseState:Wi.baseState,baseQueue:Wi.baseQueue,queue:Wi.queue,next:null},null===Hi?Ui.memoizedState=Hi=e:Hi=Hi.next=e}return Hi}function Xi(e,t){return"function"==typeof t?t(e):t}function Zi(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=Wi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var u=o.next;o.next=i.next,i.next=u}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var l=u=i=null,s=o;do{var c=s.expirationTime;if(c<Bi){var f={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===l?(u=l=f,i=r):l=l.next=f,c>Ui.expirationTime&&(Ui.expirationTime=c,al(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),il(c,s.suspenseConfig),r=s.eagerReducer===e?s.eagerState:e(r,s.action);s=s.next}while(null!==s&&s!==o);null===l?i=r:l.next=u,Lr(r,t.memoizedState)||(_a=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ji(e){var t=Yi(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var u=o=o.next;do{i=e(i,u.action),u=u.next}while(u!==o);Lr(i,t.memoizedState)||(_a=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function ea(e){var t=Gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=ma.bind(null,Ui,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ui.updateQueue)?(t={lastEffect:null},Ui.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Yi().memoizedState}function ra(e,t,n,r){var o=Gi();Ui.effectTag|=e,o.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Yi();r=void 0===r?null:r;var i=void 0;if(null!==Wi){var a=Wi.memoizedState;if(i=a.destroy,null!==r&&$i(r,a.deps))return void ta(t,n,i,r)}Ui.effectTag|=e,o.memoizedState=ta(1|t,n,i,r)}function ia(e,t){return ra(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function ua(e,t){return oa(4,2,e,t)}function la(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function sa(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,2,la.bind(null,t,e),n)}function ca(){}function fa(e,t){return Gi().memoizedState=[e,void 0===t?null:t],e}function pa(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$i(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function da(e,t){var n=Yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&$i(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ha(e,t,n){var r=Bo();Wo(98>r?98:r,(function(){e(!0)})),Wo(97<r?97:r,(function(){var r=Vi.suspense;Vi.suspense=void 0===t?null:t;try{e(!1),n()}finally{Vi.suspense=r}}))}function ma(e,t,n){var r=qu(),o=di.suspense;o={expirationTime:r=$u(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Ui||null!==i&&i===Ui)Qi=!0,o.expirationTime=Bi,Ui.expirationTime=Bi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,u=i(a,n);if(o.eagerReducer=i,o.eagerState=u,Lr(u,a))return}catch(e){}Ku(e,r)}}var va={readContext:oi,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useResponder:qi,useDeferredValue:qi,useTransition:qi},ga={readContext:oi,useCallback:fa,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,la.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ma.bind(null,Ui,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Gi().memoizedState=e},useState:ea,useDebugValue:ca,useResponder:ji,useDeferredValue:function(e,t){var n=ea(e),r=n[0],o=n[1];return ia((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[fa(ha.bind(null,t,e),[t,e]),n]}},ba={readContext:oi,useCallback:pa,useContext:oi,useEffect:aa,useImperativeHandle:sa,useLayoutEffect:ua,useMemo:da,useReducer:Zi,useRef:na,useState:function(){return Zi(Xi)},useDebugValue:ca,useResponder:ji,useDeferredValue:function(e,t){var n=Zi(Xi),r=n[0],o=n[1];return aa((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zi(Xi),n=t[0];return t=t[1],[pa(ha.bind(null,t,e),[t,e]),n]}},ya={readContext:oi,useCallback:pa,useContext:oi,useEffect:aa,useImperativeHandle:sa,useLayoutEffect:ua,useMemo:da,useReducer:Ji,useRef:na,useState:function(){return Ji(Xi)},useDebugValue:ca,useResponder:ji,useDeferredValue:function(e,t){var n=Ji(Xi),r=n[0],o=n[1];return aa((function(){var n=Vi.suspense;Vi.suspense=void 0===t?null:t;try{o(e)}finally{Vi.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ji(Xi),n=t[0];return t=t[1],[pa(ha.bind(null,t,e),[t,e]),n]}},Ea=null,wa=null,Ca=!1;function xa(e,t){var n=kl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ka(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Oa(e){if(Ca){var t=wa;if(t){var n=t;if(!ka(e,t)){if(!(t=wn(n.nextSibling))||!ka(e,t))return e.effectTag=-1025&e.effectTag|2,Ca=!1,void(Ea=e);xa(Ea,n)}Ea=e,wa=wn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ca=!1,Ea=e}}function Sa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ea=e}function Ta(e){if(e!==Ea)return!1;if(!Ca)return Sa(e),Ca=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!bn(t,e.memoizedProps))for(t=wa;t;)xa(e,t),t=wn(t.nextSibling);if(Sa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){wa=wn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}wa=null}}else wa=Ea?wn(e.stateNode.nextSibling):null;return!0}function Pa(){wa=Ea=null,Ca=!1}var Aa=Y.ReactCurrentOwner,_a=!1;function Fa(e,t,n,r){t.child=null===e?Si(t,null,n,r):Oi(t,e.child,n,r)}function Da(e,t,n,r,o){n=n.render;var i=t.ref;return ri(t,o),r=Ki(e,t,n,r,i,o),null===e||_a?(t.effectTag|=1,Fa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function Ma(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Ol(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Tl(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Na(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:zr)(o,r)&&e.ref===t.ref)?Ka(e,t,i):(t.effectTag|=1,(e=Sl(a,r)).ref=t.ref,e.return=t,t.child=e)}function Na(e,t,n,r,o,i){return null!==e&&zr(e.memoizedProps,r)&&e.ref===t.ref&&(_a=!1,o<i)?(t.expirationTime=e.expirationTime,Ka(e,t,i)):Ra(e,t,n,r,i)}function Ia(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ra(e,t,n,r,o){var i=vo(n)?ho:fo.current;return i=mo(t,i),ri(t,o),n=Ki(e,t,n,r,i,o),null===e||_a?(t.effectTag|=1,Fa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function La(e,t,n,r,o){if(vo(n)){var i=!0;Eo(t)}else i=!1;if(ri(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),bi(t,n,r),Ei(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,u=t.memoizedProps;a.props=u;var l=a.context,s=n.contextType;"object"==typeof s&&null!==s?s=oi(s):s=mo(t,s=vo(n)?ho:fo.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,a,r,s),ii=!1;var p=t.memoizedState;a.state=p,fi(t,r,a,o),l=t.memoizedState,u!==r||p!==l||po.current||ii?("function"==typeof c&&(mi(t,n,c,r),l=t.memoizedState),(u=ii||gi(t,n,u,r,p,l,s))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),a.props=r,a.state=l,a.context=s,r=u):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,ui(e,t),u=t.memoizedProps,a.props=t.type===t.elementType?u:Go(t.type,u),l=a.context,"object"==typeof(s=n.contextType)&&null!==s?s=oi(s):s=mo(t,s=vo(n)?ho:fo.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(u!==r||l!==s)&&yi(t,a,r,s),ii=!1,l=t.memoizedState,a.state=l,fi(t,r,a,o),p=t.memoizedState,u!==r||l!==p||po.current||ii?("function"==typeof c&&(mi(t,n,c,r),p=t.memoizedState),(c=ii||gi(t,n,u,r,l,p,s))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=s,r=c):("function"!=typeof a.componentDidUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||u===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return ja(e,t,n,r,i,o)}function ja(e,t,n,r,o,i){Ia(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&wo(t,n,!1),Ka(e,t,i);r=t.stateNode,Aa.current=t;var u=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,u,i)):Fa(e,t,u,i),t.memoizedState=r.state,o&&wo(t,n,!0),t.child}function za(e){var t=e.stateNode;t.pendingContext?bo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&bo(0,t.context,!1),Di(e,t.containerInfo)}var Va,Ba,Ua,Wa={dehydrated:null,retryTime:0};function Ha(e,t,n){var r,o=t.mode,i=t.pendingProps,a=Ri.current,u=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(u=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),so(Ri,1&a),null===e){if(void 0!==i.fallback&&Oa(t),u){if(u=i.fallback,(i=Pl(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Pl(u,o,n,null)).return=t,i.sibling=n,t.memoizedState=Wa,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Si(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,u){if(i=i.fallback,(n=Sl(e,e.pendingProps)).return=t,0==(2&t.mode)&&(u=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=u;null!==u;)u.return=n,u=u.sibling;return(o=Sl(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Wa,t.child=n,o}return n=Oi(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,u){if(u=i.fallback,(i=Pl(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Pl(u,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Wa,t.child=i,n}return t.memoizedState=null,t.child=Oi(t,e,i.children,n)}function Qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),ni(e.return,t)}function qa(e,t,n,r,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function $a(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(Fa(e,t,r.children,n),0!=(2&(r=Ri.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Qa(e,n);else if(19===e.tag)Qa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(so(Ri,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Li(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),qa(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Li(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}qa(t,!0,n,null,i,t.lastEffect);break;case"together":qa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ka(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&al(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Sl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Sl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ga(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ya(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return vo(t.type)&&go(),null;case 3:return Mi(),lo(po),lo(fo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ta(t)||(t.effectTag|=4),null;case 5:Ii(t),n=Fi(_i.current);var i=t.type;if(null!==e&&null!=t.stateNode)Ba(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Fi(Pi.current),Ta(t)){r=t.stateNode,i=t.type;var u=t.memoizedProps;switch(r[kn]=t,r[On]=u,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ye.length;e++)$t(Ye[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":xe(r,u),$t("invalid",r),ln(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!u.multiple},$t("invalid",r),ln(n,"onChange");break;case"textarea":Fe(r,u),$t("invalid",r),ln(n,"onChange")}for(var l in on(i,u),e=null,u)if(u.hasOwnProperty(l)){var s=u[l];"children"===l?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):k.hasOwnProperty(l)&&null!=s&&ln(n,l)}switch(i){case"input":Ee(r),Se(r,u,!0);break;case"textarea":Ee(r),Me(r);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(r.onclick=sn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===un&&(e=Re(i)),e===un?"script"===i?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(i,{is:r.is}):(e=l.createElement(i),"select"===i&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,i),e[kn]=t,e[On]=r,Va(e,t),t.stateNode=e,l=an(i,r),i){case"iframe":case"object":case"embed":$t("load",e),s=r;break;case"video":case"audio":for(s=0;s<Ye.length;s++)$t(Ye[s],e);s=r;break;case"source":$t("error",e),s=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),s=r;break;case"form":$t("reset",e),$t("submit",e),s=r;break;case"details":$t("toggle",e),s=r;break;case"input":xe(e,r),s=Ce(e,r),$t("invalid",e),ln(n,"onChange");break;case"option":s=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=o({},r,{value:void 0}),$t("invalid",e),ln(n,"onChange");break;case"textarea":Fe(e,r),s=_e(e,r),$t("invalid",e),ln(n,"onChange");break;default:s=r}on(i,s);var c=s;for(u in c)if(c.hasOwnProperty(u)){var f=c[u];"style"===u?nn(e,f):"dangerouslySetInnerHTML"===u?null!=(f=f?f.__html:void 0)&&ze(e,f):"children"===u?"string"==typeof f?("textarea"!==i||""!==f)&&Ve(e,f):"number"==typeof f&&Ve(e,""+f):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(k.hasOwnProperty(u)?null!=f&&ln(n,u):null!=f&&X(e,u,f,l))}switch(i){case"input":Ee(e),Se(e,r,!1);break;case"textarea":Ee(e),Me(e);break;case"option":null!=r.value&&e.setAttribute("value",""+be(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Ae(e,!!r.multiple,n,!1):null!=r.defaultValue&&Ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=sn)}gn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ua(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Fi(_i.current),Fi(Pi.current),Ta(t)?(n=t.stateNode,r=t.memoizedProps,n[kn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[kn]=t,t.stateNode=n)}return null;case 13:return lo(Ri),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ta(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(u=t.firstEffect)?(t.firstEffect=i,i.nextEffect=u):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ri.current)?Tu===Eu&&(Tu=wu):(Tu!==Eu&&Tu!==wu||(Tu=Cu),0!==Du&&null!==ku&&(Ml(ku,Su),Nl(ku,Du)))),(n||r)&&(t.effectTag|=4),null);case 4:return Mi(),null;case 10:return ti(t),null;case 17:return vo(t.type)&&go(),null;case 19:if(lo(Ri),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(u=r.rendering)){if(i)Ga(r,!1);else if(Tu!==Eu||null!==e&&0!=(64&e.effectTag))for(u=t.child;null!==u;){if(null!==(e=Li(u))){for(t.effectTag|=64,Ga(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)u=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=u,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,u=e.dependencies,i.dependencies=null===u?null:{expirationTime:u.expirationTime,firstContext:u.firstContext,responders:u.responders}),r=r.sibling;return so(Ri,1&Ri.current|2),t.child}u=u.sibling}}else{if(!i)if(null!==(e=Li(u))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ga(r,!0),null===r.tail&&"hidden"===r.tailMode&&!u.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Vo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Ga(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=r.last)?n.sibling=u:t.child=u,r.last=u)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Vo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Vo(),n.sibling=null,t=Ri.current,so(Ri,i?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Xa(e){switch(e.tag){case 1:vo(e.type)&&go();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Mi(),lo(po),lo(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return Ii(e),null;case 13:return lo(Ri),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return lo(Ri),null;case 4:return Mi(),null;case 10:return ti(e),null;default:return null}}function Za(e,t){return{value:e,source:t,stack:ge(t)}}Va=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ba=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var u,l,s=t.stateNode;switch(Fi(Pi.current),e=null,n){case"input":a=Ce(s,a),r=Ce(s,r),e=[];break;case"option":a=Pe(s,a),r=Pe(s,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=_e(s,a),r=_e(s,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(s.onclick=sn)}for(u in on(n,r),n=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u)for(l in s=a[u])s.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(k.hasOwnProperty(u)?e||(e=[]):(e=e||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(u,c)):"children"===u?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(k.hasOwnProperty(u)?(null!=c&&ln(i,u),e||s===c||(e=[])):(e=e||[]).push(u,c))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Ua=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Ja="function"==typeof WeakSet?WeakSet:Set;function eu(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tu(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){bl(e,t)}else t.current=null}function nu(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Go(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ou(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function iu(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ou(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Go(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&pi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}pi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Rt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function au(e,t,n){switch("function"==typeof Cl&&Cl(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Wo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){bl(o,e)}}e=e.next}while(e!==r)}))}break;case 1:tu(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){bl(e,t)}}(t,n);break;case 5:tu(t);break;case 4:cu(e,t,n)}}function uu(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&uu(t)}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function su(e){e:{for(var t=e.return;null!==t;){if(lu(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Ve(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||lu(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=sn));else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function cu(e,t,n){for(var r,o,i=t,u=!1;;){if(!u){u=i.return;e:for(;;){if(null===u)throw Error(a(160));switch(r=u.stateNode,u.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}u=u.return}u=!0}if(5===i.tag||6===i.tag){e:for(var l=e,s=i,c=n,f=s;;)if(au(l,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===s)break e;for(;null===f.sibling;){if(null===f.return||f.return===s)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(l=r,s=i.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(au(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(u=!1)}i.sibling.return=i.return,i=i.sibling}}function fu(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ru(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[On]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ke(n,r),an(e,o),t=an(e,r),o=0;o<i.length;o+=2){var u=i[o],l=i[o+1];"style"===u?nn(n,l):"dangerouslySetInnerHTML"===u?ze(n,l):"children"===u?Ve(n,l):X(n,u,l,t)}switch(e){case"input":Oe(n,r);break;case"textarea":De(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Ae(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Ae(n,!!r.multiple,r.defaultValue,!0):Ae(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Rt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Nu=Vo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tn("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void pu(t);case 19:return void pu(t);case 17:return}throw Error(a(163))}function pu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ja),t.forEach((function(t){var r=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var du="function"==typeof WeakMap?WeakMap:Map;function hu(e,t,n){(n=li(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ru||(Ru=!0,Lu=r),eu(e,t)},n}function mu(e,t,n){(n=li(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return eu(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===ju?ju=new Set([this]):ju.add(this),eu(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vu,gu=Math.ceil,bu=Y.ReactCurrentDispatcher,yu=Y.ReactCurrentOwner,Eu=0,wu=3,Cu=4,xu=0,ku=null,Ou=null,Su=0,Tu=Eu,Pu=null,Au=1073741823,_u=1073741823,Fu=null,Du=0,Mu=!1,Nu=0,Iu=null,Ru=!1,Lu=null,ju=null,zu=!1,Vu=null,Bu=90,Uu=null,Wu=0,Hu=null,Qu=0;function qu(){return 0!=(48&xu)?1073741821-(Vo()/10|0):0!==Qu?Qu:Qu=1073741821-(Vo()/10|0)}function $u(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Bo();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&xu))return Su;if(null!==n)e=Ko(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ko(e,150,100);break;case 97:case 96:e=Ko(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==ku&&e===Su&&--e,e}function Ku(e,t){if(50<Wu)throw Wu=0,Hu=null,Error(a(185));if(null!==(e=Gu(e,t))){var n=Bo();1073741823===t?0!=(8&xu)&&0==(48&xu)?Ju(e):(Xu(e),0===xu&&qo()):Xu(e),0==(4&xu)||98!==n&&99!==n||(null===Uu?Uu=new Map([[e,t]]):(void 0===(n=Uu.get(e))||n>t)&&Uu.set(e,t))}}function Gu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(ku===o&&(al(t),Tu===Cu&&Ml(o,Su)),Nl(o,t)),o}function Yu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Dl(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Xu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Qo(Ju.bind(null,e));else{var t=Yu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=qu();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Mo&&ko(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Qo(Ju.bind(null,e)):Ho(r,Zu.bind(null,e),{timeout:10*(1073741821-t)-Vo()}),e.callbackNode=t}}}function Zu(e,t){if(Qu=0,t)return Il(e,t=qu()),Xu(e),null;var n=Yu(e);if(0!==n){if(t=e.callbackNode,0!=(48&xu))throw Error(a(327));if(ml(),e===ku&&n===Su||nl(e,n),null!==Ou){var r=xu;xu|=16;for(var o=ol();;)try{ll();break}catch(t){rl(e,t)}if(ei(),xu=r,bu.current=o,1===Tu)throw t=Pu,nl(e,n),Ml(e,n),Xu(e),t;if(null===Ou)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Tu,ku=null,r){case Eu:case 1:throw Error(a(345));case 2:Il(e,2<n?2:n);break;case wu:if(Ml(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(o)),1073741823===Au&&10<(o=Nu+500-Vo())){if(Mu){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(i=Yu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=yn(pl.bind(null,e),o);break}pl(e);break;case Cu:if(Ml(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(o)),Mu&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(o=Yu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==_u?r=10*(1073741821-_u)-Vo():1073741823===Au?r=0:(r=10*(1073741821-Au)-5e3,0>(r=(o=Vo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*gu(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=yn(pl.bind(null,e),r);break}pl(e);break;case 5:if(1073741823!==Au&&null!==Fu){i=Au;var u=Fu;if(0>=(r=0|u.busyMinDurationMs)?r=0:(o=0|u.busyDelayMs,r=(i=Vo()-(10*(1073741821-i)-(0|u.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Ml(e,n),e.timeoutHandle=yn(pl.bind(null,e),r);break}}pl(e);break;default:throw Error(a(329))}if(Xu(e),e.callbackNode===t)return Zu.bind(null,e)}}return null}function Ju(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&xu))throw Error(a(327));if(ml(),e===ku&&t===Su||nl(e,t),null!==Ou){var n=xu;xu|=16;for(var r=ol();;)try{ul();break}catch(t){rl(e,t)}if(ei(),xu=n,bu.current=r,1===Tu)throw n=Pu,nl(e,t),Ml(e,t),Xu(e),n;if(null!==Ou)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,ku=null,pl(e),Xu(e)}return null}function el(e,t){var n=xu;xu|=1;try{return e(t)}finally{0===(xu=n)&&qo()}}function tl(e,t){var n=xu;xu&=-2,xu|=8;try{return e(t)}finally{0===(xu=n)&&qo()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,En(n)),null!==Ou)for(n=Ou.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&go();break;case 3:Mi(),lo(po),lo(fo);break;case 5:Ii(r);break;case 4:Mi();break;case 13:case 19:lo(Ri);break;case 10:ti(r)}n=n.return}ku=e,Ou=Sl(e.current,null),Su=t,Tu=Eu,Pu=null,_u=Au=1073741823,Fu=null,Du=0,Mu=!1}function rl(e,t){for(;;){try{if(ei(),zi.current=va,Qi)for(var n=Ui.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Bi=0,Hi=Wi=Ui=null,Qi=!1,null===Ou||null===Ou.return)return Tu=1,Pu=t,Ou=null;e:{var o=e,i=Ou.return,a=Ou,u=t;if(t=Su,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var l=u;if(0==(2&a.mode)){var s=a.alternate;s?(a.updateQueue=s.updateQueue,a.memoizedState=s.memoizedState,a.expirationTime=s.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var c=0!=(1&Ri.current),f=i;do{var p;if(p=13===f.tag){var d=f.memoizedState;if(null!==d)p=null!==d.dehydrated;else{var h=f.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(p){var m=f.updateQueue;if(null===m){var v=new Set;v.add(l),f.updateQueue=v}else m.add(l);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var g=li(1073741823,null);g.tag=2,si(a,g)}a.expirationTime=1073741823;break e}u=void 0,a=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new du,u=new Set,b.set(l,u)):void 0===(u=b.get(l))&&(u=new Set,b.set(l,u)),!u.has(a)){u.add(a);var y=yl.bind(null,o,l,a);l.then(y,y)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);u=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(a))}5!==Tu&&(Tu=2),u=Za(u,a),f=i;do{switch(f.tag){case 3:l=u,f.effectTag|=4096,f.expirationTime=t,ci(f,hu(f,l,t));break e;case 1:l=u;var E=f.type,w=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof E.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===ju||!ju.has(w)))){f.effectTag|=4096,f.expirationTime=t,ci(f,mu(f,l,t));break e}}f=f.return}while(null!==f)}Ou=cl(Ou)}catch(e){t=e;continue}break}}function ol(){var e=bu.current;return bu.current=va,null===e?va:e}function il(e,t){e<Au&&2<e&&(Au=e),null!==t&&e<_u&&2<e&&(_u=e,Fu=t)}function al(e){e>Du&&(Du=e)}function ul(){for(;null!==Ou;)Ou=sl(Ou)}function ll(){for(;null!==Ou&&!No();)Ou=sl(Ou)}function sl(e){var t=vu(e.alternate,e,Su);return e.memoizedProps=e.pendingProps,null===t&&(t=cl(e)),yu.current=null,t}function cl(e){Ou=e;do{var t=Ou.alternate;if(e=Ou.return,0==(2048&Ou.effectTag)){if(t=Ya(t,Ou,Su),1===Su||1!==Ou.childExpirationTime){for(var n=0,r=Ou.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Ou.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Ou.firstEffect),null!==Ou.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Ou.firstEffect),e.lastEffect=Ou.lastEffect),1<Ou.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Ou:e.firstEffect=Ou,e.lastEffect=Ou))}else{if(null!==(t=Xa(Ou)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Ou.sibling))return t;Ou=e}while(null!==Ou);return Tu===Eu&&(Tu=5),null}function fl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function pl(e){var t=Bo();return Wo(99,dl.bind(null,e,t)),null}function dl(e,t){do{ml()}while(null!==Vu);if(0!=(48&xu))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fl(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===ku&&(Ou=ku=null,Su=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=xu;xu|=32,yu.current=null,mn=qt;var u=dn();if(hn(u)){if("selectionStart"in u)var l={start:u.selectionStart,end:u.selectionEnd};else e:{var s=(l=(l=u.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(s&&0!==s.rangeCount){l=s.anchorNode;var c=s.anchorOffset,f=s.focusNode;s=s.focusOffset;try{l.nodeType,f.nodeType}catch(e){l=null;break e}var p=0,d=-1,h=-1,m=0,v=0,g=u,b=null;t:for(;;){for(var y;g!==l||0!==c&&3!==g.nodeType||(d=p+c),g!==f||0!==s&&3!==g.nodeType||(h=p+s),3===g.nodeType&&(p+=g.nodeValue.length),null!==(y=g.firstChild);)b=g,g=y;for(;;){if(g===u)break t;if(b===l&&++m===c&&(d=p),b===f&&++v===s&&(h=p),null!==(y=g.nextSibling))break;b=(g=b).parentNode}g=y}l=-1===d||-1===h?null:{start:d,end:h}}else l=null}l=l||{start:0,end:0}}else l=null;vn={activeElementDetached:null,focusedElem:u,selectionRange:l},qt=!1,Iu=o;do{try{hl()}catch(e){if(null===Iu)throw Error(a(330));bl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);Iu=o;do{try{for(u=e,l=t;null!==Iu;){var E=Iu.effectTag;if(16&E&&Ve(Iu.stateNode,""),128&E){var w=Iu.alternate;if(null!==w){var C=w.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(1038&E){case 2:su(Iu),Iu.effectTag&=-3;break;case 6:su(Iu),Iu.effectTag&=-3,fu(Iu.alternate,Iu);break;case 1024:Iu.effectTag&=-1025;break;case 1028:Iu.effectTag&=-1025,fu(Iu.alternate,Iu);break;case 4:fu(Iu.alternate,Iu);break;case 8:cu(u,c=Iu,l),uu(c)}Iu=Iu.nextEffect}}catch(e){if(null===Iu)throw Error(a(330));bl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);if(C=vn,w=dn(),E=C.focusedElem,l=C.selectionRange,w!==E&&E&&E.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(E.ownerDocument.documentElement,E)){null!==l&&hn(E)&&(w=l.start,void 0===(C=l.end)&&(C=w),"selectionStart"in E?(E.selectionStart=w,E.selectionEnd=Math.min(C,E.value.length)):(C=(w=E.ownerDocument||document)&&w.defaultView||window).getSelection&&(C=C.getSelection(),c=E.textContent.length,u=Math.min(l.start,c),l=void 0===l.end?u:Math.min(l.end,c),!C.extend&&u>l&&(c=l,l=u,u=c),c=pn(E,u),f=pn(E,l),c&&f&&(1!==C.rangeCount||C.anchorNode!==c.node||C.anchorOffset!==c.offset||C.focusNode!==f.node||C.focusOffset!==f.offset)&&((w=w.createRange()).setStart(c.node,c.offset),C.removeAllRanges(),u>l?(C.addRange(w),C.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),C.addRange(w))))),w=[];for(C=E;C=C.parentNode;)1===C.nodeType&&w.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof E.focus&&E.focus(),E=0;E<w.length;E++)(C=w[E]).element.scrollLeft=C.left,C.element.scrollTop=C.top}qt=!!mn,vn=mn=null,e.current=n,Iu=o;do{try{for(E=e;null!==Iu;){var x=Iu.effectTag;if(36&x&&iu(E,Iu.alternate,Iu),128&x){w=void 0;var k=Iu.ref;if(null!==k){var O=Iu.stateNode;switch(Iu.tag){case 5:w=O;break;default:w=O}"function"==typeof k?k(w):k.current=w}}Iu=Iu.nextEffect}}catch(e){if(null===Iu)throw Error(a(330));bl(Iu,e),Iu=Iu.nextEffect}}while(null!==Iu);Iu=null,Io(),xu=i}else e.current=n;if(zu)zu=!1,Vu=e,Bu=t;else for(Iu=o;null!==Iu;)t=Iu.nextEffect,Iu.nextEffect=null,Iu=t;if(0===(t=e.firstPendingTime)&&(ju=null),1073741823===t?e===Hu?Wu++:(Wu=0,Hu=e):Wu=0,"function"==typeof wl&&wl(n.stateNode,r),Xu(e),Ru)throw Ru=!1,e=Lu,Lu=null,e;return 0!=(8&xu)||qo(),null}function hl(){for(;null!==Iu;){var e=Iu.effectTag;0!=(256&e)&&nu(Iu.alternate,Iu),0==(512&e)||zu||(zu=!0,Ho(97,(function(){return ml(),null}))),Iu=Iu.nextEffect}}function ml(){if(90!==Bu){var e=97<Bu?97:Bu;return Bu=90,Wo(e,vl)}}function vl(){if(null===Vu)return!1;var e=Vu;if(Vu=null,0!=(48&xu))throw Error(a(331));var t=xu;for(xu|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ru(5,n),ou(5,n)}}catch(t){if(null===e)throw Error(a(330));bl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return xu=t,qo(),!0}function gl(e,t,n){si(e,t=hu(e,t=Za(n,t),1073741823)),null!==(e=Gu(e,1073741823))&&Xu(e)}function bl(e,t){if(3===e.tag)gl(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){gl(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===ju||!ju.has(r))){si(n,e=mu(n,e=Za(t,e),1073741823)),null!==(n=Gu(n,1073741823))&&Xu(n);break}}n=n.return}}function yl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),ku===e&&Su===n?Tu===Cu||Tu===wu&&1073741823===Au&&Vo()-Nu<500?nl(e,Su):Mu=!0:Dl(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Xu(e)))}function El(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=$u(t=qu(),e,null)),null!==(e=Gu(e,t))&&Xu(e)}vu=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)_a=!0;else{if(r<n){switch(_a=!1,t.tag){case 3:za(t),Pa();break;case 5:if(Ni(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vo(t.type)&&Eo(t);break;case 4:Di(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,so(Yo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Ha(e,t,n):(so(Ri,1&Ri.current),null!==(t=Ka(e,t,n))?t.sibling:null);so(Ri,1&Ri.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return $a(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),so(Ri,Ri.current),!r)return null}return Ka(e,t,n)}_a=!1}}else _a=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=mo(t,fo.current),ri(t,n),o=Ki(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var i=!0;Eo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var u=r.getDerivedStateFromProps;"function"==typeof u&&mi(t,r,u,e),o.updater=vi,t.stateNode=o,o._reactInternalFiber=t,Ei(t,r,e,n),t=ja(null,t,r,!0,i,n)}else t.tag=0,Fa(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Ol(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===fe)return 14}return 2}(o),e=Go(o,e),i){case 0:t=Ra(null,t,o,e,n);break e;case 1:t=La(null,t,o,e,n);break e;case 11:t=Da(null,t,o,e,n);break e;case 14:t=Ma(null,t,o,Go(o.type,e),r,n);break e}throw Error(a(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Ra(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 1:return r=t.type,o=t.pendingProps,La(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 3:if(za(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ui(e,t),fi(t,r,null,n),(r=t.memoizedState.element)===o)Pa(),t=Ka(e,t,n);else{if((o=t.stateNode.hydrate)&&(wa=wn(t.stateNode.containerInfo.firstChild),Ea=t,o=Ca=!0),o)for(n=Si(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Fa(e,t,r,n),Pa();t=t.child}return t;case 5:return Ni(t),null===e&&Oa(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,u=o.children,bn(r,o)?u=null:null!==i&&bn(r,i)&&(t.effectTag|=16),Ia(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Fa(e,t,u,n),t=t.child),t;case 6:return null===e&&Oa(t),null;case 13:return Ha(e,t,n);case 4:return Di(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Oi(t,null,r,n):Fa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Da(e,t,r,o=t.elementType===r?o:Go(r,o),n);case 7:return Fa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Fa(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,u=t.memoizedProps,i=o.value;var l=t.type._context;if(so(Yo,l._currentValue),l._currentValue=i,null!==u)if(l=u.value,0===(i=Lr(l,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,i):1073741823))){if(u.children===o.children&&!po.current){t=Ka(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){u=l.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&i)){1===l.tag&&((c=li(n,null)).tag=2,si(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),ni(l.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else u=10===l.tag&&l.type===t.type?null:l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}Fa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ri(t,n),r=r(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Fa(e,t,r,n),t.child;case 14:return i=Go(o=t.type,t.pendingProps),Ma(e,t,o,i=Go(o.type,i),r,n);case 15:return Na(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Go(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vo(r)?(e=!0,Eo(t)):e=!1,ri(t,n),bi(t,r,o),Ei(t,r,o,n),ja(null,t,r,!0,e,n);case 19:return $a(e,t,n)}throw Error(a(156,t.tag))};var wl=null,Cl=null;function xl(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function kl(e,t,n,r){return new xl(e,t,n,r)}function Ol(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Sl(e,t){var n=e.alternate;return null===n?((n=kl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Tl(e,t,n,r,o,i){var u=2;if(r=e,"function"==typeof e)Ol(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case ne:return Pl(n.children,o,i,t);case ue:u=8,o|=7;break;case re:u=8,o|=1;break;case oe:return(e=kl(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case se:return(e=kl(13,n,t,o)).type=se,e.elementType=se,e.expirationTime=i,e;case ce:return(e=kl(19,n,t,o)).elementType=ce,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:u=10;break e;case ae:u=9;break e;case le:u=11;break e;case fe:u=14;break e;case pe:u=16,r=null;break e;case de:u=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=kl(u,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Pl(e,t,n,r){return(e=kl(7,e,r,t)).expirationTime=n,e}function Al(e,t,n){return(e=kl(6,e,null,t)).expirationTime=n,e}function _l(e,t,n){return(t=kl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fl(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Dl(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Ml(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Nl(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Il(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Rl(e,t,n,r){var o=t.current,i=qu(),u=di.suspense;i=$u(i,o,u);e:if(n){t:{if(Je(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(vo(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(a(171))}if(1===n.tag){var s=n.type;if(vo(s)){n=yo(n,s,l);break e}}n=l}else n=co;return null===t.context?t.context=n:t.pendingContext=n,(t=li(i,u)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),si(o,t),Ku(o,i),i}function Ll(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function jl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function zl(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}function Vl(e,t,n){var r=new Fl(e,t,n=null!=n&&!0===n.hydrate),o=kl(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ai(o),e[Sn]=r.current,n&&0!==t&&function(e,t){var n=Ze(t);St.forEach((function(e){ht(e,t,n)})),Tt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Bl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ul(e,t,n,r,o){var i=n._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var u=o;o=function(){var e=Ll(a);u.call(e)}}Rl(t,a,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Vl(e,0,t?{hydrate:!0}:void 0)}(n,r),a=i._internalRoot,"function"==typeof o){var l=o;o=function(){var e=Ll(a);l.call(e)}}tl((function(){Rl(t,a,e,o)}))}return Ll(a)}function Wl(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Hl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bl(t))throw Error(a(200));return Wl(e,t,null,n)}Vl.prototype.render=function(e){Rl(e,this._internalRoot,null,null)},Vl.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Rl(null,e,null,(function(){t[Sn]=null}))},mt=function(e){if(13===e.tag){var t=Ko(qu(),150,100);Ku(e,t),zl(e,t)}},vt=function(e){13===e.tag&&(Ku(e,3),zl(e,3))},gt=function(e){if(13===e.tag){var t=qu();Ku(e,t=$u(t,e,null)),zl(e,t)}},P=function(e,t,n){switch(t){case"input":if(Oe(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=_n(r);if(!o)throw Error(a(90));we(r),Oe(r,o)}}}break;case"textarea":De(e,n);break;case"select":null!=(t=n.value)&&Ae(e,!!n.multiple,t,!1)}},N=el,I=function(e,t,n,r,o){var i=xu;xu|=4;try{return Wo(98,e.bind(null,t,n,r,o))}finally{0===(xu=i)&&qo()}},R=function(){0==(49&xu)&&(function(){if(null!==Uu){var e=Uu;Uu=null,e.forEach((function(e,t){Il(t,e),Xu(t)})),qo()}}(),ml())},L=function(e,t){var n=xu;xu|=2;try{return e(t)}finally{0===(xu=n)&&qo()}};var Ql,ql,$l={Events:[Pn,An,_n,S,x,Ln,function(e){ot(e,Rn)},D,M,Xt,ut,ml,{current:!1}]};ql=(Ql={findFiberByHostInstance:Tn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);wl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Cl=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},Ql,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return ql?ql(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$l,t.createPortal=Hl,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&xu))throw Error(a(187));var n=xu;xu|=1;try{return Wo(99,e.bind(null,t))}finally{xu=n,qo()}},t.hydrate=function(e,t,n){if(!Bl(t))throw Error(a(200));return Ul(null,e,t,!0,n)},t.render=function(e,t,n){if(!Bl(t))throw Error(a(200));return Ul(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bl(e))throw Error(a(40));return!!e._reactRootContainer&&(tl((function(){Ul(null,null,e,!1,(function(){e._reactRootContainer=null,e[Sn]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return Hl(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Bl(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Ul(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,o,i,a,u;if("undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,s=null,c=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==l?setTimeout(r,0,e):(l=e,setTimeout(c,0))},o=function(e,t){s=setTimeout(e,t)},i=function(){clearTimeout(s)},a=function(){return!1},u=t.unstable_forceFrameRate=function(){}}else{var p=window.performance,d=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof p&&"function"==typeof p.now)t.unstable_now=function(){return p.now()};else{var g=d.now();t.unstable_now=function(){return d.now()-g}}var b=!1,y=null,E=-1,w=5,C=0;a=function(){return t.unstable_now()>=C},u=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,k=x.port2;x.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();C=e+w;try{y(!0,e)?k.postMessage(null):(b=!1,y=null)}catch(e){throw k.postMessage(null),e}}else b=!1},r=function(e){y=e,b||(b=!0,k.postMessage(null))},o=function(e,n){E=h((function(){e(t.unstable_now())}),n)},i=function(){m(E),E=-1}}function O(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function S(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,a=e[i],u=i+1,l=e[u];if(void 0!==a&&0>P(a,n))void 0!==l&&0>P(l,a)?(e[r]=l,e[u]=n,r=u):(e[r]=a,e[i]=n,r=i);else{if(!(void 0!==l&&0>P(l,n)))break e;e[r]=l,e[u]=n,r=u}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var A=[],_=[],F=1,D=null,M=3,N=!1,I=!1,R=!1;function L(e){for(var t=S(_);null!==t;){if(null===t.callback)T(_);else{if(!(t.startTime<=e))break;T(_),t.sortIndex=t.expirationTime,O(A,t)}t=S(_)}}function j(e){if(R=!1,L(e),!I)if(null!==S(A))I=!0,r(z);else{var t=S(_);null!==t&&o(j,t.startTime-e)}}function z(e,n){I=!1,R&&(R=!1,i()),N=!0;var r=M;try{for(L(n),D=S(A);null!==D&&(!(D.expirationTime>n)||e&&!a());){var u=D.callback;if(null!==u){D.callback=null,M=D.priorityLevel;var l=u(D.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?D.callback=l:D===S(A)&&T(A),L(n)}else T(A);D=S(A)}if(null!==D)var s=!0;else{var c=S(_);null!==c&&o(j,c.startTime-n),s=!1}return s}finally{D=null,M=r,N=!1}}function V(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=u;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||N||(I=!0,r(z))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return S(A)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,n,a){var u=t.unstable_now();if("object"==typeof a&&null!==a){var l=a.delay;l="number"==typeof l&&0<l?u+l:u,a="number"==typeof a.timeout?a.timeout:V(e)}else a=V(e),l=u;return e={id:F++,callback:n,priorityLevel:e,startTime:l,expirationTime:a=l+a,sortIndex:-1},l>u?(e.sortIndex=l,O(_,e),null===S(A)&&e===S(_)&&(R?i():R=!0,o(j,l-u))):(e.sortIndex=a,O(A,e),I||N||(I=!0,r(z))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();L(e);var n=S(A);return n!==D&&null!==D&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<D.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bodyOpenClassName=t.portalClassName=void 0;var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),a=h(i),u=h(n(1)),l=h(n(2)),s=h(n(19)),c=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(7)),f=n(3),p=h(f),d=n(26);function h(e){return e&&e.__esModule?e:{default:e}}function m(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function v(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var g=t.portalClassName="ReactModalPortal",b=t.bodyOpenClassName="ReactModal__Body--open",y=void 0!==u.default.createPortal,E=function(){return y?u.default.createPortal:u.default.unstable_renderSubtreeIntoContainer};function w(e){return e()}var C=function(e){function t(){var e,n,o;m(this,t);for(var i=arguments.length,l=Array(i),c=0;c<i;c++)l[c]=arguments[c];return n=o=v(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.removePortal=function(){!y&&u.default.unmountComponentAtNode(o.node);var e=w(o.props.parentSelector);e?e.removeChild(o.node):console.warn('React-Modal: "parentSelector" prop did not returned any DOM element. Make sure that the parent element is unmounted to avoid any memory leaks.')},o.portalRef=function(e){o.portal=e},o.renderPortal=function(e){var n=E()(o,a.default.createElement(s.default,r({defaultStyles:t.defaultStyles},e)),o.node);o.portalRef(n)},v(o,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),o(t,[{key:"componentDidMount",value:function(){f.canUseDOM&&(y||(this.node=document.createElement("div")),this.node.className=this.props.portalClassName,w(this.props.parentSelector).appendChild(this.node),!y&&this.renderPortal(this.props))}},{key:"getSnapshotBeforeUpdate",value:function(e){return{prevParent:w(e.parentSelector),nextParent:w(this.props.parentSelector)}}},{key:"componentDidUpdate",value:function(e,t,n){if(f.canUseDOM){var r=this.props,o=r.isOpen,i=r.portalClassName;e.portalClassName!==i&&(this.node.className=i);var a=n.prevParent,u=n.nextParent;u!==a&&(a.removeChild(this.node),u.appendChild(this.node)),(e.isOpen||o)&&!y&&this.renderPortal(this.props)}}},{key:"componentWillUnmount",value:function(){if(f.canUseDOM&&this.node&&this.portal){var e=this.portal.state,t=Date.now(),n=e.isOpen&&this.props.closeTimeoutMS&&(e.closesAt||t+this.props.closeTimeoutMS);n?(e.beforeClose||this.portal.closeWithTimeout(),setTimeout(this.removePortal,n-t)):this.removePortal()}}},{key:"render",value:function(){return f.canUseDOM&&y?(!this.node&&y&&(this.node=document.createElement("div")),E()(a.default.createElement(s.default,r({ref:this.portalRef,defaultStyles:t.defaultStyles},this.props)),this.node)):null}}],[{key:"setAppElement",value:function(e){c.setElement(e)}}]),t}(i.Component);C.propTypes={isOpen:l.default.bool.isRequired,style:l.default.shape({content:l.default.object,overlay:l.default.object}),portalClassName:l.default.string,bodyOpenClassName:l.default.string,htmlOpenClassName:l.default.string,className:l.default.oneOfType([l.default.string,l.default.shape({base:l.default.string.isRequired,afterOpen:l.default.string.isRequired,beforeClose:l.default.string.isRequired})]),overlayClassName:l.default.oneOfType([l.default.string,l.default.shape({base:l.default.string.isRequired,afterOpen:l.default.string.isRequired,beforeClose:l.default.string.isRequired})]),appElement:l.default.instanceOf(p.default),onAfterOpen:l.default.func,onRequestClose:l.default.func,closeTimeoutMS:l.default.number,ariaHideApp:l.default.bool,shouldFocusAfterRender:l.default.bool,shouldCloseOnOverlayClick:l.default.bool,shouldReturnFocusAfterClose:l.default.bool,parentSelector:l.default.func,aria:l.default.object,data:l.default.object,role:l.default.string,contentLabel:l.default.string,shouldCloseOnEsc:l.default.bool,overlayRef:l.default.func,contentRef:l.default.func},C.defaultProps={isOpen:!1,portalClassName:g,bodyOpenClassName:b,role:"dialog",ariaHideApp:!0,closeTimeoutMS:0,shouldFocusAfterRender:!0,shouldCloseOnEsc:!0,shouldCloseOnOverlayClick:!0,shouldReturnFocusAfterClose:!0,parentSelector:function(){return document.body}},C.defaultStyles={overlay:{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(255, 255, 255, 0.75)"},content:{position:"absolute",top:"40px",left:"40px",right:"40px",bottom:"40px",border:"1px solid #ccc",background:"#fff",overflow:"auto",WebkitOverflowScrolling:"touch",borderRadius:"4px",outline:"none",padding:"20px"}},(0,d.polyfill)(C),t.default=C},function(e,t,n){"use strict";var r=n(18);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var u=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw u.name="Invariant Violation",u}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),u=v(a),l=v(n(2)),s=m(n(20)),c=v(n(21)),f=m(n(7)),p=m(n(24)),d=v(n(3)),h=v(n(8));function m(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function v(e){return e&&e.__esModule?e:{default:e}}n(25);var g={overlay:"ReactModal__Overlay",content:"ReactModal__Content"},b=0,y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.setOverlayRef=function(e){n.overlay=e,n.props.overlayRef&&n.props.overlayRef(e)},n.setContentRef=function(e){n.content=e,n.props.contentRef&&n.props.contentRef(e)},n.afterClose=function(){var e=n.props,t=e.appElement,r=e.ariaHideApp,o=e.htmlOpenClassName,i=e.bodyOpenClassName;i&&p.remove(document.body,i),o&&p.remove(document.getElementsByTagName("html")[0],o),r&&b>0&&0===(b-=1)&&f.show(t),n.props.shouldFocusAfterRender&&(n.props.shouldReturnFocusAfterClose?(s.returnFocus(),s.teardownScopedFocus()):s.popWithoutFocus()),n.props.onAfterClose&&n.props.onAfterClose(),h.default.deregister(n)},n.open=function(){n.beforeOpen(),n.state.afterOpen&&n.state.beforeClose?(clearTimeout(n.closeTimer),n.setState({beforeClose:!1})):(n.props.shouldFocusAfterRender&&(s.setupScopedFocus(n.node),s.markForFocusLater()),n.setState({isOpen:!0},(function(){n.setState({afterOpen:!0}),n.props.isOpen&&n.props.onAfterOpen&&n.props.onAfterOpen({overlayEl:n.overlay,contentEl:n.content})})))},n.close=function(){n.props.closeTimeoutMS>0?n.closeWithTimeout():n.closeWithoutTimeout()},n.focusContent=function(){return n.content&&!n.contentHasFocus()&&n.content.focus()},n.closeWithTimeout=function(){var e=Date.now()+n.props.closeTimeoutMS;n.setState({beforeClose:!0,closesAt:e},(function(){n.closeTimer=setTimeout(n.closeWithoutTimeout,n.state.closesAt-Date.now())}))},n.closeWithoutTimeout=function(){n.setState({beforeClose:!1,isOpen:!1,afterOpen:!1,closesAt:null},n.afterClose)},n.handleKeyDown=function(e){9===e.keyCode&&(0,c.default)(n.content,e),n.props.shouldCloseOnEsc&&27===e.keyCode&&(e.stopPropagation(),n.requestClose(e))},n.handleOverlayOnClick=function(e){null===n.shouldClose&&(n.shouldClose=!0),n.shouldClose&&n.props.shouldCloseOnOverlayClick&&(n.ownerHandlesClose()?n.requestClose(e):n.focusContent()),n.shouldClose=null},n.handleContentOnMouseUp=function(){n.shouldClose=!1},n.handleOverlayOnMouseDown=function(e){n.props.shouldCloseOnOverlayClick||e.target!=n.overlay||e.preventDefault()},n.handleContentOnClick=function(){n.shouldClose=!1},n.handleContentOnMouseDown=function(){n.shouldClose=!1},n.requestClose=function(e){return n.ownerHandlesClose()&&n.props.onRequestClose(e)},n.ownerHandlesClose=function(){return n.props.onRequestClose},n.shouldBeClosed=function(){return!n.state.isOpen&&!n.state.beforeClose},n.contentHasFocus=function(){return document.activeElement===n.content||n.content.contains(document.activeElement)},n.buildClassName=function(e,t){var r="object"===(void 0===t?"undefined":o(t))?t:{base:g[e],afterOpen:g[e]+"--after-open",beforeClose:g[e]+"--before-close"},i=r.base;return n.state.afterOpen&&(i=i+" "+r.afterOpen),n.state.beforeClose&&(i=i+" "+r.beforeClose),"string"==typeof t&&t?i+" "+t:i},n.attributesFromObject=function(e,t){return Object.keys(t).reduce((function(n,r){return n[e+"-"+r]=t[r],n}),{})},n.state={afterOpen:!1,beforeClose:!1},n.shouldClose=null,n.moveFromContentToOverlay=null,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"componentDidMount",value:function(){this.props.isOpen&&this.open()}},{key:"componentDidUpdate",value:function(e,t){this.props.isOpen&&!e.isOpen?this.open():!this.props.isOpen&&e.isOpen&&this.close(),this.props.shouldFocusAfterRender&&this.state.isOpen&&!t.isOpen&&this.focusContent()}},{key:"componentWillUnmount",value:function(){this.state.isOpen&&this.afterClose(),clearTimeout(this.closeTimer)}},{key:"beforeOpen",value:function(){var e=this.props,t=e.appElement,n=e.ariaHideApp,r=e.htmlOpenClassName,o=e.bodyOpenClassName;o&&p.add(document.body,o),r&&p.add(document.getElementsByTagName("html")[0],r),n&&(b+=1,f.hide(t)),h.default.register(this)}},{key:"render",value:function(){var e=this.props,t=e.id,n=e.className,o=e.overlayClassName,i=e.defaultStyles,a=n?{}:i.content,l=o?{}:i.overlay;return this.shouldBeClosed()?null:u.default.createElement("div",{ref:this.setOverlayRef,className:this.buildClassName("overlay",o),style:r({},l,this.props.style.overlay),onClick:this.handleOverlayOnClick,onMouseDown:this.handleOverlayOnMouseDown},u.default.createElement("div",r({id:t,ref:this.setContentRef,style:r({},a,this.props.style.content),className:this.buildClassName("content",n),tabIndex:"-1",onKeyDown:this.handleKeyDown,onMouseDown:this.handleContentOnMouseDown,onMouseUp:this.handleContentOnMouseUp,onClick:this.handleContentOnClick,role:this.props.role,"aria-label":this.props.contentLabel},this.attributesFromObject("aria",this.props.aria||{}),this.attributesFromObject("data",this.props.data||{}),{"data-testid":this.props.testId}),this.props.children))}}]),t}(a.Component);y.defaultProps={style:{overlay:{},content:{}},defaultStyles:{}},y.propTypes={isOpen:l.default.bool.isRequired,defaultStyles:l.default.shape({content:l.default.object,overlay:l.default.object}),style:l.default.shape({content:l.default.object,overlay:l.default.object}),className:l.default.oneOfType([l.default.string,l.default.object]),overlayClassName:l.default.oneOfType([l.default.string,l.default.object]),bodyOpenClassName:l.default.string,htmlOpenClassName:l.default.string,ariaHideApp:l.default.bool,appElement:l.default.instanceOf(d.default),onAfterOpen:l.default.func,onAfterClose:l.default.func,onRequestClose:l.default.func,closeTimeoutMS:l.default.number,shouldFocusAfterRender:l.default.bool,shouldCloseOnOverlayClick:l.default.bool,shouldReturnFocusAfterClose:l.default.bool,role:l.default.string,contentLabel:l.default.string,aria:l.default.object,data:l.default.object,children:l.default.node,shouldCloseOnEsc:l.default.bool,overlayRef:l.default.func,contentRef:l.default.func,id:l.default.string,testId:l.default.string},t.default=y,e.exports=t.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.handleBlur=s,t.handleFocus=c,t.markForFocusLater=function(){a.push(document.activeElement)},t.returnFocus=function(){var e=null;try{return void(0!==a.length&&(e=a.pop()).focus())}catch(t){console.warn(["You tried to return focus to",e,"but it is not in the DOM anymore"].join(" "))}},t.popWithoutFocus=function(){a.length>0&&a.pop()},t.setupScopedFocus=function(e){u=e,window.addEventListener?(window.addEventListener("blur",s,!1),document.addEventListener("focus",c,!0)):(window.attachEvent("onBlur",s),document.attachEvent("onFocus",c))},t.teardownScopedFocus=function(){u=null,window.addEventListener?(window.removeEventListener("blur",s),document.removeEventListener("focus",c)):(window.detachEvent("onBlur",s),document.detachEvent("onFocus",c))};var r,o=n(6),i=(r=o)&&r.__esModule?r:{default:r};var a=[],u=null,l=!1;function s(){l=!0}function c(){if(l){if(l=!1,!u)return;setTimeout((function(){u.contains(document.activeElement)||((0,i.default)(u)[0]||u).focus()}),0)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){var n=(0,i.default)(e);if(!n.length)return void t.preventDefault();var r=void 0,o=t.shiftKey,a=n[0],u=n[n.length-1];if(e===document.activeElement){if(!o)return;r=u}u!==document.activeElement||o||(r=a);a===document.activeElement&&o&&(r=u);if(r)return t.preventDefault(),void r.focus();var l=/(\bChrome\b|\bSafari\b)\//.exec(navigator.userAgent);if(null==l||"Chrome"==l[1]||null!=/\biPod\b|\biPad\b/g.exec(navigator.userAgent))return;var s=n.indexOf(document.activeElement);s>-1&&(s+=o?-1:1);if(void 0===(r=n[s]))return t.preventDefault(),void(r=o?u:a).focus();t.preventDefault(),r.focus()};var r,o=n(6),i=(r=o)&&r.__esModule?r:{default:r};e.exports=t.default},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){var r;
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/!function(){"use strict";var o=!("undefined"==typeof window||!window.document||!window.document.createElement),i={canUseDOM:o,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:o&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:o&&!!window.screen};void 0===(r=function(){return i}.call(t,n,t,e))||(e.exports=r)}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.dumpClassLists=function(){0};var r={},o={};t.add=function(e,t){return n=e.classList,i="html"==e.nodeName.toLowerCase()?r:o,void t.split(" ").forEach((function(e){!function(e,t){e[t]||(e[t]=0),e[t]+=1}(i,e),n.add(e)}));var n,i},t.remove=function(e,t){return n=e.classList,i="html"==e.nodeName.toLowerCase()?r:o,void t.split(" ").forEach((function(e){!function(e,t){e[t]&&(e[t]-=1)}(i,e),0===i[e]&&n.remove(e)}));var n,i}},function(e,t,n){"use strict";var r,o=n(8),i=(r=o)&&r.__esModule?r:{default:r};var a=void 0,u=void 0,l=[];function s(){0!==l.length&&l[l.length-1].focusContent()}i.default.subscribe((function(e,t){a&&u||((a=document.createElement("div")).setAttribute("data-react-modal-body-trap",""),a.style.position="absolute",a.style.opacity="0",a.setAttribute("tabindex","0"),a.addEventListener("focus",s),(u=a.cloneNode()).addEventListener("focus",s)),(l=t).length>0?(document.body.firstChild!==a&&document.body.insertBefore(a,document.body.firstChild),document.body.lastChild!==u&&document.body.appendChild(u)):(a.parentElement&&a.parentElement.removeChild(a),u.parentElement&&u.parentElement.removeChild(u))}))},function(e,t,n){"use strict";function r(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=e&&this.setState(e)}function o(e){this.setState(function(t){var n=this.constructor.getDerivedStateFromProps(e,t);return null!=n?n:null}.bind(this))}function i(e,t){try{var n=this.props,r=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(n,r)}finally{this.props=n,this.state=r}}function a(e){var t=e.prototype;if(!t||!t.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof e.getDerivedStateFromProps&&"function"!=typeof t.getSnapshotBeforeUpdate)return e;var n=null,a=null,u=null;if("function"==typeof t.componentWillMount?n="componentWillMount":"function"==typeof t.UNSAFE_componentWillMount&&(n="UNSAFE_componentWillMount"),"function"==typeof t.componentWillReceiveProps?a="componentWillReceiveProps":"function"==typeof t.UNSAFE_componentWillReceiveProps&&(a="UNSAFE_componentWillReceiveProps"),"function"==typeof t.componentWillUpdate?u="componentWillUpdate":"function"==typeof t.UNSAFE_componentWillUpdate&&(u="UNSAFE_componentWillUpdate"),null!==n||null!==a||null!==u){var l=e.displayName||e.name,s="function"==typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+l+" uses "+s+" but also contains the following legacy lifecycles:"+(null!==n?"\n  "+n:"")+(null!==a?"\n  "+a:"")+(null!==u?"\n  "+u:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof e.getDerivedStateFromProps&&(t.componentWillMount=r,t.componentWillReceiveProps=o),"function"==typeof t.getSnapshotBeforeUpdate){if("function"!=typeof t.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=i;var c=t.componentDidUpdate;t.componentDidUpdate=function(e,t,n){var r=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:n;c.call(this,e,t,r)}}return e}n.r(t),n.d(t,"polyfill",(function(){return a})),r.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,i.__suppressDeprecationWarning=!0},function(e,t,n){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var a=o.apply(null,r);a&&e.push(a)}else if("object"===i)for(var u in r)n.call(r,u)&&r[u]&&e.push(u)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(r=function(){return o}.apply(t,[]))||(e.exports=r)}()},function(e,t,n){var r=n(29),o=n(30);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function u(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],l=t.base?i[0]+t.base:i[0],s=n[l]||0,c="".concat(l," ").concat(s);n[l]=s+1;var f=u(c),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(p)):a.push({identifier:c,updater:v(p,t),references:1}),r.push(c)}return r}function s(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,f=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function p(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function d(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,m=0;function v(e,t){var n,r,o;if(t.singleton){var i=m++;n=h||(h=s(t)),r=p.bind(null,n,i,!1),o=p.bind(null,n,i,!0)}else n=s(t),r=d.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=u(n[r]);a[o].references--}for(var i=l(e,t),s=0;s<n.length;s++){var c=u(n[s]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=i}}}},function(e,t,n){(t=n(31)(!1)).push([e.i,".Dropdown-root {\n  position: relative;\n}\n\n.Dropdown-control {\n  position: relative;\n  overflow: hidden;\n  background-color: white;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  box-sizing: border-box;\n  color: #333;\n  cursor: default;\n  outline: none;\n  padding: 8px 52px 8px 10px;\n  transition: all 200ms ease;\n  height: 40px\n}\n\n.Dropdown-control:hover {\n  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n}\n\n.Dropdown-arrow {\n  border-color: #999 transparent transparent;\n  border-style: solid;\n  border-width: 5px 5px 0;\n  content: ' ';\n  display: block;\n  height: 0;\n  margin-top: -ceil(2.5);\n  position: absolute;\n  right: 10px;\n  top: 14px;\n  width: 0\n}\n\n.is-open .Dropdown-arrow {\n  border-color: transparent transparent #999;\n  border-width: 0 5px 5px;\n}\n\n.Dropdown-menu {\n  background-color: white;\n  border: 1px solid #ccc;\n  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n  box-sizing: border-box;\n  margin-top: -1px;\n  max-height: 200px;\n  overflow-y: auto;\n  position: absolute;\n  top: 100%;\n  width: 100%;\n  z-index: 1000;\n  -webkit-overflow-scrolling: touch;\n}\n\n.Dropdown-menu .Dropdown-group > .Dropdown-title{\n  padding: 8px 10px;\n  color: rgba(51, 51, 51, 1);\n  font-weight: bold;\n  text-transform: capitalize;\n}\n\n.Dropdown-option {\n  box-sizing: border-box;\n  color: rgba(51, 51, 51, 0.8);\n  cursor: pointer;\n  display: block;\n  padding: 8px 10px;\n}\n\n.Dropdown-option:last-child {\n  border-bottom-right-radius: 2px;\n   border-bottom-left-radius: 2px;\n}\n\n.Dropdown-option:hover {\n  background-color: #f2f9fc;\n  color: #333;\n}\n\n.Dropdown-option.is-selected {\n  background-color: #f2f9fc;\n  color: #333;\n}\n\n.Dropdown-noresults {\n  box-sizing: border-box;\n  color: #ccc;\n  cursor: default;\n  display: block;\n  padding: 8px 10px;\n}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,u=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(u),"/*# ".concat(l," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var a,u,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&o[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r),i=n(1),a=n(9),u=n.n(a),l=n(10),s=n.n(l);function c(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}var f=function(e,t){var n;void 0===t&&(t=c);var r,o=[],i=!1;return function(){for(var a=[],u=0;u<arguments.length;u++)a[u]=arguments[u];return i&&n===this&&t(a,o)||(r=e.apply(this,a),i=!0,n=this,o=a),r}},p=n(11),d=n.n(p);var h=function(){function e(e){this.isSpeedy=void 0===e.speedy||e.speedy,this.tags=[],this.ctr=0,this.nonce=e.nonce,this.key=e.key,this.container=e.container,this.before=null}var t=e.prototype;return t.insert=function(e){if(this.ctr%(this.isSpeedy?65e3:1)==0){var t,n=function(e){var t=document.createElement("style");return t.setAttribute("data-emotion",e.key),void 0!==e.nonce&&t.setAttribute("nonce",e.nonce),t.appendChild(document.createTextNode("")),t}(this);t=0===this.tags.length?this.before:this.tags[this.tags.length-1].nextSibling,this.container.insertBefore(n,t),this.tags.push(n)}var r=this.tags[this.tags.length-1];if(this.isSpeedy){var o=function(e){if(e.sheet)return e.sheet;for(var t=0;t<document.styleSheets.length;t++)if(document.styleSheets[t].ownerNode===e)return document.styleSheets[t]}(r);try{var i=105===e.charCodeAt(1)&&64===e.charCodeAt(0);o.insertRule(e,i?0:o.cssRules.length)}catch(e){0}}else r.appendChild(document.createTextNode(e));this.ctr++},t.flush=function(){this.tags.forEach((function(e){return e.parentNode.removeChild(e)})),this.tags=[],this.ctr=0},e}();var m=function(e){function t(e,t,r){var o=t.trim().split(h);t=o;var i=o.length,a=e.length;switch(a){case 0:case 1:var u=0;for(e=0===a?"":e[0]+" ";u<i;++u)t[u]=n(e,t[u],r).trim();break;default:var l=u=0;for(t=[];u<i;++u)for(var s=0;s<a;++s)t[l++]=n(e[s]+" ",o[u],r).trim()}return t}function n(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(m,"$1"+e.trim());case 58:return e.trim()+t.replace(m,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(m,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function r(e,t,n,i){var a=e+";",u=2*t+3*n+4*i;if(944===u){e=a.indexOf(":",9)+1;var l=a.substring(e,a.length-1).trim();return l=a.substring(0,e).trim()+l+";",1===A||2===A&&o(l,1)?"-webkit-"+l+l:l}if(0===A||2===A&&!o(a,1))return a;switch(u){case 1015:return 97===a.charCodeAt(10)?"-webkit-"+a+a:a;case 951:return 116===a.charCodeAt(3)?"-webkit-"+a+a:a;case 963:return 110===a.charCodeAt(5)?"-webkit-"+a+a:a;case 1009:if(100!==a.charCodeAt(4))break;case 969:case 942:return"-webkit-"+a+a;case 978:return"-webkit-"+a+"-moz-"+a+a;case 1019:case 983:return"-webkit-"+a+"-moz-"+a+"-ms-"+a+a;case 883:if(45===a.charCodeAt(8))return"-webkit-"+a+a;if(0<a.indexOf("image-set(",11))return a.replace(O,"$1-webkit-$2")+a;break;case 932:if(45===a.charCodeAt(4))switch(a.charCodeAt(5)){case 103:return"-webkit-box-"+a.replace("-grow","")+"-webkit-"+a+"-ms-"+a.replace("grow","positive")+a;case 115:return"-webkit-"+a+"-ms-"+a.replace("shrink","negative")+a;case 98:return"-webkit-"+a+"-ms-"+a.replace("basis","preferred-size")+a}return"-webkit-"+a+"-ms-"+a+a;case 964:return"-webkit-"+a+"-ms-flex-"+a+a;case 1023:if(99!==a.charCodeAt(8))break;return"-webkit-box-pack"+(l=a.substring(a.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+a+"-ms-flex-pack"+l+a;case 1005:return p.test(a)?a.replace(f,":-webkit-")+a.replace(f,":-moz-")+a:a;case 1e3:switch(t=(l=a.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=a.replace(y,"tb");break;case 232:l=a.replace(y,"tb-rl");break;case 220:l=a.replace(y,"lr");break;default:return a}return"-webkit-"+a+"-ms-"+l+a;case 1017:if(-1===a.indexOf("sticky",9))break;case 975:switch(t=(a=e).length-10,u=(l=(33===a.charCodeAt(t)?a.substring(0,t):a).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:a=a.replace(l,"-webkit-"+l)+";"+a;break;case 207:case 102:a=a.replace(l,"-webkit-"+(102<u?"inline-":"")+"box")+";"+a.replace(l,"-webkit-"+l)+";"+a.replace(l,"-ms-"+l+"box")+";"+a}return a+";";case 938:if(45===a.charCodeAt(5))switch(a.charCodeAt(6)){case 105:return l=a.replace("-items",""),"-webkit-"+a+"-webkit-box-"+l+"-ms-flex-"+l+a;case 115:return"-webkit-"+a+"-ms-flex-item-"+a.replace(C,"")+a;default:return"-webkit-"+a+"-ms-flex-line-pack"+a.replace("align-content","").replace(C,"")+a}break;case 973:case 989:if(45!==a.charCodeAt(3)||122===a.charCodeAt(4))break;case 931:case 953:if(!0===k.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?r(e.replace("stretch","fill-available"),t,n,i).replace(":fill-available",":stretch"):a.replace(l,"-webkit-"+l)+a.replace(l,"-moz-"+l.replace("fill-",""))+a;break;case 962:if(a="-webkit-"+a+(102===a.charCodeAt(5)?"-ms-"+a:"")+a,211===n+i&&105===a.charCodeAt(13)&&0<a.indexOf("transform",10))return a.substring(0,a.indexOf(";",27)+1).replace(d,"$1-webkit-$2")+a}return a}function o(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),M(2!==t?r:r.replace(x,"$1"),n,t)}function i(e,t){var n=r(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(w," or ($1)").substring(4):"("+t+")"}function a(e,t,n,r,o,i,a,u,s,c){for(var f,p=0,d=t;p<D;++p)switch(f=F[p].call(l,e,d,n,r,o,i,a,u,s,c)){case void 0:case!1:case!0:case null:break;default:d=f}if(d!==t)return d}function u(e){return void 0!==(e=e.prefix)&&(M=null,e?"function"!=typeof e?A=1:(A=2,M=e):A=0),u}function l(e,n){var u=e;if(33>u.charCodeAt(0)&&(u=u.trim()),u=[u],0<D){var l=a(-1,n,u,u,T,S,0,0,0,0);void 0!==l&&"string"==typeof l&&(n=l)}var f=function e(n,u,l,f,p){for(var d,h,m,y,w,C=0,x=0,k=0,O=0,F=0,M=0,I=m=d=0,R=0,L=0,j=0,z=0,V=l.length,B=V-1,U="",W="",H="",Q="";R<V;){if(h=l.charCodeAt(R),R===B&&0!==x+O+k+C&&(0!==x&&(h=47===x?10:47),O=k=C=0,V++,B++),0===x+O+k+C){if(R===B&&(0<L&&(U=U.replace(c,"")),0<U.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:U+=l.charAt(R)}h=59}switch(h){case 123:for(d=(U=U.trim()).charCodeAt(0),m=1,z=++R;R<V;){switch(h=l.charCodeAt(R)){case 123:m++;break;case 125:m--;break;case 47:switch(h=l.charCodeAt(R+1)){case 42:case 47:e:{for(I=R+1;I<B;++I)switch(l.charCodeAt(I)){case 47:if(42===h&&42===l.charCodeAt(I-1)&&R+2!==I){R=I+1;break e}break;case 10:if(47===h){R=I+1;break e}}R=I}}break;case 91:h++;case 40:h++;case 34:case 39:for(;R++<B&&l.charCodeAt(R)!==h;);}if(0===m)break;R++}switch(m=l.substring(z,R),0===d&&(d=(U=U.replace(s,"").trim()).charCodeAt(0)),d){case 64:switch(0<L&&(U=U.replace(c,"")),h=U.charCodeAt(1)){case 100:case 109:case 115:case 45:L=u;break;default:L=_}if(z=(m=e(u,L,m,h,p+1)).length,0<D&&(w=a(3,m,L=t(_,U,j),u,T,S,z,h,p,f),U=L.join(""),void 0!==w&&0===(z=(m=w.trim()).length)&&(h=0,m="")),0<z)switch(h){case 115:U=U.replace(E,i);case 100:case 109:case 45:m=U+"{"+m+"}";break;case 107:m=(U=U.replace(v,"$1 $2"))+"{"+m+"}",m=1===A||2===A&&o("@"+m,3)?"@-webkit-"+m+"@"+m:"@"+m;break;default:m=U+m,112===f&&(W+=m,m="")}else m="";break;default:m=e(u,t(u,U,j),m,f,p+1)}H+=m,m=j=L=I=d=0,U="",h=l.charCodeAt(++R);break;case 125:case 59:if(1<(z=(U=(0<L?U.replace(c,""):U).trim()).length))switch(0===I&&(d=U.charCodeAt(0),45===d||96<d&&123>d)&&(z=(U=U.replace(" ",":")).length),0<D&&void 0!==(w=a(1,U,u,n,T,S,W.length,f,p,f))&&0===(z=(U=w.trim()).length)&&(U="\0\0"),d=U.charCodeAt(0),h=U.charCodeAt(1),d){case 0:break;case 64:if(105===h||99===h){Q+=U+l.charAt(R);break}default:58!==U.charCodeAt(z-1)&&(W+=r(U,d,h,U.charCodeAt(2)))}j=L=I=d=0,U="",h=l.charCodeAt(++R)}}switch(h){case 13:case 10:47===x?x=0:0===1+d&&107!==f&&0<U.length&&(L=1,U+="\0"),0<D*N&&a(0,U,u,n,T,S,W.length,f,p,f),S=1,T++;break;case 59:case 125:if(0===x+O+k+C){S++;break}default:switch(S++,y=l.charAt(R),h){case 9:case 32:if(0===O+C+x)switch(F){case 44:case 58:case 9:case 32:y="";break;default:32!==h&&(y=" ")}break;case 0:y="\\0";break;case 12:y="\\f";break;case 11:y="\\v";break;case 38:0===O+x+C&&(L=j=1,y="\f"+y);break;case 108:if(0===O+x+C+P&&0<I)switch(R-I){case 2:112===F&&58===l.charCodeAt(R-3)&&(P=F);case 8:111===M&&(P=M)}break;case 58:0===O+x+C&&(I=R);break;case 44:0===x+k+O+C&&(L=1,y+="\r");break;case 34:case 39:0===x&&(O=O===h?0:0===O?h:O);break;case 91:0===O+x+k&&C++;break;case 93:0===O+x+k&&C--;break;case 41:0===O+x+C&&k--;break;case 40:if(0===O+x+C){if(0===d)switch(2*F+3*M){case 533:break;default:d=1}k++}break;case 64:0===x+k+O+C+I+m&&(m=1);break;case 42:case 47:if(!(0<O+C+k))switch(x){case 0:switch(2*h+3*l.charCodeAt(R+1)){case 235:x=47;break;case 220:z=R,x=42}break;case 42:47===h&&42===F&&z+2!==R&&(33===l.charCodeAt(z+2)&&(W+=l.substring(z,R+1)),y="",x=0)}}0===x&&(U+=y)}M=F,F=h,R++}if(0<(z=W.length)){if(L=u,0<D&&(void 0!==(w=a(2,W,L,n,T,S,z,f,p,f))&&0===(W=w).length))return Q+W+H;if(W=L.join(",")+"{"+W+"}",0!=A*P){switch(2!==A||o(W,2)||(P=0),P){case 111:W=W.replace(b,":-moz-$1")+W;break;case 112:W=W.replace(g,"::-webkit-input-$1")+W.replace(g,"::-moz-$1")+W.replace(g,":-ms-input-$1")+W}P=0}}return Q+W+H}(_,u,n,0,0);return 0<D&&(void 0!==(l=a(-2,f,u,u,T,S,f.length,0,0,0))&&(f=l)),"",P=0,S=T=1,f}var s=/^\0+/g,c=/[\0\r\f]/g,f=/: */g,p=/zoo|gra/,d=/([,: ])(transform)/g,h=/,\r+?/g,m=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,g=/::(place)/g,b=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,w=/([\s\S]*?);/g,C=/-self|flex-/g,x=/[^]*?(:[rp][el]a[\w-]+)[^]*/,k=/stretch|:\s*\w+\-(?:conte|avail)/,O=/([^-])(image-set\()/,S=1,T=1,P=0,A=1,_=[],F=[],D=0,M=null,N=0;return l.use=function e(t){switch(t){case void 0:case null:D=F.length=0;break;default:if("function"==typeof t)F[D++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else N=0|!!t}return e},l.set=u,void 0!==e&&u(e),l};function v(e){e&&g.current.insert(e+"}")}var g={current:null},b=function(e,t,n,r,o,i,a,u,l,s){switch(e){case 1:switch(t.charCodeAt(0)){case 64:return g.current.insert(t+";"),"";case 108:if(98===t.charCodeAt(2))return""}break;case 2:if(0===u)return t+"/*|*/";break;case 3:switch(u){case 102:case 112:return g.current.insert(n[0]+t),"";default:return t+(0===s?"/*|*/":"")}case-2:t.split("/*|*/}").forEach(v)}},y=function(e){void 0===e&&(e={});var t,n=e.key||"css";void 0!==e.prefix&&(t={prefix:e.prefix});var r=new m(t);var o,i={};o=e.container||document.head;var a,u=document.querySelectorAll("style[data-emotion-"+n+"]");Array.prototype.forEach.call(u,(function(e){e.getAttribute("data-emotion-"+n).split(" ").forEach((function(e){i[e]=!0})),e.parentNode!==o&&o.appendChild(e)})),r.use(e.stylisPlugins)(b),a=function(e,t,n,o){var i=t.name;g.current=n,r(e,t.styles),o&&(l.inserted[i]=!0)};var l={key:n,sheet:new h({key:n,container:o,nonce:e.nonce,speedy:e.speedy}),nonce:e.nonce,inserted:i,registered:{},insert:a};return l};function E(e,t,n){var r="";return n.split(" ").forEach((function(n){void 0!==e[n]?t.push(e[n]):r+=n+" "})),r}var w=function(e,t,n){var r=e.key+"-"+t.name;if(!1===n&&void 0===e.registered[r]&&(e.registered[r]=t.styles),void 0===e.inserted[t.name]){var o=t;do{e.insert("."+r,o,e.sheet,!0);o=o.next}while(void 0!==o)}};var C=function(e){for(var t,n=0,r=0,o=e.length;o>=4;++r,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(o){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)},x={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var k=/[A-Z]|^ms/g,O=/_EMO_([^_]+?)_([^]*?)_EMO_/g,S=function(e){return 45===e.charCodeAt(1)},T=function(e){return null!=e&&"boolean"!=typeof e},P=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}((function(e){return S(e)?e:e.replace(k,"-$&").toLowerCase()})),A=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(O,(function(e,t,n){return F={name:t,styles:n,next:F},t}))}return 1===x[e]||S(e)||"number"!=typeof t||0===t?t:t+"px"};function _(e,t,n,r){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return F={name:n.name,styles:n.styles,next:F},n.name;if(void 0!==n.styles){var o=n.next;if(void 0!==o)for(;void 0!==o;)F={name:o.name,styles:o.styles,next:F},o=o.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var o=0;o<n.length;o++)r+=_(e,t,n[o],!1);else for(var i in n){var a=n[i];if("object"!=typeof a)null!=t&&void 0!==t[a]?r+=i+"{"+t[a]+"}":T(a)&&(r+=P(i)+":"+A(i,a)+";");else if(!Array.isArray(a)||"string"!=typeof a[0]||null!=t&&void 0!==t[a[0]]){var u=_(e,t,a,!1);switch(i){case"animation":case"animationName":r+=P(i)+":"+u+";";break;default:r+=i+"{"+u+"}"}}else for(var l=0;l<a.length;l++)T(a[l])&&(r+=P(i)+":"+A(i,a[l])+";")}return r}(e,t,n);case"function":if(void 0!==e){var i=F,a=n(e);return F=i,_(e,t,a,r)}break;case"string":}if(null==t)return n;var u=t[n];return void 0===u||r?n:u}var F,D=/label:\s*([^\s;\n{]+)\s*;/g;var M=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";F=void 0;var i=e[0];null==i||void 0===i.raw?(r=!1,o+=_(n,t,i,!1)):o+=i[0];for(var a=1;a<e.length;a++)o+=_(n,t,e[a],46===o.charCodeAt(o.length-1)),r&&(o+=i[a]);D.lastIndex=0;for(var u,l="";null!==(u=D.exec(o));)l+="-"+u[1];return{name:C(o)+l,styles:o,next:F}};var N=function(e){for(var t,n=0,r=0,o=e.length;o>=4;++r,o-=4)t=1540483477*(65535&(t=255&e.charCodeAt(r)|(255&e.charCodeAt(++r))<<8|(255&e.charCodeAt(++r))<<16|(255&e.charCodeAt(++r))<<24))+(59797*(t>>>16)<<16),n=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&n)+(59797*(n>>>16)<<16);switch(o){case 3:n^=(255&e.charCodeAt(r+2))<<16;case 2:n^=(255&e.charCodeAt(r+1))<<8;case 1:n=1540483477*(65535&(n^=255&e.charCodeAt(r)))+(59797*(n>>>16)<<16)}return(((n=1540483477*(65535&(n^=n>>>13))+(59797*(n>>>16)<<16))^n>>>15)>>>0).toString(36)},I={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var R=/[A-Z]|^ms/g,L=/_EMO_([^_]+?)_([^]*?)_EMO_/g,j=function(e){return 45===e.charCodeAt(1)},z=function(e){return null!=e&&"boolean"!=typeof e},V=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e(n)),t[n]}}((function(e){return j(e)?e:e.replace(R,"-$&").toLowerCase()})),B=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(L,(function(e,t,n){return W={name:t,styles:n,next:W},t}))}return 1===I[e]||j(e)||"number"!=typeof t||0===t?t:t+"px"};function U(e,t,n,r){if(null==n)return"";if(void 0!==n.__emotion_styles)return n;switch(typeof n){case"boolean":return"";case"object":if(1===n.anim)return W={name:n.name,styles:n.styles,next:W},n.name;if(void 0!==n.styles){var o=n.next;if(void 0!==o)for(;void 0!==o;)W={name:o.name,styles:o.styles,next:W},o=o.next;return n.styles+";"}return function(e,t,n){var r="";if(Array.isArray(n))for(var o=0;o<n.length;o++)r+=U(e,t,n[o],!1);else for(var i in n){var a=n[i];if("object"!=typeof a)null!=t&&void 0!==t[a]?r+=i+"{"+t[a]+"}":z(a)&&(r+=V(i)+":"+B(i,a)+";");else if(!Array.isArray(a)||"string"!=typeof a[0]||null!=t&&void 0!==t[a[0]]){var u=U(e,t,a,!1);switch(i){case"animation":case"animationName":r+=V(i)+":"+u+";";break;default:r+=i+"{"+u+"}"}}else for(var l=0;l<a.length;l++)z(a[l])&&(r+=V(i)+":"+B(i,a[l])+";")}return r}(e,t,n);case"function":if(void 0!==e){var i=W,a=n(e);return W=i,U(e,t,a,r)}break;case"string":}if(null==t)return n;var u=t[n];return void 0===u||r?n:u}var W,H=/label:\s*([^\s;\n{]+)\s*;/g;var Q=function(e,t,n){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var r=!0,o="";W=void 0;var i=e[0];null==i||void 0===i.raw?(r=!1,o+=U(n,t,i,!1)):o+=i[0];for(var a=1;a<e.length;a++)o+=U(n,t,e[a],46===o.charCodeAt(o.length-1)),r&&(o+=i[a]);H.lastIndex=0;for(var u,l="";null!==(u=H.exec(o));)l+="-"+u[1];return{name:N(o)+l,styles:o,next:W}};var q=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Q(t)},K=Object(r.createContext)("undefined"!=typeof HTMLElement?y():null),G=Object(r.createContext)({}),Y=K.Provider,X=function(e){return Object(r.forwardRef)((function(t,n){return Object(r.createElement)(K.Consumer,null,(function(r){return e(t,r,n)}))}))},Z="__EMOTION_TYPE_PLEASE_DO_NOT_USE__",J=Object.prototype.hasOwnProperty,ee=function(e,t,n,o){var i=null===n?t.css:t.css(n);"string"==typeof i&&void 0!==e.registered[i]&&(i=e.registered[i]);var a=t[Z],u=[i],l="";"string"==typeof t.className?l=E(e.registered,u,t.className):null!=t.className&&(l=t.className+" ");var s=M(u);w(e,s,"string"==typeof a);l+=e.key+"-"+s.name;var c={};for(var f in t)J.call(t,f)&&"css"!==f&&f!==Z&&(c[f]=t[f]);return c.ref=o,c.className=l,Object(r.createElement)(a,c)},te=X((function(e,t,n){return"function"==typeof e.css?Object(r.createElement)(G.Consumer,null,(function(r){return ee(t,e,r,n)})):ee(t,e,null,n)}));var ne=function(e,t){var n=arguments;if(null==t||!J.call(t,"css"))return r.createElement.apply(void 0,n);var o=n.length,i=new Array(o);i[0]=te;var a={};for(var u in t)J.call(t,u)&&(a[u]=t[u]);a[Z]=e,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)},re=(r.Component,function e(t){for(var n=t.length,r=0,o="";r<n;r++){var i=t[r];if(null!=i){var a=void 0;switch(typeof i){case"boolean":break;case"object":if(Array.isArray(i))a=e(i);else for(var u in a="",i)i[u]&&u&&(a&&(a+=" "),a+=u);break;default:a=i}a&&(o&&(o+=" "),o+=a)}}return o});function oe(e,t,n){var r=[],o=E(e,r,n);return r.length<2?n:o+t(r)}var ie=X((function(e,t){return Object(r.createElement)(G.Consumer,null,(function(n){var r=function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];var o=M(n,t.registered);return w(t,o,!1),t.key+"-"+o.name},o={css:r,cx:function(){for(var e=arguments.length,n=new Array(e),o=0;o<e;o++)n[o]=arguments[o];return oe(t.registered,r,re(n))},theme:n},i=e.children(o);return!0,i}))})),ae=n(2),ue=n.n(ae),le=function(){};function se(e,t){return t?"-"===t[0]?e+t:e+"__"+t:e}function ce(e,t,n){var r=[n];if(t&&e)for(var o in t)t.hasOwnProperty(o)&&t[o]&&r.push(""+se(e,o));return r.filter((function(e){return e})).map((function(e){return String(e).trim()})).join(" ")}var fe=function(e){return Array.isArray(e)?e.filter(Boolean):"object"==typeof e&&null!==e?[e]:[]};function pe(e){return[document.documentElement,document.body,window].indexOf(e)>-1}function de(e){return pe(e)?window.pageYOffset:e.scrollTop}function he(e,t){pe(e)?window.scrollTo(0,t):e.scrollTop=t}function me(e,t,n,r){void 0===n&&(n=200),void 0===r&&(r=le);var o=de(e),i=t-o,a=0;!function t(){var u,l=i*((u=(u=a+=10)/n-1)*u*u+1)+o;he(e,l),a<n?window.requestAnimationFrame(t):r(e)}()}function ve(){try{return document.createEvent("TouchEvent"),!0}catch(e){return!1}}var ge=n(4),be=n.n(ge);function ye(){return(ye=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Ee(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}function we(e){var t=e.maxHeight,n=e.menuEl,r=e.minHeight,o=e.placement,i=e.shouldScroll,a=e.isFixedPosition,u=e.theme.spacing,l=function(e){var t=getComputedStyle(e),n="absolute"===t.position,r=/(auto|scroll)/,o=document.documentElement;if("fixed"===t.position)return o;for(var i=e;i=i.parentElement;)if(t=getComputedStyle(i),(!n||"static"!==t.position)&&r.test(t.overflow+t.overflowY+t.overflowX))return i;return o}(n),s={placement:"bottom",maxHeight:t};if(!n||!n.offsetParent)return s;var c=l.getBoundingClientRect().height,f=n.getBoundingClientRect(),p=f.bottom,d=f.height,h=f.top,m=n.offsetParent.getBoundingClientRect().top,v=window.innerHeight,g=de(l),b=parseInt(getComputedStyle(n).marginBottom,10),y=parseInt(getComputedStyle(n).marginTop,10),E=m-y,w=v-h,C=E+g,x=c-g-h,k=p-v+g+b,O=g+h-y;switch(o){case"auto":case"bottom":if(w>=d)return{placement:"bottom",maxHeight:t};if(x>=d&&!a)return i&&me(l,k,160),{placement:"bottom",maxHeight:t};if(!a&&x>=r||a&&w>=r)return i&&me(l,k,160),{placement:"bottom",maxHeight:a?w-b:x-b};if("auto"===o||a){var S=t,T=a?E:C;return T>=r&&(S=Math.min(T-b-u.controlHeight,t)),{placement:"top",maxHeight:S}}if("bottom"===o)return he(l,k),{placement:"bottom",maxHeight:t};break;case"top":if(E>=d)return{placement:"top",maxHeight:t};if(C>=d&&!a)return i&&me(l,O,160),{placement:"top",maxHeight:t};if(!a&&C>=r||a&&E>=r){var P=t;return(!a&&C>=r||a&&E>=r)&&(P=a?E-y:C-y),i&&me(l,O,160),{placement:"top",maxHeight:P}}return{placement:"bottom",maxHeight:t};default:throw new Error('Invalid placement provided "'+o+'".')}return s}var Ce=function(e){return"auto"===e?"bottom":e},xe=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).state={maxHeight:t.props.maxMenuHeight,placement:null},t.getPlacement=function(e){var n=t.props,r=n.minMenuHeight,o=n.maxMenuHeight,i=n.menuPlacement,a=n.menuPosition,u=n.menuShouldScrollIntoView,l=n.theme,s=t.context.getPortalPlacement;if(e){var c="fixed"===a,f=we({maxHeight:o,menuEl:e,minHeight:r,placement:i,shouldScroll:u&&!c,isFixedPosition:c,theme:l});s&&s(f),t.setState(f)}},t.getUpdatedProps=function(){var e=t.props.menuPlacement,n=t.state.placement||Ce(e);return ye({},t.props,{placement:n,maxHeight:t.state.maxHeight})},t}return Ee(t,e),t.prototype.render=function(){return(0,this.props.children)({ref:this.getPlacement,placerProps:this.getUpdatedProps()})},t}(r.Component);xe.contextTypes={getPortalPlacement:ue.a.func};var ke=function(e){var t=e.theme,n=t.spacing.baseUnit;return{color:t.colors.neutral40,padding:2*n+"px "+3*n+"px",textAlign:"center"}},Oe=ke,Se=ke,Te=function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps;return ne("div",ye({css:o("noOptionsMessage",e),className:r({"menu-notice":!0,"menu-notice--no-options":!0},n)},i),t)};Te.defaultProps={children:"No options"};var Pe=function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps;return ne("div",ye({css:o("loadingMessage",e),className:r({"menu-notice":!0,"menu-notice--loading":!0},n)},i),t)};Pe.defaultProps={children:"Loading..."};var Ae=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).state={placement:null},t.getPortalPlacement=function(e){var n=e.placement;n!==Ce(t.props.menuPlacement)&&t.setState({placement:n})},t}Ee(t,e);var n=t.prototype;return n.getChildContext=function(){return{getPortalPlacement:this.getPortalPlacement}},n.render=function(){var e=this.props,t=e.appendTo,n=e.children,r=e.controlElement,o=e.menuPlacement,a=e.menuPosition,u=e.getStyles,l="fixed"===a;if(!t&&!l||!r)return null;var s=this.state.placement||Ce(o),c=function(e){var t=e.getBoundingClientRect();return{bottom:t.bottom,height:t.height,left:t.left,right:t.right,top:t.top,width:t.width}}(r),f=l?0:window.pageYOffset,p=c[s]+f,d=ne("div",{css:u("menuPortal",{offset:p,position:a,rect:c})},n);return t?Object(i.createPortal)(d,t):d},t}(r.Component);Ae.childContextTypes={getPortalPlacement:ue.a.func};var _e=Array.isArray,Fe=Object.keys,De=Object.prototype.hasOwnProperty;function Me(e,t){try{return function e(t,n){if(t===n)return!0;if(t&&n&&"object"==typeof t&&"object"==typeof n){var r,o,i,a=_e(t),u=_e(n);if(a&&u){if((o=t.length)!=n.length)return!1;for(r=o;0!=r--;)if(!e(t[r],n[r]))return!1;return!0}if(a!=u)return!1;var l=t instanceof Date,s=n instanceof Date;if(l!=s)return!1;if(l&&s)return t.getTime()==n.getTime();var c=t instanceof RegExp,f=n instanceof RegExp;if(c!=f)return!1;if(c&&f)return t.toString()==n.toString();var p=Fe(t);if((o=p.length)!==Fe(n).length)return!1;for(r=o;0!=r--;)if(!De.call(n,p[r]))return!1;for(r=o;0!=r--;)if(!("_owner"===(i=p[r])&&t.$$typeof||e(t[i],n[i])))return!1;return!0}return t!=t&&n!=n}(e,t)}catch(e){if(e.message&&e.message.match(/stack|recursion/i))return console.warn("Warning: react-fast-compare does not handle circular references.",e.name,e.message),!1;throw e}}function Ne(){return(Ne=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Ie(){var e=function(e,t){t||(t=e.slice(0));return e.raw=t,e}(["\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n"]);return Ie=function(){return e},e}function Re(){return(Re=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Le={name:"19bqh2r",styles:"display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0;"},je=function(e){var t=e.size,n=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["size"]);return ne("svg",Re({height:t,width:t,viewBox:"0 0 20 20","aria-hidden":"true",focusable:"false",css:Le},n))},ze=function(e){return ne(je,Re({size:20},e),ne("path",{d:"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"}))},Ve=function(e){return ne(je,Re({size:20},e),ne("path",{d:"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"}))},Be=function(e){var t=e.isFocused,n=e.theme,r=n.spacing.baseUnit,o=n.colors;return{label:"indicatorContainer",color:t?o.neutral60:o.neutral20,display:"flex",padding:2*r,transition:"color 150ms",":hover":{color:t?o.neutral80:o.neutral40}}},Ue=Be,We=Be,He=function(){var e=q.apply(void 0,arguments),t="animation-"+e.name;return{name:t,styles:"@keyframes "+t+"{"+e.styles+"}",anim:1,toString:function(){return"_EMO_"+this.name+"_"+this.styles+"_EMO_"}}}(Ie()),Qe=function(e){var t=e.delay,n=e.offset;return ne("span",{css:q({animation:He+" 1s ease-in-out "+t+"ms infinite;",backgroundColor:"currentColor",borderRadius:"1em",display:"inline-block",marginLeft:n?"1em":null,height:"1em",verticalAlign:"top",width:"1em"},"")})},qe=function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerProps,i=e.isRtl;return ne("div",Re({},o,{css:r("loadingIndicator",e),className:n({indicator:!0,"loading-indicator":!0},t)}),ne(Qe,{delay:0,offset:i}),ne(Qe,{delay:160,offset:!0}),ne(Qe,{delay:320,offset:!i}))};function $e(){return($e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}qe.defaultProps={size:4};function Ke(){return(Ke=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Ge(){return(Ge=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Ye=function(e){return{label:"input",background:0,border:0,fontSize:"inherit",opacity:e?0:1,outline:0,padding:0,color:"inherit"}};function Xe(){return(Xe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Ze=function(e){var t=e.children,n=e.innerProps;return ne("div",n,t)},Je=Ze,et=Ze;var tt=function(e){var t=e.children,n=e.className,r=e.components,o=e.cx,i=e.data,a=e.getStyles,u=e.innerProps,l=e.isDisabled,s=e.removeProps,c=e.selectProps,f=r.Container,p=r.Label,d=r.Remove;return ne(ie,null,(function(r){var h=r.css,m=r.cx;return ne(f,{data:i,innerProps:Xe({},u,{className:m(h(a("multiValue",e)),o({"multi-value":!0,"multi-value--is-disabled":l},n))}),selectProps:c},ne(p,{data:i,innerProps:{className:m(h(a("multiValueLabel",e)),o({"multi-value__label":!0},n))},selectProps:c},t),ne(d,{data:i,innerProps:Xe({className:m(h(a("multiValueRemove",e)),o({"multi-value__remove":!0},n))},s),selectProps:c}))}))};function nt(){return(nt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}tt.defaultProps={cropWithEllipsis:!0};function rt(){return(rt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function ot(){return(ot=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function it(){return(it=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var at={ClearIndicator:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps;return ne("div",Re({},i,{css:o("clearIndicator",e),className:r({indicator:!0,"clear-indicator":!0},n)}),t||ne(ze,null))},Control:function(e){var t=e.children,n=e.cx,r=e.getStyles,o=e.className,i=e.isDisabled,a=e.isFocused,u=e.innerRef,l=e.innerProps,s=e.menuIsOpen;return ne("div",$e({ref:u,css:r("control",e),className:n({control:!0,"control--is-disabled":i,"control--is-focused":a,"control--menu-is-open":s},o)},l),t)},DropdownIndicator:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps;return ne("div",Re({},i,{css:o("dropdownIndicator",e),className:r({indicator:!0,"dropdown-indicator":!0},n)}),t||ne(Ve,null))},DownChevron:Ve,CrossIcon:ze,Group:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.Heading,a=e.headingProps,u=e.label,l=e.theme,s=e.selectProps;return ne("div",{css:o("group",e),className:r({group:!0},n)},ne(i,Ke({},a,{selectProps:s,theme:l,getStyles:o,cx:r}),u),ne("div",null,t))},GroupHeading:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.theme,i=(e.selectProps,function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["className","cx","getStyles","theme","selectProps"]));return ne("div",Ke({css:r("groupHeading",Ke({theme:o},i)),className:n({"group-heading":!0},t)},i))},IndicatorsContainer:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles;return ne("div",{css:o("indicatorsContainer",e),className:r({indicators:!0},n)},t)},IndicatorSeparator:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerProps;return ne("span",Re({},o,{css:r("indicatorSeparator",e),className:n({"indicator-separator":!0},t)}))},Input:function(e){var t=e.className,n=e.cx,r=e.getStyles,o=e.innerRef,i=e.isHidden,a=e.isDisabled,u=e.theme,l=(e.selectProps,function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["className","cx","getStyles","innerRef","isHidden","isDisabled","theme","selectProps"]));return ne("div",{css:r("input",Ge({theme:u},l))},ne(be.a,Ge({className:n({input:!0},t),inputRef:o,inputStyle:Ye(i),disabled:a},l)))},LoadingIndicator:qe,Menu:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerRef,a=e.innerProps;return ne("div",ye({css:o("menu",e),className:r({menu:!0},n)},a,{ref:i}),t)},MenuList:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.isMulti,a=e.innerRef;return ne("div",{css:o("menuList",e),className:r({"menu-list":!0,"menu-list--is-multi":i},n),ref:a},t)},MenuPortal:Ae,LoadingMessage:Pe,NoOptionsMessage:Te,MultiValue:tt,MultiValueContainer:Je,MultiValueLabel:et,MultiValueRemove:function(e){var t=e.children,n=e.innerProps;return ne("div",n,t||ne(ze,{size:14}))},Option:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.isDisabled,a=e.isFocused,u=e.isSelected,l=e.innerRef,s=e.innerProps;return ne("div",nt({css:o("option",e),className:r({option:!0,"option--is-disabled":i,"option--is-focused":a,"option--is-selected":u},n),ref:l},s),t)},Placeholder:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps;return ne("div",rt({css:o("placeholder",e),className:r({placeholder:!0},n)},i),t)},SelectContainer:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.innerProps,a=e.isDisabled,u=e.isRtl;return ne("div",Ne({css:o("container",e),className:r({"--is-disabled":a,"--is-rtl":u},n)},i),t)},SingleValue:function(e){var t=e.children,n=e.className,r=e.cx,o=e.getStyles,i=e.isDisabled,a=e.innerProps;return ne("div",ot({css:o("singleValue",e),className:r({"single-value":!0,"single-value--is-disabled":i},n)},a),t)},ValueContainer:function(e){var t=e.children,n=e.className,r=e.cx,o=e.isMulti,i=e.getStyles,a=e.hasValue;return ne("div",{css:i("valueContainer",e),className:r({"value-container":!0,"value-container--is-multi":o,"value-container--has-value":a},n)},t)}},ut=[{base:"A",letters:/[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g},{base:"AA",letters:/[\uA732]/g},{base:"AE",letters:/[\u00C6\u01FC\u01E2]/g},{base:"AO",letters:/[\uA734]/g},{base:"AU",letters:/[\uA736]/g},{base:"AV",letters:/[\uA738\uA73A]/g},{base:"AY",letters:/[\uA73C]/g},{base:"B",letters:/[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g},{base:"C",letters:/[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g},{base:"D",letters:/[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g},{base:"DZ",letters:/[\u01F1\u01C4]/g},{base:"Dz",letters:/[\u01F2\u01C5]/g},{base:"E",letters:/[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g},{base:"F",letters:/[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g},{base:"G",letters:/[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g},{base:"H",letters:/[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g},{base:"I",letters:/[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g},{base:"J",letters:/[\u004A\u24BF\uFF2A\u0134\u0248]/g},{base:"K",letters:/[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g},{base:"L",letters:/[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g},{base:"LJ",letters:/[\u01C7]/g},{base:"Lj",letters:/[\u01C8]/g},{base:"M",letters:/[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g},{base:"N",letters:/[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g},{base:"NJ",letters:/[\u01CA]/g},{base:"Nj",letters:/[\u01CB]/g},{base:"O",letters:/[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g},{base:"OI",letters:/[\u01A2]/g},{base:"OO",letters:/[\uA74E]/g},{base:"OU",letters:/[\u0222]/g},{base:"P",letters:/[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g},{base:"Q",letters:/[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g},{base:"R",letters:/[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g},{base:"S",letters:/[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g},{base:"T",letters:/[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g},{base:"TZ",letters:/[\uA728]/g},{base:"U",letters:/[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g},{base:"V",letters:/[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g},{base:"VY",letters:/[\uA760]/g},{base:"W",letters:/[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g},{base:"X",letters:/[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g},{base:"Y",letters:/[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g},{base:"Z",letters:/[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g},{base:"a",letters:/[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g},{base:"aa",letters:/[\uA733]/g},{base:"ae",letters:/[\u00E6\u01FD\u01E3]/g},{base:"ao",letters:/[\uA735]/g},{base:"au",letters:/[\uA737]/g},{base:"av",letters:/[\uA739\uA73B]/g},{base:"ay",letters:/[\uA73D]/g},{base:"b",letters:/[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g},{base:"c",letters:/[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g},{base:"d",letters:/[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g},{base:"dz",letters:/[\u01F3\u01C6]/g},{base:"e",letters:/[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g},{base:"f",letters:/[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g},{base:"g",letters:/[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g},{base:"h",letters:/[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g},{base:"hv",letters:/[\u0195]/g},{base:"i",letters:/[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g},{base:"j",letters:/[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g},{base:"k",letters:/[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g},{base:"l",letters:/[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g},{base:"lj",letters:/[\u01C9]/g},{base:"m",letters:/[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g},{base:"n",letters:/[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g},{base:"nj",letters:/[\u01CC]/g},{base:"o",letters:/[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g},{base:"oi",letters:/[\u01A3]/g},{base:"ou",letters:/[\u0223]/g},{base:"oo",letters:/[\uA74F]/g},{base:"p",letters:/[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g},{base:"q",letters:/[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g},{base:"r",letters:/[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g},{base:"s",letters:/[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g},{base:"t",letters:/[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g},{base:"tz",letters:/[\uA729]/g},{base:"u",letters:/[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g},{base:"v",letters:/[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g},{base:"vy",letters:/[\uA761]/g},{base:"w",letters:/[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g},{base:"x",letters:/[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g},{base:"y",letters:/[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g},{base:"z",letters:/[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g}],lt=function(e){for(var t=0;t<ut.length;t++)e=e.replace(ut[t].letters,ut[t].base);return e};function st(){return(st=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var ct=function(e){return e.replace(/^\s+|\s+$/g,"")},ft=function(e){return e.label+" "+e.value};function pt(){return(pt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var dt={name:"1laao21-a11yText",styles:"label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap;"},ht=function(e){return ne("span",pt({css:dt},e))};function mt(){return(mt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function vt(e){e.in,e.out,e.onExited,e.appear,e.enter,e.exit;var t=e.innerRef,n=(e.emotion,function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["in","out","onExited","appear","enter","exit","innerRef","emotion"]));return ne("input",mt({ref:t},n,{css:q({label:"dummyInput",background:0,border:0,fontSize:"inherit",outline:0,padding:0,width:1,color:"transparent",left:-100,opacity:0,position:"relative",transform:"scale(0)"},"")}))}var gt=function(e){var t,n;function r(){return e.apply(this,arguments)||this}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var o=r.prototype;return o.componentDidMount=function(){this.props.innerRef(Object(i.findDOMNode)(this))},o.componentWillUnmount=function(){this.props.innerRef(null)},o.render=function(){return this.props.children},r}(r.Component),bt=["boxSizing","height","overflow","paddingRight","position"],yt={boxSizing:"border-box",overflow:"hidden",position:"relative",height:"100%"};function Et(e){e.preventDefault()}function wt(e){e.stopPropagation()}function Ct(){var e=this.scrollTop,t=this.scrollHeight,n=e+this.offsetHeight;0===e?this.scrollTop=1:n===t&&(this.scrollTop=e-1)}function xt(){return"ontouchstart"in window||navigator.maxTouchPoints}var kt=!(!window.document||!window.document.createElement),Ot=0,St=function(e){var t,n;function r(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).originalStyles={},t.listenerOptions={capture:!1,passive:!1},t}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var o=r.prototype;return o.componentDidMount=function(){var e=this;if(kt){var t=this.props,n=t.accountForScrollbars,r=t.touchScrollTarget,o=document.body,i=o&&o.style;if(n&&bt.forEach((function(t){var n=i&&i[t];e.originalStyles[t]=n})),n&&Ot<1){var a=parseInt(this.originalStyles.paddingRight,10)||0,u=document.body?document.body.clientWidth:0,l=window.innerWidth-u+a||0;Object.keys(yt).forEach((function(e){var t=yt[e];i&&(i[e]=t)})),i&&(i.paddingRight=l+"px")}o&&xt()&&(o.addEventListener("touchmove",Et,this.listenerOptions),r&&(r.addEventListener("touchstart",Ct,this.listenerOptions),r.addEventListener("touchmove",wt,this.listenerOptions))),Ot+=1}},o.componentWillUnmount=function(){var e=this;if(kt){var t=this.props,n=t.accountForScrollbars,r=t.touchScrollTarget,o=document.body,i=o&&o.style;Ot=Math.max(Ot-1,0),n&&Ot<1&&bt.forEach((function(t){var n=e.originalStyles[t];i&&(i[t]=n)})),o&&xt()&&(o.removeEventListener("touchmove",Et,this.listenerOptions),r&&(r.removeEventListener("touchstart",Ct,this.listenerOptions),r.removeEventListener("touchmove",wt,this.listenerOptions)))}},o.render=function(){return null},r}(r.Component);St.defaultProps={accountForScrollbars:!0};var Tt={name:"1dsbpcp",styles:"position:fixed;left:0;bottom:0;right:0;top:0;"},Pt=function(e){var t,n;function r(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).state={touchScrollTarget:null},t.getScrollTarget=function(e){e!==t.state.touchScrollTarget&&t.setState({touchScrollTarget:e})},t.blurSelectInput=function(){document.activeElement&&document.activeElement.blur()},t}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r.prototype.render=function(){var e=this.props,t=e.children,n=e.isEnabled,r=this.state.touchScrollTarget;return n?ne("div",null,ne("div",{onClick:this.blurSelectInput,css:Tt}),ne(gt,{innerRef:this.getScrollTarget},t),r?ne(St,{touchScrollTarget:r}):null):t},r}(r.PureComponent);var At=function(e){var t,n;function r(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).isBottom=!1,t.isTop=!1,t.scrollTarget=void 0,t.touchStart=void 0,t.cancelScroll=function(e){e.preventDefault(),e.stopPropagation()},t.handleEventDelta=function(e,n){var r=t.props,o=r.onBottomArrive,i=r.onBottomLeave,a=r.onTopArrive,u=r.onTopLeave,l=t.scrollTarget,s=l.scrollTop,c=l.scrollHeight,f=l.clientHeight,p=t.scrollTarget,d=n>0,h=c-f-s,m=!1;h>n&&t.isBottom&&(i&&i(e),t.isBottom=!1),d&&t.isTop&&(u&&u(e),t.isTop=!1),d&&n>h?(o&&!t.isBottom&&o(e),p.scrollTop=c,m=!0,t.isBottom=!0):!d&&-n>s&&(a&&!t.isTop&&a(e),p.scrollTop=0,m=!0,t.isTop=!0),m&&t.cancelScroll(e)},t.onWheel=function(e){t.handleEventDelta(e,e.deltaY)},t.onTouchStart=function(e){t.touchStart=e.changedTouches[0].clientY},t.onTouchMove=function(e){var n=t.touchStart-e.changedTouches[0].clientY;t.handleEventDelta(e,n)},t.getScrollTarget=function(e){t.scrollTarget=e},t}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var i=r.prototype;return i.componentDidMount=function(){this.startListening(this.scrollTarget)},i.componentWillUnmount=function(){this.stopListening(this.scrollTarget)},i.startListening=function(e){e&&("function"==typeof e.addEventListener&&e.addEventListener("wheel",this.onWheel,!1),"function"==typeof e.addEventListener&&e.addEventListener("touchstart",this.onTouchStart,!1),"function"==typeof e.addEventListener&&e.addEventListener("touchmove",this.onTouchMove,!1))},i.stopListening=function(e){"function"==typeof e.removeEventListener&&e.removeEventListener("wheel",this.onWheel,!1),"function"==typeof e.removeEventListener&&e.removeEventListener("touchstart",this.onTouchStart,!1),"function"==typeof e.removeEventListener&&e.removeEventListener("touchmove",this.onTouchMove,!1)},i.render=function(){return o.a.createElement(gt,{innerRef:this.getScrollTarget},this.props.children)},r}(r.Component);function _t(e){var t=e.isEnabled,n=void 0===t||t,r=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["isEnabled"]);return n?o.a.createElement(At,r):r.children}var Ft=function(e,t){void 0===t&&(t={});var n=t,r=n.isSearchable,o=n.isMulti,i=n.label,a=n.isDisabled;switch(e){case"menu":return"Use Up and Down to choose options"+(a?"":", press Enter to select the currently focused option")+", press Escape to exit the menu, press Tab to select the option and exit the menu.";case"input":return(i||"Select")+" is focused "+(r?",type to refine list":"")+", press Down to open the menu, "+(o?" press left to focus selected values":"");case"value":return"Use left and right to toggle between focused values, press Backspace to remove the currently focused value"}},Dt=function(e,t){var n=t.value,r=t.isDisabled;if(n)switch(e){case"deselect-option":case"pop-value":case"remove-value":return"option "+n+", deselected.";case"select-option":return r?"option "+n+" is disabled. Select another option.":"option "+n+", selected."}},Mt=function(e){return!!e.isDisabled};var Nt={clearIndicator:We,container:function(e){var t=e.isDisabled;return{label:"container",direction:e.isRtl?"rtl":null,pointerEvents:t?"none":null,position:"relative"}},control:function(e){var t=e.isDisabled,n=e.isFocused,r=e.theme,o=r.colors,i=r.borderRadius,a=r.spacing;return{label:"control",alignItems:"center",backgroundColor:t?o.neutral5:o.neutral0,borderColor:t?o.neutral10:n?o.primary:o.neutral20,borderRadius:i,borderStyle:"solid",borderWidth:1,boxShadow:n?"0 0 0 1px "+o.primary:null,cursor:"default",display:"flex",flexWrap:"wrap",justifyContent:"space-between",minHeight:a.controlHeight,outline:"0 !important",position:"relative",transition:"all 100ms","&:hover":{borderColor:n?o.primary:o.neutral30}}},dropdownIndicator:Ue,group:function(e){var t=e.theme.spacing;return{paddingBottom:2*t.baseUnit,paddingTop:2*t.baseUnit}},groupHeading:function(e){var t=e.theme.spacing;return{label:"group",color:"#999",cursor:"default",display:"block",fontSize:"75%",fontWeight:"500",marginBottom:"0.25em",paddingLeft:3*t.baseUnit,paddingRight:3*t.baseUnit,textTransform:"uppercase"}},indicatorsContainer:function(){return{alignItems:"center",alignSelf:"stretch",display:"flex",flexShrink:0}},indicatorSeparator:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing.baseUnit,o=n.colors;return{label:"indicatorSeparator",alignSelf:"stretch",backgroundColor:t?o.neutral10:o.neutral20,marginBottom:2*r,marginTop:2*r,width:1}},input:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing,o=n.colors;return{margin:r.baseUnit/2,paddingBottom:r.baseUnit/2,paddingTop:r.baseUnit/2,visibility:t?"hidden":"visible",color:o.neutral80}},loadingIndicator:function(e){var t=e.isFocused,n=e.size,r=e.theme,o=r.colors,i=r.spacing.baseUnit;return{label:"loadingIndicator",color:t?o.neutral60:o.neutral20,display:"flex",padding:2*i,transition:"color 150ms",alignSelf:"center",fontSize:n,lineHeight:1,marginRight:n,textAlign:"center",verticalAlign:"middle"}},loadingMessage:Se,menu:function(e){var t,n=e.placement,r=e.theme,o=r.borderRadius,i=r.spacing,a=r.colors;return(t={label:"menu"})[function(e){return e?{bottom:"top",top:"bottom"}[e]:"bottom"}(n)]="100%",t.backgroundColor=a.neutral0,t.borderRadius=o,t.boxShadow="0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)",t.marginBottom=i.menuGutter,t.marginTop=i.menuGutter,t.position="absolute",t.width="100%",t.zIndex=1,t},menuList:function(e){var t=e.maxHeight,n=e.theme.spacing.baseUnit;return{maxHeight:t,overflowY:"auto",paddingBottom:n,paddingTop:n,position:"relative",WebkitOverflowScrolling:"touch"}},menuPortal:function(e){var t=e.rect,n=e.offset,r=e.position;return{left:t.left,position:r,top:n,width:t.width,zIndex:1}},multiValue:function(e){var t=e.theme,n=t.spacing,r=t.borderRadius;return{label:"multiValue",backgroundColor:t.colors.neutral10,borderRadius:r/2,display:"flex",margin:n.baseUnit/2,minWidth:0}},multiValueLabel:function(e){var t=e.theme,n=t.borderRadius,r=t.colors,o=e.cropWithEllipsis;return{borderRadius:n/2,color:r.neutral80,fontSize:"85%",overflow:"hidden",padding:3,paddingLeft:6,textOverflow:o?"ellipsis":null,whiteSpace:"nowrap"}},multiValueRemove:function(e){var t=e.theme,n=t.spacing,r=t.borderRadius,o=t.colors;return{alignItems:"center",borderRadius:r/2,backgroundColor:e.isFocused&&o.dangerLight,display:"flex",paddingLeft:n.baseUnit,paddingRight:n.baseUnit,":hover":{backgroundColor:o.dangerLight,color:o.danger}}},noOptionsMessage:Oe,option:function(e){var t=e.isDisabled,n=e.isFocused,r=e.isSelected,o=e.theme,i=o.spacing,a=o.colors;return{label:"option",backgroundColor:r?a.primary:n?a.primary25:"transparent",color:t?a.neutral20:r?a.neutral0:"inherit",cursor:"default",display:"block",fontSize:"inherit",padding:2*i.baseUnit+"px "+3*i.baseUnit+"px",width:"100%",userSelect:"none",WebkitTapHighlightColor:"rgba(0, 0, 0, 0)",":active":{backgroundColor:!t&&(r?a.primary:a.primary50)}}},placeholder:function(e){var t=e.theme,n=t.spacing;return{label:"placeholder",color:t.colors.neutral50,marginLeft:n.baseUnit/2,marginRight:n.baseUnit/2,position:"absolute",top:"50%",transform:"translateY(-50%)"}},singleValue:function(e){var t=e.isDisabled,n=e.theme,r=n.spacing,o=n.colors;return{label:"singleValue",color:t?o.neutral40:o.neutral80,marginLeft:r.baseUnit/2,marginRight:r.baseUnit/2,maxWidth:"calc(100% - "+2*r.baseUnit+"px)",overflow:"hidden",position:"absolute",textOverflow:"ellipsis",whiteSpace:"nowrap",top:"50%",transform:"translateY(-50%)"}},valueContainer:function(e){var t=e.theme.spacing;return{alignItems:"center",display:"flex",flex:1,flexWrap:"wrap",padding:t.baseUnit/2+"px "+2*t.baseUnit+"px",WebkitOverflowScrolling:"touch",position:"relative",overflow:"hidden"}}};var It={borderRadius:4,colors:{primary:"#2684FF",primary75:"#4C9AFF",primary50:"#B2D4FF",primary25:"#DEEBFF",danger:"#DE350B",dangerLight:"#FFBDAD",neutral0:"hsl(0, 0%, 100%)",neutral5:"hsl(0, 0%, 95%)",neutral10:"hsl(0, 0%, 90%)",neutral20:"hsl(0, 0%, 80%)",neutral30:"hsl(0, 0%, 70%)",neutral40:"hsl(0, 0%, 60%)",neutral50:"hsl(0, 0%, 50%)",neutral60:"hsl(0, 0%, 40%)",neutral70:"hsl(0, 0%, 30%)",neutral80:"hsl(0, 0%, 20%)",neutral90:"hsl(0, 0%, 10%)"},spacing:{baseUnit:4,controlHeight:38,menuGutter:8}};function Rt(){return(Rt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Lt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var jt,zt={backspaceRemovesValue:!0,blurInputOnSelect:ve(),captureMenuScroll:!ve(),closeMenuOnSelect:!0,closeMenuOnScroll:!1,components:{},controlShouldRenderValue:!0,escapeClearsValue:!1,filterOption:function(e,t){var n=st({ignoreCase:!0,ignoreAccents:!0,stringify:ft,trim:!0,matchFrom:"any"},jt),r=n.ignoreCase,o=n.ignoreAccents,i=n.stringify,a=n.trim,u=n.matchFrom,l=a?ct(t):t,s=a?ct(i(e)):i(e);return r&&(l=l.toLowerCase(),s=s.toLowerCase()),o&&(l=lt(l),s=lt(s)),"start"===u?s.substr(0,l.length)===l:s.indexOf(l)>-1},formatGroupLabel:function(e){return e.label},getOptionLabel:function(e){return e.label},getOptionValue:function(e){return e.value},isDisabled:!1,isLoading:!1,isMulti:!1,isRtl:!1,isSearchable:!0,isOptionDisabled:Mt,loadingMessage:function(){return"Loading..."},maxMenuHeight:300,minMenuHeight:140,menuIsOpen:!1,menuPlacement:"bottom",menuPosition:"absolute",menuShouldBlockScroll:!1,menuShouldScrollIntoView:!function(){try{return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}catch(e){return!1}}(),noOptionsMessage:function(){return"No options"},openMenuOnFocus:!1,openMenuOnClick:!0,options:[],pageSize:5,placeholder:"Select...",screenReaderStatus:function(e){var t=e.count;return t+" result"+(1!==t?"s":"")+" available"},styles:{},tabIndex:"0",tabSelectsValue:!0},Vt=1,Bt=function(e){var t,n;function r(t){var n;(n=e.call(this,t)||this).state={ariaLiveSelection:"",ariaLiveContext:"",focusedOption:null,focusedValue:null,inputIsHidden:!1,isFocused:!1,menuOptions:{render:[],focusable:[]},selectValue:[]},n.blockOptionHover=!1,n.isComposing=!1,n.clearFocusValueOnUpdate=!1,n.commonProps=void 0,n.components=void 0,n.hasGroups=!1,n.initialTouchX=0,n.initialTouchY=0,n.inputIsHiddenAfterUpdate=void 0,n.instancePrefix="",n.openAfterFocus=!1,n.scrollToFocusedOptionOnUpdate=!1,n.userIsDragging=void 0,n.controlRef=null,n.getControlRef=function(e){n.controlRef=e},n.focusedOptionRef=null,n.getFocusedOptionRef=function(e){n.focusedOptionRef=e},n.menuListRef=null,n.getMenuListRef=function(e){n.menuListRef=e},n.inputRef=null,n.getInputRef=function(e){n.inputRef=e},n.cacheComponents=function(e){n.components=it({},at,{components:e}.components)},n.focus=n.focusInput,n.blur=n.blurInput,n.onChange=function(e,t){var r=n.props;(0,r.onChange)(e,Rt({},t,{name:r.name}))},n.setValue=function(e,t,r){void 0===t&&(t="set-value");var o=n.props,i=o.closeMenuOnSelect,a=o.isMulti;n.onInputChange("",{action:"set-value"}),i&&(n.inputIsHiddenAfterUpdate=!a,n.onMenuClose()),n.clearFocusValueOnUpdate=!0,n.onChange(e,{action:t,option:r})},n.selectOption=function(e){var t=n.props,r=t.blurInputOnSelect,o=t.isMulti,i=n.state.selectValue;if(o)if(n.isOptionSelected(e,i)){var a=n.getOptionValue(e);n.setValue(i.filter((function(e){return n.getOptionValue(e)!==a})),"deselect-option",e),n.announceAriaLiveSelection({event:"deselect-option",context:{value:n.getOptionLabel(e)}})}else n.isOptionDisabled(e,i)?n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e),isDisabled:!0}}):(n.setValue([].concat(i,[e]),"select-option",e),n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e)}}));else n.isOptionDisabled(e,i)?n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e),isDisabled:!0}}):(n.setValue(e,"select-option"),n.announceAriaLiveSelection({event:"select-option",context:{value:n.getOptionLabel(e)}}));r&&n.blurInput()},n.removeValue=function(e){var t=n.state.selectValue,r=n.getOptionValue(e),o=t.filter((function(e){return n.getOptionValue(e)!==r}));n.onChange(o.length?o:null,{action:"remove-value",removedValue:e}),n.announceAriaLiveSelection({event:"remove-value",context:{value:e?n.getOptionLabel(e):""}}),n.focusInput()},n.clearValue=function(){var e=n.props.isMulti;n.onChange(e?[]:null,{action:"clear"})},n.popValue=function(){var e=n.state.selectValue,t=e[e.length-1],r=e.slice(0,e.length-1);n.announceAriaLiveSelection({event:"pop-value",context:{value:t?n.getOptionLabel(t):""}}),n.onChange(r.length?r:null,{action:"pop-value",removedValue:t})},n.getOptionLabel=function(e){return n.props.getOptionLabel(e)},n.getOptionValue=function(e){return n.props.getOptionValue(e)},n.getStyles=function(e,t){var r=Nt[e](t);r.boxSizing="border-box";var o=n.props.styles[e];return o?o(r,t):r},n.getElementId=function(e){return n.instancePrefix+"-"+e},n.getActiveDescendentId=function(){var e=n.props.menuIsOpen,t=n.state,r=t.menuOptions,o=t.focusedOption;if(o&&e){var i=r.focusable.indexOf(o),a=r.render[i];return a&&a.key}},n.announceAriaLiveSelection=function(e){var t=e.event,r=e.context;n.setState({ariaLiveSelection:Dt(t,r)})},n.announceAriaLiveContext=function(e){var t=e.event,r=e.context;n.setState({ariaLiveContext:Ft(t,Rt({},r,{label:n.props["aria-label"]}))})},n.onMenuMouseDown=function(e){0===e.button&&(e.stopPropagation(),e.preventDefault(),n.focusInput())},n.onMenuMouseMove=function(e){n.blockOptionHover=!1},n.onControlMouseDown=function(e){var t=n.props.openMenuOnClick;n.state.isFocused?n.props.menuIsOpen?"INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName&&n.onMenuClose():t&&n.openMenu("first"):(t&&(n.openAfterFocus=!0),n.focusInput()),"INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName&&e.preventDefault()},n.onDropdownIndicatorMouseDown=function(e){if(!(e&&"mousedown"===e.type&&0!==e.button||n.props.isDisabled)){var t=n.props,r=t.isMulti,o=t.menuIsOpen;n.focusInput(),o?(n.inputIsHiddenAfterUpdate=!r,n.onMenuClose()):n.openMenu("first"),e.preventDefault(),e.stopPropagation()}},n.onClearIndicatorMouseDown=function(e){e&&"mousedown"===e.type&&0!==e.button||(n.clearValue(),e.stopPropagation(),n.openAfterFocus=!1,"touchend"===e.type?n.focusInput():setTimeout((function(){return n.focusInput()})))},n.onScroll=function(e){"boolean"==typeof n.props.closeMenuOnScroll?e.target instanceof HTMLElement&&pe(e.target)&&n.props.onMenuClose():"function"==typeof n.props.closeMenuOnScroll&&n.props.closeMenuOnScroll(e)&&n.props.onMenuClose()},n.onCompositionStart=function(){n.isComposing=!0},n.onCompositionEnd=function(){n.isComposing=!1},n.onTouchStart=function(e){var t=e.touches.item(0);t&&(n.initialTouchX=t.clientX,n.initialTouchY=t.clientY,n.userIsDragging=!1)},n.onTouchMove=function(e){var t=e.touches.item(0);if(t){var r=Math.abs(t.clientX-n.initialTouchX),o=Math.abs(t.clientY-n.initialTouchY);n.userIsDragging=r>5||o>5}},n.onTouchEnd=function(e){n.userIsDragging||(n.controlRef&&!n.controlRef.contains(e.target)&&n.menuListRef&&!n.menuListRef.contains(e.target)&&n.blurInput(),n.initialTouchX=0,n.initialTouchY=0)},n.onControlTouchEnd=function(e){n.userIsDragging||n.onControlMouseDown(e)},n.onClearIndicatorTouchEnd=function(e){n.userIsDragging||n.onClearIndicatorMouseDown(e)},n.onDropdownIndicatorTouchEnd=function(e){n.userIsDragging||n.onDropdownIndicatorMouseDown(e)},n.handleInputChange=function(e){var t=e.currentTarget.value;n.inputIsHiddenAfterUpdate=!1,n.onInputChange(t,{action:"input-change"}),n.onMenuOpen()},n.onInputFocus=function(e){var t=n.props,r=t.isSearchable,o=t.isMulti;n.props.onFocus&&n.props.onFocus(e),n.inputIsHiddenAfterUpdate=!1,n.announceAriaLiveContext({event:"input",context:{isSearchable:r,isMulti:o}}),n.setState({isFocused:!0}),(n.openAfterFocus||n.props.openMenuOnFocus)&&n.openMenu("first"),n.openAfterFocus=!1},n.onInputBlur=function(e){n.menuListRef&&n.menuListRef.contains(document.activeElement)?n.inputRef.focus():(n.props.onBlur&&n.props.onBlur(e),n.onInputChange("",{action:"input-blur"}),n.onMenuClose(),n.setState({focusedValue:null,isFocused:!1}))},n.onOptionHover=function(e){n.blockOptionHover||n.state.focusedOption===e||n.setState({focusedOption:e})},n.shouldHideSelectedOptions=function(){var e=n.props,t=e.hideSelectedOptions,r=e.isMulti;return void 0===t?r:t},n.onKeyDown=function(e){var t=n.props,r=t.isMulti,o=t.backspaceRemovesValue,i=t.escapeClearsValue,a=t.inputValue,u=t.isClearable,l=t.isDisabled,s=t.menuIsOpen,c=t.onKeyDown,f=t.tabSelectsValue,p=t.openMenuOnFocus,d=n.state,h=d.focusedOption,m=d.focusedValue,v=d.selectValue;if(!(l||"function"==typeof c&&(c(e),e.defaultPrevented))){switch(n.blockOptionHover=!0,e.key){case"ArrowLeft":if(!r||a)return;n.focusValue("previous");break;case"ArrowRight":if(!r||a)return;n.focusValue("next");break;case"Delete":case"Backspace":if(a)return;if(m)n.removeValue(m);else{if(!o)return;r?n.popValue():u&&n.clearValue()}break;case"Tab":if(n.isComposing)return;if(e.shiftKey||!s||!f||!h||p&&n.isOptionSelected(h,v))return;n.selectOption(h);break;case"Enter":if(229===e.keyCode)break;if(s){if(!h)return;if(n.isComposing)return;n.selectOption(h);break}return;case"Escape":s?(n.inputIsHiddenAfterUpdate=!1,n.onInputChange("",{action:"menu-close"}),n.onMenuClose()):u&&i&&n.clearValue();break;case" ":if(a)return;if(!s){n.openMenu("first");break}if(!h)return;n.selectOption(h);break;case"ArrowUp":s?n.focusOption("up"):n.openMenu("last");break;case"ArrowDown":s?n.focusOption("down"):n.openMenu("first");break;case"PageUp":if(!s)return;n.focusOption("pageup");break;case"PageDown":if(!s)return;n.focusOption("pagedown");break;case"Home":if(!s)return;n.focusOption("first");break;case"End":if(!s)return;n.focusOption("last");break;default:return}e.preventDefault()}},n.buildMenuOptions=function(e,t){var r=e.inputValue,o=void 0===r?"":r,i=e.options,a=function(e,r){var i=n.isOptionDisabled(e,t),a=n.isOptionSelected(e,t),u=n.getOptionLabel(e),l=n.getOptionValue(e);if(!(n.shouldHideSelectedOptions()&&a||!n.filterOption({label:u,value:l,data:e},o))){var s=i?void 0:function(){return n.onOptionHover(e)},c=i?void 0:function(){return n.selectOption(e)},f=n.getElementId("option")+"-"+r;return{innerProps:{id:f,onClick:c,onMouseMove:s,onMouseOver:s,tabIndex:-1},data:e,isDisabled:i,isSelected:a,key:f,label:u,type:"option",value:l}}};return i.reduce((function(e,t,r){if(t.options){n.hasGroups||(n.hasGroups=!0);var o=t.options.map((function(t,n){var o=a(t,r+"-"+n);return o&&e.focusable.push(t),o})).filter(Boolean);if(o.length){var i=n.getElementId("group")+"-"+r;e.render.push({type:"group",key:i,data:t,options:o})}}else{var u=a(t,""+r);u&&(e.render.push(u),e.focusable.push(t))}return e}),{render:[],focusable:[]})};var r=t.value;n.cacheComponents=f(n.cacheComponents,Me).bind(Lt(Lt(n))),n.cacheComponents(t.components),n.instancePrefix="react-select-"+(n.props.instanceId||++Vt);var o=fe(r);n.buildMenuOptions=f(n.buildMenuOptions,(function(e,t){var n=e,r=n[0],o=n[1],i=t,a=i[0];return Me(o,i[1])&&Me(r.inputValue,a.inputValue)&&Me(r.options,a.options)})).bind(Lt(Lt(n)));var i=t.menuIsOpen?n.buildMenuOptions(t,o):{render:[],focusable:[]};return n.state.menuOptions=i,n.state.selectValue=o,n}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var i=r.prototype;return i.componentDidMount=function(){this.startListeningComposition(),this.startListeningToTouch(),this.props.closeMenuOnScroll&&document&&document.addEventListener&&document.addEventListener("scroll",this.onScroll,!0),this.props.autoFocus&&this.focusInput()},i.UNSAFE_componentWillReceiveProps=function(e){var t=this.props,n=t.options,r=t.value,o=t.menuIsOpen,i=t.inputValue;if(this.cacheComponents(e.components),e.value!==r||e.options!==n||e.menuIsOpen!==o||e.inputValue!==i){var a=fe(e.value),u=e.menuIsOpen?this.buildMenuOptions(e,a):{render:[],focusable:[]},l=this.getNextFocusedValue(a),s=this.getNextFocusedOption(u.focusable);this.setState({menuOptions:u,selectValue:a,focusedOption:s,focusedValue:l})}null!=this.inputIsHiddenAfterUpdate&&(this.setState({inputIsHidden:this.inputIsHiddenAfterUpdate}),delete this.inputIsHiddenAfterUpdate)},i.componentDidUpdate=function(e){var t,n,r,o,i,a=this.props,u=a.isDisabled,l=a.menuIsOpen,s=this.state.isFocused;(s&&!u&&e.isDisabled||s&&l&&!e.menuIsOpen)&&this.focusInput(),this.menuListRef&&this.focusedOptionRef&&this.scrollToFocusedOptionOnUpdate&&(t=this.menuListRef,n=this.focusedOptionRef,r=t.getBoundingClientRect(),o=n.getBoundingClientRect(),i=n.offsetHeight/3,o.bottom+i>r.bottom?he(t,Math.min(n.offsetTop+n.clientHeight-t.offsetHeight+i,t.scrollHeight)):o.top-i<r.top&&he(t,Math.max(n.offsetTop-i,0)),this.scrollToFocusedOptionOnUpdate=!1)},i.componentWillUnmount=function(){this.stopListeningComposition(),this.stopListeningToTouch(),document.removeEventListener("scroll",this.onScroll,!0)},i.onMenuOpen=function(){this.props.onMenuOpen()},i.onMenuClose=function(){var e=this.props,t=e.isSearchable,n=e.isMulti;this.announceAriaLiveContext({event:"input",context:{isSearchable:t,isMulti:n}}),this.onInputChange("",{action:"menu-close"}),this.props.onMenuClose()},i.onInputChange=function(e,t){this.props.onInputChange(e,t)},i.focusInput=function(){this.inputRef&&this.inputRef.focus()},i.blurInput=function(){this.inputRef&&this.inputRef.blur()},i.openMenu=function(e){var t=this,n=this.state,r=n.selectValue,o=n.isFocused,i=this.buildMenuOptions(this.props,r),a=this.props.isMulti,u="first"===e?0:i.focusable.length-1;if(!a){var l=i.focusable.indexOf(r[0]);l>-1&&(u=l)}this.scrollToFocusedOptionOnUpdate=!(o&&this.menuListRef),this.inputIsHiddenAfterUpdate=!1,this.setState({menuOptions:i,focusedValue:null,focusedOption:i.focusable[u]},(function(){t.onMenuOpen(),t.announceAriaLiveContext({event:"menu"})}))},i.focusValue=function(e){var t=this.props,n=t.isMulti,r=t.isSearchable,o=this.state,i=o.selectValue,a=o.focusedValue;if(n){this.setState({focusedOption:null});var u=i.indexOf(a);a||(u=-1,this.announceAriaLiveContext({event:"value"}));var l=i.length-1,s=-1;if(i.length){switch(e){case"previous":s=0===u?0:-1===u?l:u-1;break;case"next":u>-1&&u<l&&(s=u+1)}-1===s&&this.announceAriaLiveContext({event:"input",context:{isSearchable:r,isMulti:n}}),this.setState({inputIsHidden:-1!==s,focusedValue:i[s]})}}},i.focusOption=function(e){void 0===e&&(e="first");var t=this.props.pageSize,n=this.state,r=n.focusedOption,o=n.menuOptions.focusable;if(o.length){var i=0,a=o.indexOf(r);r||(a=-1,this.announceAriaLiveContext({event:"menu"})),"up"===e?i=a>0?a-1:o.length-1:"down"===e?i=(a+1)%o.length:"pageup"===e?(i=a-t)<0&&(i=0):"pagedown"===e?(i=a+t)>o.length-1&&(i=o.length-1):"last"===e&&(i=o.length-1),this.scrollToFocusedOptionOnUpdate=!0,this.setState({focusedOption:o[i],focusedValue:null}),this.announceAriaLiveContext({event:"menu",context:{isDisabled:Mt(o[i])}})}},i.getTheme=function(){return this.props.theme?"function"==typeof this.props.theme?this.props.theme(It):Rt({},It,this.props.theme):It},i.getCommonProps=function(){var e=this.clearValue,t=this.getStyles,n=this.setValue,r=this.selectOption,o=this.props,i=o.classNamePrefix,a=o.isMulti,u=o.isRtl,l=o.options,s=this.state.selectValue,c=this.hasValue();return{cx:ce.bind(null,i),clearValue:e,getStyles:t,getValue:function(){return s},hasValue:c,isMulti:a,isRtl:u,options:l,selectOption:r,setValue:n,selectProps:o,theme:this.getTheme()}},i.getNextFocusedValue=function(e){if(this.clearFocusValueOnUpdate)return this.clearFocusValueOnUpdate=!1,null;var t=this.state,n=t.focusedValue,r=t.selectValue.indexOf(n);if(r>-1){if(e.indexOf(n)>-1)return n;if(r<e.length)return e[r]}return null},i.getNextFocusedOption=function(e){var t=this.state.focusedOption;return t&&e.indexOf(t)>-1?t:e[0]},i.hasValue=function(){return this.state.selectValue.length>0},i.hasOptions=function(){return!!this.state.menuOptions.render.length},i.countOptions=function(){return this.state.menuOptions.focusable.length},i.isClearable=function(){var e=this.props,t=e.isClearable,n=e.isMulti;return void 0===t?n:t},i.isOptionDisabled=function(e,t){return"function"==typeof this.props.isOptionDisabled&&this.props.isOptionDisabled(e,t)},i.isOptionSelected=function(e,t){var n=this;if(t.indexOf(e)>-1)return!0;if("function"==typeof this.props.isOptionSelected)return this.props.isOptionSelected(e,t);var r=this.getOptionValue(e);return t.some((function(e){return n.getOptionValue(e)===r}))},i.filterOption=function(e,t){return!this.props.filterOption||this.props.filterOption(e,t)},i.formatOptionLabel=function(e,t){if("function"==typeof this.props.formatOptionLabel){var n=this.props.inputValue,r=this.state.selectValue;return this.props.formatOptionLabel(e,{context:t,inputValue:n,selectValue:r})}return this.getOptionLabel(e)},i.formatGroupLabel=function(e){return this.props.formatGroupLabel(e)},i.startListeningComposition=function(){document&&document.addEventListener&&(document.addEventListener("compositionstart",this.onCompositionStart,!1),document.addEventListener("compositionend",this.onCompositionEnd,!1))},i.stopListeningComposition=function(){document&&document.removeEventListener&&(document.removeEventListener("compositionstart",this.onCompositionStart),document.removeEventListener("compositionend",this.onCompositionEnd))},i.startListeningToTouch=function(){document&&document.addEventListener&&(document.addEventListener("touchstart",this.onTouchStart,!1),document.addEventListener("touchmove",this.onTouchMove,!1),document.addEventListener("touchend",this.onTouchEnd,!1))},i.stopListeningToTouch=function(){document&&document.removeEventListener&&(document.removeEventListener("touchstart",this.onTouchStart),document.removeEventListener("touchmove",this.onTouchMove),document.removeEventListener("touchend",this.onTouchEnd))},i.constructAriaLiveMessage=function(){var e=this.state,t=e.ariaLiveContext,n=e.selectValue,r=e.focusedValue,o=e.focusedOption,i=this.props,a=i.options,u=i.menuIsOpen,l=i.inputValue,s=i.screenReaderStatus;return(r?function(e){var t=e.focusedValue,n=e.getOptionLabel,r=e.selectValue;return"value "+n(t)+" focused, "+(r.indexOf(t)+1)+" of "+r.length+"."}({focusedValue:r,getOptionLabel:this.getOptionLabel,selectValue:n}):"")+" "+(o&&u?function(e){var t=e.focusedOption,n=e.getOptionLabel,r=e.options;return"option "+n(t)+" focused"+(t.isDisabled?" disabled":"")+", "+(r.indexOf(t)+1)+" of "+r.length+"."}({focusedOption:o,getOptionLabel:this.getOptionLabel,options:a}):"")+" "+function(e){var t=e.inputValue;return e.screenReaderMessage+(t?" for search term "+t:"")+"."}({inputValue:l,screenReaderMessage:s({count:this.countOptions()})})+" "+t},i.renderInput=function(){var e=this.props,t=e.isDisabled,n=e.isSearchable,r=e.inputId,i=e.inputValue,a=e.tabIndex,u=this.components.Input,l=this.state.inputIsHidden,s=r||this.getElementId("input"),c={"aria-autocomplete":"list","aria-label":this.props["aria-label"],"aria-labelledby":this.props["aria-labelledby"]};if(!n)return o.a.createElement(vt,Rt({id:s,innerRef:this.getInputRef,onBlur:this.onInputBlur,onChange:le,onFocus:this.onInputFocus,readOnly:!0,disabled:t,tabIndex:a,value:""},c));var f=this.commonProps,p=f.cx,d=f.theme,h=f.selectProps;return o.a.createElement(u,Rt({autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",cx:p,getStyles:this.getStyles,id:s,innerRef:this.getInputRef,isDisabled:t,isHidden:l,onBlur:this.onInputBlur,onChange:this.handleInputChange,onFocus:this.onInputFocus,selectProps:h,spellCheck:"false",tabIndex:a,theme:d,type:"text",value:i},c))},i.renderPlaceholderOrValue=function(){var e=this,t=this.components,n=t.MultiValue,r=t.MultiValueContainer,i=t.MultiValueLabel,a=t.MultiValueRemove,u=t.SingleValue,l=t.Placeholder,s=this.commonProps,c=this.props,f=c.controlShouldRenderValue,p=c.isDisabled,d=c.isMulti,h=c.inputValue,m=c.placeholder,v=this.state,g=v.selectValue,b=v.focusedValue,y=v.isFocused;if(!this.hasValue()||!f)return h?null:o.a.createElement(l,Rt({},s,{key:"placeholder",isDisabled:p,isFocused:y}),m);if(d)return g.map((function(t,u){var l=t===b;return o.a.createElement(n,Rt({},s,{components:{Container:r,Label:i,Remove:a},isFocused:l,isDisabled:p,key:e.getOptionValue(t),index:u,removeProps:{onClick:function(){return e.removeValue(t)},onTouchEnd:function(){return e.removeValue(t)},onMouseDown:function(e){e.preventDefault(),e.stopPropagation()}},data:t}),e.formatOptionLabel(t,"value"))}));if(h)return null;var E=g[0];return o.a.createElement(u,Rt({},s,{data:E,isDisabled:p}),this.formatOptionLabel(E,"value"))},i.renderClearIndicator=function(){var e=this.components.ClearIndicator,t=this.commonProps,n=this.props,r=n.isDisabled,i=n.isLoading,a=this.state.isFocused;if(!this.isClearable()||!e||r||!this.hasValue()||i)return null;var u={onMouseDown:this.onClearIndicatorMouseDown,onTouchEnd:this.onClearIndicatorTouchEnd,"aria-hidden":"true"};return o.a.createElement(e,Rt({},t,{innerProps:u,isFocused:a}))},i.renderLoadingIndicator=function(){var e=this.components.LoadingIndicator,t=this.commonProps,n=this.props,r=n.isDisabled,i=n.isLoading,a=this.state.isFocused;if(!e||!i)return null;return o.a.createElement(e,Rt({},t,{innerProps:{"aria-hidden":"true"},isDisabled:r,isFocused:a}))},i.renderIndicatorSeparator=function(){var e=this.components,t=e.DropdownIndicator,n=e.IndicatorSeparator;if(!t||!n)return null;var r=this.commonProps,i=this.props.isDisabled,a=this.state.isFocused;return o.a.createElement(n,Rt({},r,{isDisabled:i,isFocused:a}))},i.renderDropdownIndicator=function(){var e=this.components.DropdownIndicator;if(!e)return null;var t=this.commonProps,n=this.props.isDisabled,r=this.state.isFocused,i={onMouseDown:this.onDropdownIndicatorMouseDown,onTouchEnd:this.onDropdownIndicatorTouchEnd,"aria-hidden":"true"};return o.a.createElement(e,Rt({},t,{innerProps:i,isDisabled:n,isFocused:r}))},i.renderMenu=function(){var e=this,t=this.components,n=t.Group,r=t.GroupHeading,i=t.Menu,a=t.MenuList,u=t.MenuPortal,l=t.LoadingMessage,s=t.NoOptionsMessage,c=t.Option,f=this.commonProps,p=this.state,d=p.focusedOption,h=p.menuOptions,m=this.props,v=m.captureMenuScroll,g=m.inputValue,b=m.isLoading,y=m.loadingMessage,E=m.minMenuHeight,w=m.maxMenuHeight,C=m.menuIsOpen,x=m.menuPlacement,k=m.menuPosition,O=m.menuPortalTarget,S=m.menuShouldBlockScroll,T=m.menuShouldScrollIntoView,P=m.noOptionsMessage,A=m.onMenuScrollToTop,_=m.onMenuScrollToBottom;if(!C)return null;var F,D=function(t){var n=d===t.data;return t.innerRef=n?e.getFocusedOptionRef:void 0,o.a.createElement(c,Rt({},f,t,{isFocused:n}),e.formatOptionLabel(t.data,"menu"))};if(this.hasOptions())F=h.render.map((function(t){if("group"===t.type){t.type;var i=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["type"]),a=t.key+"-heading";return o.a.createElement(n,Rt({},f,i,{Heading:r,headingProps:{id:a},label:e.formatGroupLabel(t.data)}),t.options.map((function(e){return D(e)})))}if("option"===t.type)return D(t)}));else if(b){var M=y({inputValue:g});if(null===M)return null;F=o.a.createElement(l,f,M)}else{var N=P({inputValue:g});if(null===N)return null;F=o.a.createElement(s,f,N)}var I={minMenuHeight:E,maxMenuHeight:w,menuPlacement:x,menuPosition:k,menuShouldScrollIntoView:T},R=o.a.createElement(xe,Rt({},f,I),(function(t){var n=t.ref,r=t.placerProps,u=r.placement,l=r.maxHeight;return o.a.createElement(i,Rt({},f,I,{innerRef:n,innerProps:{onMouseDown:e.onMenuMouseDown,onMouseMove:e.onMenuMouseMove},isLoading:b,placement:u}),o.a.createElement(_t,{isEnabled:v,onTopArrive:A,onBottomArrive:_},o.a.createElement(Pt,{isEnabled:S},o.a.createElement(a,Rt({},f,{innerRef:e.getMenuListRef,isLoading:b,maxHeight:l}),F))))}));return O||"fixed"===k?o.a.createElement(u,Rt({},f,{appendTo:O,controlElement:this.controlRef,menuPlacement:x,menuPosition:k}),R):R},i.renderFormField=function(){var e=this,t=this.props,n=t.delimiter,r=t.isDisabled,i=t.isMulti,a=t.name,u=this.state.selectValue;if(a&&!r){if(i){if(n){var l=u.map((function(t){return e.getOptionValue(t)})).join(n);return o.a.createElement("input",{name:a,type:"hidden",value:l})}var s=u.length>0?u.map((function(t,n){return o.a.createElement("input",{key:"i-"+n,name:a,type:"hidden",value:e.getOptionValue(t)})})):o.a.createElement("input",{name:a,type:"hidden"});return o.a.createElement("div",null,s)}var c=u[0]?this.getOptionValue(u[0]):"";return o.a.createElement("input",{name:a,type:"hidden",value:c})}},i.renderLiveRegion=function(){return this.state.isFocused?o.a.createElement(ht,{"aria-live":"polite"},o.a.createElement("p",{id:"aria-selection-event"}," ",this.state.ariaLiveSelection),o.a.createElement("p",{id:"aria-context"}," ",this.constructAriaLiveMessage())):null},i.render=function(){var e=this.components,t=e.Control,n=e.IndicatorsContainer,r=e.SelectContainer,i=e.ValueContainer,a=this.props,u=a.className,l=a.id,s=a.isDisabled,c=a.menuIsOpen,f=this.state.isFocused,p=this.commonProps=this.getCommonProps();return o.a.createElement(r,Rt({},p,{className:u,innerProps:{id:l,onKeyDown:this.onKeyDown},isDisabled:s,isFocused:f}),this.renderLiveRegion(),o.a.createElement(t,Rt({},p,{innerRef:this.getControlRef,innerProps:{onMouseDown:this.onControlMouseDown,onTouchEnd:this.onControlTouchEnd},isDisabled:s,isFocused:f,menuIsOpen:c}),o.a.createElement(i,Rt({},p,{isDisabled:s}),this.renderPlaceholderOrValue(),this.renderInput()),o.a.createElement(n,Rt({},p,{isDisabled:s}),this.renderClearIndicator(),this.renderLoadingIndicator(),this.renderIndicatorSeparator(),this.renderDropdownIndicator())),this.renderMenu(),this.renderFormField())},r}(r.Component);function Ut(){return(Ut=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Bt.defaultProps=zt;var Wt={defaultInputValue:"",defaultMenuIsOpen:!1,defaultValue:null};r.Component;var Ht,Qt,qt,$t=(Ht=Bt,qt=Qt=function(e){var t,n;function r(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).select=void 0,t.state={inputValue:void 0!==t.props.inputValue?t.props.inputValue:t.props.defaultInputValue,menuIsOpen:void 0!==t.props.menuIsOpen?t.props.menuIsOpen:t.props.defaultMenuIsOpen,value:void 0!==t.props.value?t.props.value:t.props.defaultValue},t.onChange=function(e,n){t.callProp("onChange",e,n),t.setState({value:e})},t.onInputChange=function(e,n){var r=t.callProp("onInputChange",e,n);t.setState({inputValue:void 0!==r?r:e})},t.onMenuOpen=function(){t.callProp("onMenuOpen"),t.setState({menuIsOpen:!0})},t.onMenuClose=function(){t.callProp("onMenuClose"),t.setState({menuIsOpen:!1})},t}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var i=r.prototype;return i.focus=function(){this.select.focus()},i.blur=function(){this.select.blur()},i.getProp=function(e){return void 0!==this.props[e]?this.props[e]:this.state[e]},i.callProp=function(e){if("function"==typeof this.props[e]){for(var t,n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return(t=this.props)[e].apply(t,r)}},i.render=function(){var e=this,t=this.props,n=(t.defaultInputValue,t.defaultMenuIsOpen,t.defaultValue,function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["defaultInputValue","defaultMenuIsOpen","defaultValue"]));return o.a.createElement(Ht,Ut({},n,{ref:function(t){e.select=t},inputValue:this.getProp("inputValue"),menuIsOpen:this.getProp("menuIsOpen"),onChange:this.onChange,onInputChange:this.onInputChange,onMenuClose:this.onMenuClose,onMenuOpen:this.onMenuOpen,value:this.getProp("value")}))},r}(r.Component),Qt.defaultProps=Wt,qt);n(28);function Kt(e){return(Kt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Gt(e){return function(e){if(Array.isArray(e))return Yt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return Yt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Yt(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Yt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Xt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Zt(e,t){return(Zt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Jt(e,t){return!t||"object"!==Kt(t)&&"function"!=typeof t?en(e):t}function en(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function tn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function nn(e){return(nn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var rn={content:{top:"50%",left:"50%",height:"500px",width:"500px",transform:"translate(-50%, -50%)",zIndex:10}},on=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Zt(e,t)}(l,e);var t,n,r,i,a=(t=l,function(){var e,n=nn(t);if(tn()){var r=nn(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return Jt(this,e)});function l(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,l),(t=a.call(this,e)).state={qObj:{},mcList:[],typeList:[],selectedTagList:[],qText:"",selectedQType:0,selectedQTypeObj:{},tfChoice:"",mcChoice:0,answer:""},t.initializeData=t.initializeData.bind(en(t)),t.renderTableBody=t.renderTableBody.bind(en(t)),t.renderTags=t.renderTags.bind(en(t)),t.handleSubmit=t.handleSubmit.bind(en(t)),t.clearData=t.clearData.bind(en(t)),t.onQTypeChange=t.onQTypeChange.bind(en(t)),t.handleOptionChange=t.handleOptionChange.bind(en(t)),t.handleTagChange=t.handleTagChange.bind(en(t)),t.handleOnBlur=t.handleOnBlur.bind(en(t)),t}return n=l,(r=[{key:"componentDidMount",value:function(){this.initializeData()}},{key:"initializeData",value:function(){var e={qText:"",qAns:""},t=[{option:1,value:"",answer:!1},{option:2,value:"",answer:!1},{option:3,value:"",answer:!1},{option:4,value:"",answer:!1}];this.setState((function(n,r){return{qObj:e,mcList:t}}))}},{key:"onQTypeChange",value:function(e){console.log("onQTypeChange: ",e);var t=e.value;this.setState((function(n,r){return{selectedQType:t,selectedQTypeObj:e}}))}},{key:"handleOptionChange",value:function(e){if(console.log("handleOptionChange: ",e),console.log("on target: ",e.target),"tfChoice"==e.target.name){var t="True"==e.target.value;(n=Object.assign(this.state.qObj)).qAns=t,this.setState((function(e,r){return{tfChoice:t,answer:t,qObj:n}}))}else if("mcChoice"==e.target.name){t=e.target.value;var n,r=e.target.id.split("-")[1],o="",i=Gt(this.state.mcList);i.forEach((function(e){e.option==r?(e.answer=!0,o=e.value):e.answer=!1})),(n=Object.assign(this.state.qObj)).qAns=o,this.setState((function(e,t){return{mcChoice:r,mcList:i,qObj:n}}))}}},{key:"handleTagChange",value:function(e){console.log("handleTagChange ",e);var t=Gt(e);this.setState((function(e,n){return{selectedTagList:t}}))}},{key:"handleOnBlur",value:function(e){if(console.log("handleOnBlur: ",e.target),console.log("handleOnBlur: ",e.target.value),"mcOption"==e.target.name){var t=e.target.id.split("-")[1],n=Gt(this.state.mcList);n.forEach((function(n){n.option==t&&(n.value=e.target.value)})),this.setState({mcList:n})}else if("qText"==e.target.name)(r=Object.assign(this.state.qObj)).qText=e.target.value,this.setState(r);else if(e.target.name="qAns"){var r;(r=Object.assign(this.state.qObj)).qAns=e.target.value,this.setState(r)}}},{key:"handleSubmit",value:function(e){var t=this;console.log("handleSubmit: ",e);var n=document.getElementsByName("__RequestVerificationToken")[0].value,r=(this.state.selectedQType,this.state.qObj,this.state.mcList,this.state.selectedTagList,JSON.stringify({selectedQType:this.state.selectedQType,qObj:this.state.qObj,mcList:this.state.mcList,selectedTagList:this.state.selectedTagList}));console.log("Sedning data: ",r),$.ajax({url:"/QuestionInput/Create",dataType:"json",method:"POST",data:{__RequestVerificationToken:n,value:r},success:function(){return alert("success saving question"),console.log("Success: "),t.clearData(),t.props.closeModal(),!0},error:function(e){return alert("error saving question"),console.log("Error: ",e),!1}})}},{key:"clearData",value:function(){console.log("Clearing Data"),this.setState((function(e,t){return{qObj:{},mcList:[],typeList:[],selectedTagList:[],selectedQType:0,selectedQTypeObj:{},tfChoice:!0,mcChoice:0,answer:""}}))}},{key:"renderTableBody",value:function(){var e=this,t=[];return this.state.mcList.forEach((function(n){t.push(o.a.createElement("tr",{id:n.option,key:n.option},o.a.createElement("td",null,n.option),o.a.createElement("td",null,o.a.createElement("input",{type:"text",id:"input-"+n.option,name:"mcOption",onBlur:e.handleOnBlur,defaultValue:""})),o.a.createElement("td",null,o.a.createElement("input",{type:"radio",name:"mcChoice",id:"radio-"+n.option,value:0,checked:n.answer,onChange:e.handleOptionChange}))))})),t}},{key:"renderTags",value:function(){return o.a.createElement($t,{name:"tagSelect",options:this.props.tagList,isMulti:!0,closeMenuOnSelect:!1,onChange:this.handleTagChange})}},{key:"render",value:function(){return console.log("Modal state: ",this.state),this.state.typeList,o.a.createElement(u.a,{style:rn,isOpen:this.props.isOpen,ariaHideApp:!1},o.a.createElement("h2",null,"Add New Question"),o.a.createElement("div",null,o.a.createElement("div",{className:"form-group"},o.a.createElement("label",{htmlFor:"qText",className:"label",style:{verticalAlign:"top"}},"Question:"),o.a.createElement("textarea",{id:"qText",name:"qText",type:"text",placeholder:"Enter question",defaultValue:this.state.qText,style:{width:"450px"},rows:4,onBlur:this.handleOnBlur})),o.a.createElement("div",{className:"form-group"},o.a.createElement("label",{htmlFor:"qType",className:"label",style:{verticalAlign:"top"}},"Question Type:"),o.a.createElement(s.a,{id:"qType",name:"qType",options:this.props.typeList,onChange:this.onQTypeChange,value:this.state.selectedQTypeObj,placeholder:"Select an option",style:{height:"40px"}})),1==this.state.selectedQType&&o.a.createElement("div",{className:"form-group"},o.a.createElement("label",{htmlFor:"qAns",className:"label",style:{verticalAlign:"top"}},"Answer:"),o.a.createElement("textarea",{id:"qAns",name:"qAns",type:"text",placeholder:"Enter answer",defaultValue:this.state.qAns,style:{width:"450px"},rows:1,onBlur:this.handleOnBlur})),2==this.state.selectedQType&&o.a.createElement("div",{className:"form-group"},o.a.createElement("label",{htmlFor:"qText",className:"label",style:{verticalAlign:"top"}},"Answer:"),o.a.createElement("div",null,o.a.createElement("input",{type:"radio",name:"tfChoice",value:"True",checked:1==this.state.tfChoice,onChange:this.handleOptionChange}),"True",o.a.createElement("input",{type:"radio",name:"tfChoice",value:"False",checked:0==this.state.tfChoice,onChange:this.handleOptionChange}),"False")),3==this.state.selectedQType&&o.a.createElement("div",{className:"form-group"},o.a.createElement("table",{className:"table"},o.a.createElement("thead",{className:"thead"},o.a.createElement("tr",null,o.a.createElement("td",null,"Option Number"),o.a.createElement("td",null,"Answer"),o.a.createElement("td",null,"Correct"))),o.a.createElement("tbody",null,this.renderTableBody()))),this.renderTags(),o.a.createElement("button",{onClick:(this.clearData,this.props.closeModal)},"close"),o.a.createElement("button",{onClick:this.handleSubmit},"Add")))}}])&&Xt(n.prototype,r),i&&Xt(n,i),l}(r.Component);function an(e){return(an="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function un(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ln(e,t){return(ln=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function sn(e,t){return!t||"object"!==an(t)&&"function"!=typeof t?cn(e):t}function cn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function fn(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function pn(e){return(pn=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var dn={QuestionContainer:function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ln(e,t)}(u,e);var t,n,r,i,a=(t=u,function(){var e,n=pn(t);if(fn()){var r=pn(this).constructor;e=Reflect.construct(n,arguments,r)}else e=n.apply(this,arguments);return sn(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=a.call(this,e)).state={questions:[],tagList:[],typeList:[],isOpen:!1,isLoading:!0},t.getQuestion=t.getQuestion.bind(cn(t)),t.getTagLists=t.getTagLists.bind(cn(t)),t.getTypeLists=t.getTypeLists.bind(cn(t)),t.toggleModal=t.toggleModal.bind(cn(t)),t.closeModal=t.closeModal.bind(cn(t)),t}return n=u,(r=[{key:"componentDidMount",value:function(){this.getQuestion(),this.getTagLists(),this.getTypeLists()}},{key:"getQuestion",value:function(){var e=this;$.ajax({url:"/QuestionInput/GetQuestions",dataType:"json",type:"GET",success:function(t){console.log("Done: ",t),e.setState({questions:t})},error:function(e){console.log("Error: ",e),alert("error")}})}},{key:"getTagLists",value:function(){var e=this;$.ajax({url:"/QuestionInput/GetTags",dataType:"json",type:"GET",success:function(t){console.log("Done: ",t),e.setState({tagList:t})},error:function(e){console.log("Error: ",e),alert("error")}})}},{key:"getTypeLists",value:function(){var e=this;$.ajax({url:"/QuestionInput/GetTypes",dataType:"json",type:"GET",success:function(t){console.log("Done: ",t),e.setState({typeList:t})},error:function(e){console.log("Error: ",e),alert("error")}})}},{key:"toggleModal",value:function(){console.log("toggleModal...."),this.setState((function(e,t){return{isOpen:!e.isOpen}}))}},{key:"closeModal",value:function(){this.setState((function(e,t){return{isOpen:!e.isOpen}}))}},{key:"renderQuestionTable",value:function(){var e=0,t=[];return e+=1,this.state.questions.forEach((function(n){var r="";n.qTag.forEach((function(e){r=r+"#"+e.tName+" "})),t.push(o.a.createElement("tr",{key:"row"+e,className:"table tr"},o.a.createElement("td",null,n.qText),o.a.createElement("td",null,n.qAns),o.a.createElement("td",null,n.qType),o.a.createElement("td",null,r))),e+=1})),o.a.createElement("table",{className:"table-responsive",style:{border:"1px solid #ddd",maxHeight:"300 px",overflow:"scroll"}},o.a.createElement("thead",null,o.a.createElement("tr",{key:"row"+e,className:"table th"},o.a.createElement("th",{className:"col-sm-6"},"Question"),o.a.createElement("th",{className:"col-sm-2"},"Answer"),o.a.createElement("th",{className:"col-sm-1"},"Question Type"),o.a.createElement("th",{className:"col-sm-3"},"Tag(s)"))),o.a.createElement("tbody",null,t))}},{key:"headerTab",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Personal Questions Library"),o.a.createElement("button",{className:"btn-success btn-sm",variant:"outline-success",onClick:this.toggleModal},"Add Question"))}},{key:"addQuestionModal",value:function(){return o.a.createElement(on,{isOpen:this.state.isOpen,closeModal:this.closeModal,tagList:this.state.tagList,typeList:this.state.typeList})}},{key:"render",value:function(){return console.log("Rendering QuestionContainer: ",this.state),o.a.createElement("div",null,this.headerTab(),this.renderQuestionTable(),this.addQuestionModal())}}])&&un(n.prototype,r),i&&un(n,i),u}(r.Component)};document.querySelectorAll(".__react-root").forEach((function(e){var t=dn[e.id];if(t){var n=Object.assign({},e.dataset);ReactDOM.render(o.a.createElement(t,n),e)}}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vZGFsL2xpYi9oZWxwZXJzL3NhZmVIVE1MRWxlbWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaW5wdXQtYXV0b3NpemUvbGliL0F1dG9zaXplSW5wdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vZGFsL2xpYi9oZWxwZXJzL3RhYmJhYmxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC9saWIvaGVscGVycy9hcmlhQXBwSGlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vZGFsL2xpYi9oZWxwZXJzL3BvcnRhbE9wZW5JbnN0YW5jZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vZGFsL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJvcGRvd24vZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c0xvb3NlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC9saWIvY29tcG9uZW50cy9Nb2RhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC9saWIvY29tcG9uZW50cy9Nb2RhbFBvcnRhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9kYWwvbGliL2hlbHBlcnMvZm9jdXNNYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tb2RhbC9saWIvaGVscGVycy9zY29wZVRhYi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9kYWwvbm9kZV9tb2R1bGVzL3dhcm5pbmcvd2FybmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXhlbnYvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1vZGFsL2xpYi9oZWxwZXJzL2NsYXNzTGlzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbW9kYWwvbGliL2hlbHBlcnMvYm9keVRyYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxpZmVjeWNsZXMtY29tcGF0L3JlYWN0LWxpZmVjeWNsZXMtY29tcGF0LmVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcm9wZG93bi9zdHlsZS5jc3M/MGUxMyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRyb3Bkb3duL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc2hlZXQvZGlzdC9zaGVldC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY2FjaGUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3N0eWxpcy9kaXN0L3N0eWxpcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY2FjaGUvZGlzdC9jYWNoZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdXRpbHMvZGlzdC91dGlscy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NvcmUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2NvcmUvbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9jb3JlL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvZGlzdC9zZXJpYWxpemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaGFzaC9kaXN0L2hhc2guYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9ub2RlX21vZHVsZXMvQGVtb3Rpb24vdW5pdGxlc3MvZGlzdC91bml0bGVzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY3NzL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zZXJpYWxpemUvZGlzdC9zZXJpYWxpemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL2Nzcy9kaXN0L2Nzcy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vY29yZS9kaXN0L2NvcmUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNlbGVjdC9kaXN0L3V0aWxzLTA2YjBkNWE0LmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zZWxlY3QvZGlzdC9pbmRleC00MzIyYzBlZC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtc2VsZWN0L2Rpc3QvU2VsZWN0LTlmZGI4Y2QwLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1zZWxlY3QvZGlzdC9zdGF0ZU1hbmFnZXItMDRmNzM0YTIuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXNlbGVjdC9kaXN0L3JlYWN0LXNlbGVjdC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQWRkUXVlc3Rpb25Nb2RhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1F1ZXN0aW9uQ29udGFpbmVyLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJjYW5Vc2VET00iLCJ1bmRlZmluZWQiLCJvYmoiLCJfZXhlbnYiLCJFRSIsImRlZmF1bHQiLCJTYWZlSFRNTEVsZW1lbnQiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsInByb3BzIiwiZGVzY3JpcHRvciIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfcmVhY3QiLCJfcmVhY3QyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wcm9wVHlwZXMyIiwic2l6ZXJTdHlsZSIsInBvc2l0aW9uIiwidG9wIiwibGVmdCIsInZpc2liaWxpdHkiLCJoZWlnaHQiLCJvdmVyZmxvdyIsIndoaXRlU3BhY2UiLCJJTlBVVF9QUk9QU19CTEFDS0xJU1QiLCJjb3B5U3R5bGVzIiwic3R5bGVzIiwibm9kZSIsInN0eWxlIiwiZm9udFNpemUiLCJmb250RmFtaWx5IiwiZm9udFdlaWdodCIsImZvbnRTdHlsZSIsImxldHRlclNwYWNpbmciLCJ0ZXh0VHJhbnNmb3JtIiwiaXNJRSIsIm5hdmlnYXRvciIsInRlc3QiLCJ1c2VyQWdlbnQiLCJnZW5lcmF0ZUlkIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiQXV0b3NpemVJbnB1dCIsIl9Db21wb25lbnQiLCJpbnN0YW5jZSIsIlR5cGVFcnJvciIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfdGhpcyIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJpbnB1dFJlZiIsImVsIiwiaW5wdXQiLCJwbGFjZUhvbGRlclNpemVyUmVmIiwicGxhY2VIb2xkZXJTaXplciIsInNpemVyUmVmIiwic2l6ZXIiLCJzdGF0ZSIsImlucHV0V2lkdGgiLCJtaW5XaWR0aCIsImlucHV0SWQiLCJpZCIsInN1YkNsYXNzIiwic3VwZXJDbGFzcyIsImNvbnN0cnVjdG9yIiwic2V0UHJvdG90eXBlT2YiLCJfaW5oZXJpdHMiLCJtb3VudGVkIiwiY29weUlucHV0U3R5bGVzIiwidXBkYXRlSW5wdXRXaWR0aCIsIm5leHRQcm9wcyIsInNldFN0YXRlIiwicHJldlByb3BzIiwicHJldlN0YXRlIiwib25BdXRvc2l6ZSIsImdldENvbXB1dGVkU3R5bGUiLCJpbnB1dFN0eWxlcyIsInNjcm9sbFdpZHRoIiwibmV3SW5wdXRXaWR0aCIsInBsYWNlaG9sZGVyIiwicGxhY2Vob2xkZXJJc01pbldpZHRoIiwibWF4IiwidHlwZSIsImV4dHJhV2lkdGgiLCJwYXJzZUludCIsImZvY3VzIiwiYmx1ciIsInNlbGVjdCIsImluamVjdFN0eWxlcyIsImNyZWF0ZUVsZW1lbnQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsInNpemVyVmFsdWUiLCJkZWZhdWx0VmFsdWUiLCJyZWR1Y2UiLCJwcmV2aW91c1ZhbHVlIiwiY3VycmVudFZhbHVlIiwid3JhcHBlclN0eWxlIiwiZGlzcGxheSIsImlucHV0U3R5bGUiLCJib3hTaXppbmciLCJ3aWR0aCIsImlucHV0UHJvcHMiLCJrZXlzIiwiaW5kZXhPZiIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImZvckVhY2giLCJmaWVsZCIsImNsZWFuSW5wdXRQcm9wcyIsImNsYXNzTmFtZSIsImlucHV0Q2xhc3NOYW1lIiwicmVuZGVyU3R5bGVzIiwicmVmIiwiQ29tcG9uZW50IiwicHJvcFR5cGVzIiwic3RyaW5nIiwiYW55Iiwib25lT2ZUeXBlIiwibnVtYmVyIiwiYm9vbCIsImZ1bmMiLCJvbkNoYW5nZSIsImRlZmF1bHRQcm9wcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJlbGVtZW50Iiwic2xpY2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZmlsdGVyIiwidGFiYmFibGUiLCJ0YWJiYWJsZU5vZGUiLCJoaWRlc0NvbnRlbnRzIiwiemVyb1NpemUiLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImlubmVySFRNTCIsImdldFByb3BlcnR5VmFsdWUiLCJzY3JvbGxIZWlnaHQiLCJmb2N1c2FibGUiLCJpc1RhYkluZGV4Tm90TmFOIiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsImRpc2FibGVkIiwiaHJlZiIsInBhcmVudEVsZW1lbnQiLCJkb2N1bWVudCIsImJvZHkiLCJwYXJlbnROb2RlIiwidmlzaWJsZSIsInRhYkluZGV4IiwiZ2V0QXR0cmlidXRlIiwiaXNUYWJJbmRleE5hTiIsImlzTmFOIiwiYXNzZXJ0Tm9kZUxpc3QiLCJzZXRFbGVtZW50IiwidXNlRWxlbWVudCIsIl9zYWZlSFRNTEVsZW1lbnQiLCJnbG9iYWxFbGVtZW50IiwidmFsaWRhdGVFbGVtZW50IiwiaGlkZSIsImFwcEVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJzaG93IiwicmVtb3ZlQXR0cmlidXRlIiwiZG9jdW1lbnROb3RSZWFkeU9yU1NSVGVzdGluZyIsInJlc2V0Rm9yVGVzdGluZyIsIl93YXJuaW5nIiwiX3dhcm5pbmcyIiwibm9kZUxpc3QiLCJzZWxlY3RvciIsIkVycm9yIiwicG9ydGFsT3Blbkluc3RhbmNlcyIsIlBvcnRhbE9wZW5JbnN0YW5jZXMiLCJyZWdpc3RlciIsIm9wZW5JbnN0YW5jZSIsIm9wZW5JbnN0YW5jZXMiLCJwdXNoIiwiZW1pdCIsImRlcmVnaXN0ZXIiLCJpbmRleCIsInNwbGljZSIsInN1YnNjcmliZSIsImNhbGxiYWNrIiwic3Vic2NyaWJlcnMiLCJldmVudFR5cGUiLCJzdWJzY3JpYmVyIiwiX01vZGFsIiwiX01vZGFsMiIsIl90eXBlb2YiLCJjYWNoZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImhhcyIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImRlc2MiLCJzZXQiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9yZWFjdERvbSIsIl9jbGFzc25hbWVzIiwiV2Vha01hcCIsIml0ZXJhdG9yIiwiX2RlZmluZVByb3BlcnR5IiwiX2RlZmluZVByb3BlcnRpZXMiLCJfZ2V0UHJvdG90eXBlT2YiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX3NldFByb3RvdHlwZU9mIiwiRHJvcGRvd24iLCJzZWxlY3RlZCIsInBhcnNlVmFsdWUiLCJvcHRpb25zIiwibGFiZWwiLCJpc09wZW4iLCJoYW5kbGVEb2N1bWVudENsaWNrIiwiZmlyZUNoYW5nZUV2ZW50IiwibmV3UHJvcHMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2ZW50Iiwib25Gb2N1cyIsImJ1dHRvbiIsInN0b3BQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0Iiwib3B0aW9uIiwibnVtIiwibWF0Y2giLCJpdGVtcyIsIml0ZW0iLCJuZXdTdGF0ZSIsIl9jbGFzc2VzIiwiaXNTZWxlY3RlZCIsImNsYXNzZXMiLCJjb25jYXQiLCJiYXNlQ2xhc3NOYW1lIiwib3B0aW9uQ2xhc3MiLCJvbk1vdXNlRG93biIsInNldFZhbHVlIiwib25DbGljayIsInJvbGUiLCJfdGhpczIiLCJfdGhpcyRwcm9wcyIsIm9wcyIsImdyb3VwVGl0bGUiLCJfb3B0aW9ucyIsInJlbmRlck9wdGlvbiIsImZpbmRET01Ob2RlIiwiY29udGFpbnMiLCJfY2xhc3NOYW1lcyIsIl9jbGFzc05hbWVzMiIsIl9jbGFzc05hbWVzMyIsIl9jbGFzc05hbWVzNCIsIl9jbGFzc05hbWVzNSIsIl90aGlzJHByb3BzMiIsImNvbnRyb2xDbGFzc05hbWUiLCJwbGFjZWhvbGRlckNsYXNzTmFtZSIsIm1lbnVDbGFzc05hbWUiLCJhcnJvd0NsYXNzTmFtZSIsImFycm93Q2xvc2VkIiwiYXJyb3dPcGVuIiwiZGlzYWJsZWRDbGFzcyIsInBsYWNlSG9sZGVyVmFsdWUiLCJkcm9wZG93bkNsYXNzIiwiY29udHJvbENsYXNzIiwicGxhY2Vob2xkZXJDbGFzcyIsImlzVmFsdWVTZWxlY3RlZCIsIm1lbnVDbGFzcyIsImFycm93Q2xhc3MiLCJtZW51IiwiYnVpbGRNZW51IiwiaGFuZGxlTW91c2VEb3duIiwib25Ub3VjaEVuZCIsIl9kZWZhdWx0IiwiZm9yIiwicSIsInUiLCJ2IiwidyIsIngiLCJ5IiwieiIsIkEiLCJCIiwiQyIsImEiLCJiIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiRCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJFIiwiRiIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkciLCJIIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImUiLCJnIiwiayIsImYiLCJjaGlsZHJlbiIsImgiLCJBcnJheSIsIiQkdHlwZW9mIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImNvdW50IiwiUyIsIlYiLCJUIiwiVSIsImlzQXJyYXkiLCJuZXh0IiwiZG9uZSIsInJlcGxhY2UiLCJlc2NhcGUiLCJXIiwiYWEiLCJYIiwiTiIsIlkiLCJaIiwiYmEiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50QmF0Y2hDb25maWciLCJzdXNwZW5zZSIsIlJlYWN0Q3VycmVudE93bmVyIiwiSXNTb21lUmVuZGVyZXJBY3RpbmciLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJjcmVhdGVGYWN0b3J5IiwiY3JlYXRlUmVmIiwiZm9yd2FyZFJlZiIsInJlbmRlciIsImlzVmFsaWRFbGVtZW50IiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZURlYnVnVmFsdWUiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsInZlcnNpb24iLCJhcHBseSIsIm9uRXJyb3IiLCJkYSIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsImN1cnJlbnRUYXJnZXQiLCJrYSIsInBhIiwicWEiLCJyYSIsInNhIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJ0YSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwidWEiLCJyZWdpc3RyYXRpb25OYW1lIiwidmEiLCJ3YSIsImRlcGVuZGVuY2llcyIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsInN0YXRlTm9kZSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwic2FuaXRpemVVUkwiLCJVYSIsIlZhIiwidG9VcHBlckNhc2UiLCJ4bGlua0hyZWYiLCJXYSIsIlhhIiwiU2EiLCJUYSIsIlJhIiwic2V0QXR0cmlidXRlTlMiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJtYiIsIm5iIiwicGIiLCJkaXNwbGF5TmFtZSIsInFiIiwidGFnIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJyZXR1cm4iLCJyYiIsInNiIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJGYiIsIkhiIiwiZGVmYXVsdFNlbGVjdGVkIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJ0ZXh0Q29udGVudCIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJvYyIsInBjIiwicWMiLCJ0b3BMZXZlbFR5cGUiLCJuYXRpdmVFdmVudCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJyYyIsImV2ZW50U3lzdGVtRmxhZ3MiLCJzYyIsImNvbnRhaW5lckluZm8iLCJ0YyIsInVjIiwidmMiLCJ3YyIsInhjIiwieWMiLCJ6YyIsIkFjIiwiQmMiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIktjIiwiYmxvY2tlZE9uIiwiY29udGFpbmVyIiwiTGMiLCJkZWxldGUiLCJwb2ludGVySWQiLCJNYyIsIk5jIiwiUGMiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJRYyIsIlJjIiwiU2MiLCJUYyIsInNoaWZ0IiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJoZCIsIk9jIiwiamQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwia2QiLCJsZCIsInRyaW0iLCJtZCIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwibmQiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwia2V5Z2VuIiwibGluayIsIm1ldGEiLCJwYXJhbSIsInRyYWNrIiwid2JyIiwib2QiLCJwZCIsImlzIiwicWQiLCJyZCIsInNkIiwidGQiLCJ1ZCIsInZkIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImxvY2F0aW9uIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIkhkIiwic2V0VGltZW91dCIsIklkIiwiY2xlYXJUaW1lb3V0IiwiSmQiLCJLZCIsInByZXZpb3VzU2libGluZyIsImRhdGEiLCJMZCIsIk1kIiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlNkIiwiVGQiLCJkaXNwYXRjaENvbmZpZyIsIlVkIiwiX3RhcmdldEluc3QiLCJWZCIsIldkIiwiWGQiLCJZZCIsIlpkIiwiJGQiLCJhZSIsImJlIiwiY2UiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJlZSIsImV2ZW50UG9vbCIsImZlIiwiZGVzdHJ1Y3RvciIsImRlIiwiZ2V0UG9vbGVkIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJnZSIsImhlIiwiaWUiLCJqZSIsImtlIiwiZG9jdW1lbnRNb2RlIiwibGUiLCJtZSIsIm5lIiwib2UiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwicGUiLCJxZSIsImtleUNvZGUiLCJyZSIsImRldGFpbCIsInNlIiwidmUiLCJsb2NhbGUiLCJ3aGljaCIsInRlIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwidWUiLCJ3ZSIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJ4ZSIsInllIiwiY2hhbmdlIiwiemUiLCJBZSIsIkJlIiwiQ2UiLCJEZSIsIkVlIiwiRmUiLCJHZSIsImRldGFjaEV2ZW50IiwiSGUiLCJJZSIsImF0dGFjaEV2ZW50IiwiSmUiLCJLZSIsIkxlIiwiTWUiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiTmUiLCJ2aWV3IiwiT2UiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGUiLCJnZXRNb2RpZmllclN0YXRlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJXZSIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJYZSIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiWWUiLCJkZWZhdWx0VmlldyIsInBhcmVudFdpbmRvdyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImtmIiwib25TZWxlY3QiLCJsZiIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJtZiIsImNsaXBib2FyZERhdGEiLCJuZiIsIm9mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInJlcGVhdCIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJvYnNlcnZlZEJpdHMiLCJyZXNwb25kZXJzIiwidGciLCJ1ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiYmFzZVF1ZXVlIiwic2hhcmVkIiwicGVuZGluZyIsImVmZmVjdHMiLCJ2ZyIsIndnIiwic3VzcGVuc2VDb25maWciLCJwYXlsb2FkIiwieGciLCJ5ZyIsInpnIiwiY2EiLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJKZyIsIl9yZWFjdEludGVybmFsRmliZXIiLCJHZyIsIkhnIiwiSWciLCJLZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIkxnIiwiY29udGV4dFR5cGUiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsImVsZW1lbnRUeXBlIiwiVWciLCJpbXBsZW1lbnRhdGlvbiIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImRoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImVoIiwiZmgiLCJnaCIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwicXVldWUiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImNyZWF0ZVRleHROb2RlIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsInN0YWNrIiwiQmkiLCJXZWFrU2V0IiwiU2V0IiwiQ2kiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaSIsIlNpIiwiVGkiLCJVaSIsIlZpIiwiYWRkIiwidGhlbiIsIldpIiwiWGkiLCJZaSIsIlppIiwiJGkiLCJjb21wb25lbnREaWRDYXRjaCIsImFqIiwiY29tcG9uZW50U3RhY2siLCJSaiIsImJqIiwiY2VpbCIsImNqIiwiZGoiLCJraiIsImxqIiwibWoiLCJuaiIsIm9qIiwicWoiLCJyaiIsInNqIiwidGoiLCJ1aiIsInZqIiwid2oiLCJ0aW1lb3V0TXMiLCJ4aiIsInlqIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsInNjcm9sbExlZnQiLCJzY3JvbGxUb3AiLCJ2YiIsIlVqIiwiVmoiLCJXaiIsImhpZGRlbiIsIm9iIiwiWGoiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJaaiIsInBlbmRpbmdDaGlsZHJlbiIsImFrIiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsIkpjIiwiX2ludGVybmFsUm9vdCIsImdrIiwiaWsiLCJoYXNBdHRyaWJ1dGUiLCJoayIsImprIiwia2siLCJ1bm1vdW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImZvcm0iLCJMaiIsImxrIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJjcmVhdGVQb3J0YWwiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsIk1lc3NhZ2VDaGFubmVsIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJwZXJmb3JtYW5jZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJwcmlvcml0eUxldmVsIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbiIsImRlbGF5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwiYm9keU9wZW5DbGFzc05hbWUiLCJwb3J0YWxDbGFzc05hbWUiLCJfcmVhY3REb20yIiwiX01vZGFsUG9ydGFsMiIsImFyaWFBcHBIaWRlciIsIl9zYWZlSFRNTEVsZW1lbnQyIiwiX3JlYWN0TGlmZWN5Y2xlc0NvbXBhdCIsImlzUmVhY3QxNiIsImdldENyZWF0ZVBvcnRhbCIsImdldFBhcmVudEVsZW1lbnQiLCJwYXJlbnRTZWxlY3RvciIsIk1vZGFsIiwiX3JlZiIsIl90ZW1wIiwiX2xlbiIsImFyZ3MiLCJfa2V5IiwicmVtb3ZlUG9ydGFsIiwicGFyZW50Iiwid2FybiIsInBvcnRhbFJlZiIsInBvcnRhbCIsInJlbmRlclBvcnRhbCIsImRlZmF1bHRTdHlsZXMiLCJwcmV2UGFyZW50IiwibmV4dFBhcmVudCIsIl8iLCJzbmFwc2hvdCIsIl9wcm9wcyIsImNsb3Nlc0F0IiwiY2xvc2VUaW1lb3V0TVMiLCJiZWZvcmVDbG9zZSIsImNsb3NlV2l0aFRpbWVvdXQiLCJpc1JlcXVpcmVkIiwic2hhcGUiLCJjb250ZW50Iiwib3ZlcmxheSIsImh0bWxPcGVuQ2xhc3NOYW1lIiwiYWZ0ZXJPcGVuIiwib3ZlcmxheUNsYXNzTmFtZSIsImluc3RhbmNlT2YiLCJvbkFmdGVyT3BlbiIsIm9uUmVxdWVzdENsb3NlIiwiYXJpYUhpZGVBcHAiLCJzaG91bGRGb2N1c0FmdGVyUmVuZGVyIiwic2hvdWxkQ2xvc2VPbk92ZXJsYXlDbGljayIsInNob3VsZFJldHVybkZvY3VzQWZ0ZXJDbG9zZSIsImFyaWEiLCJjb250ZW50TGFiZWwiLCJzaG91bGRDbG9zZU9uRXNjIiwib3ZlcmxheVJlZiIsImNvbnRlbnRSZWYiLCJyaWdodCIsImJvdHRvbSIsImJhY2tncm91bmRDb2xvciIsImJvcmRlciIsImJhY2tncm91bmQiLCJXZWJraXRPdmVyZmxvd1Njcm9sbGluZyIsImJvcmRlclJhZGl1cyIsIm91dGxpbmUiLCJwYWRkaW5nIiwicG9seWZpbGwiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJzeW1ib2wiLCJhcnJheU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmb2N1c01hbmFnZXIiLCJfc2NvcGVUYWIyIiwiY2xhc3NMaXN0IiwiX3BvcnRhbE9wZW5JbnN0YW5jZXMyIiwiQ0xBU1NfTkFNRVMiLCJhcmlhSGlkZGVuSW5zdGFuY2VzIiwiTW9kYWxQb3J0YWwiLCJzZXRPdmVybGF5UmVmIiwic2V0Q29udGVudFJlZiIsImFmdGVyQ2xvc2UiLCJyZW1vdmUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJldHVybkZvY3VzIiwidGVhcmRvd25TY29wZWRGb2N1cyIsInBvcFdpdGhvdXRGb2N1cyIsIm9uQWZ0ZXJDbG9zZSIsIm9wZW4iLCJiZWZvcmVPcGVuIiwiY2xvc2VUaW1lciIsInNldHVwU2NvcGVkRm9jdXMiLCJtYXJrRm9yRm9jdXNMYXRlciIsIm92ZXJsYXlFbCIsImNvbnRlbnRFbCIsImNsb3NlIiwiY2xvc2VXaXRob3V0VGltZW91dCIsImZvY3VzQ29udGVudCIsImNvbnRlbnRIYXNGb2N1cyIsImhhbmRsZUtleURvd24iLCJyZXF1ZXN0Q2xvc2UiLCJoYW5kbGVPdmVybGF5T25DbGljayIsInNob3VsZENsb3NlIiwib3duZXJIYW5kbGVzQ2xvc2UiLCJoYW5kbGVDb250ZW50T25Nb3VzZVVwIiwiaGFuZGxlT3ZlcmxheU9uTW91c2VEb3duIiwiaGFuZGxlQ29udGVudE9uQ2xpY2siLCJoYW5kbGVDb250ZW50T25Nb3VzZURvd24iLCJzaG91bGRCZUNsb3NlZCIsImJ1aWxkQ2xhc3NOYW1lIiwiYWRkaXRpb25hbCIsImNsYXNzTmFtZXMiLCJhdHRyaWJ1dGVzRnJvbU9iamVjdCIsInByZWZpeCIsImFjYyIsIm1vdmVGcm9tQ29udGVudFRvT3ZlcmxheSIsIl9wcm9wczIiLCJjb250ZW50U3R5bGVzIiwib3ZlcmxheVN0eWxlcyIsIm9uS2V5RG93biIsIm9uTW91c2VVcCIsInRlc3RJZCIsImhhbmRsZUJsdXIiLCJoYW5kbGVGb2N1cyIsImZvY3VzTGF0ZXJFbGVtZW50cyIsInRvRm9jdXMiLCJtb2RhbEVsZW1lbnQiLCJfdGFiYmFibGUiLCJfdGFiYmFibGUyIiwibmVlZFRvRm9jdXMiLCJoZWFkIiwiY2hlY2tTYWZhcmkiLCJleGVjIiwid2FybmluZyIsIkV4ZWN1dGlvbkVudmlyb25tZW50IiwiY2FuVXNlV29ya2VycyIsIldvcmtlciIsImNhblVzZUV2ZW50TGlzdGVuZXJzIiwiY2FuVXNlVmlld3BvcnQiLCJzY3JlZW4iLCJkdW1wQ2xhc3NMaXN0cyIsImh0bWxDbGFzc0xpc3QiLCJkb2NCb2R5Q2xhc3NMaXN0IiwiY2xhc3NTdHJpbmciLCJjbGFzc0xpc3RSZWYiLCJwb2xsIiwiaW5jcmVtZW50UmVmZXJlbmNlIiwiZGVjcmVtZW50UmVmZXJlbmNlIiwiX3BvcnRhbE9wZW5JbnN0YW5jZXMiLCJiZWZvcmUiLCJhZnRlciIsImluc3RhbmNlcyIsImNsb25lTm9kZSIsIm5leHRTdGF0ZSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90IiwiZm91bmRXaWxsTW91bnROYW1lIiwiZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSIsImZvdW5kV2lsbFVwZGF0ZU5hbWUiLCJuZXdBcGlOYW1lIiwibWF5YmVTbmFwc2hvdCIsIl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmciLCJoYXNPd24iLCJhcmciLCJhcmdUeXBlIiwiaW5uZXIiLCJhcGkiLCJleHBvcnRlZCIsImxvY2FscyIsImlzT2xkSUUiLCJCb29sZWFuIiwiYWxsIiwiYXRvYiIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwibW9kdWxlc1RvRG9tIiwibGlzdCIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwiaW5zZXJ0IiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiYXBwbHlUb1RhZyIsImJ0b2EiLCJ1bmVzY2FwZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJ1cGRhdGUiLCJzdHlsZUluZGV4IiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwiX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIiwidXNlU291cmNlTWFwIiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJiYXNlNjQiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJhcmVJbnB1dHNFcXVhbCIsIm5ld0lucHV0cyIsImxhc3RJbnB1dHMiLCJyZXN1bHRGbiIsImlzRXF1YWwiLCJsYXN0VGhpcyIsImxhc3RSZXN1bHQiLCJsYXN0QXJncyIsImNhbGxlZE9uY2UiLCJuZXdBcmdzIiwiU3R5bGVTaGVldCIsImlzU3BlZWR5Iiwic3BlZWR5IiwidGFncyIsImN0ciIsIl9wcm90byIsInJ1bGUiLCJfdGFnIiwiY3JlYXRlU3R5bGVFbGVtZW50Iiwic2hlZXQiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsInNoZWV0Rm9yVGFnIiwiaXNJbXBvcnRSdWxlIiwiY2hhckNvZGVBdCIsImluc2VydFJ1bGUiLCJjc3NSdWxlcyIsImZsdXNoIiwidXNlIiwidG9TaGVldCIsImJsb2NrIiwiU2hlZXQiLCJydWxlU2hlZXQiLCJzZWxlY3RvcnMiLCJwYXJlbnRzIiwibGluZSIsImNvbHVtbiIsImRlcHRoIiwiYXQiLCJzdHlsaXNPcHRpb25zIiwic3R5bGlzIiwiaW5zZXJ0ZWQiLCJfaW5zZXJ0Iiwibm9kZXMiLCJzdHlsaXNQbHVnaW5zIiwic2VyaWFsaXplZCIsInNob3VsZENhY2hlIiwicmVnaXN0ZXJlZCIsImdldFJlZ2lzdGVyZWRTdHlsZXMiLCJyZWdpc3RlcmVkU3R5bGVzIiwicmF3Q2xhc3NOYW1lIiwiaW5zZXJ0U3R5bGVzIiwiaXNTdHJpbmdUYWciLCJzdHIiLCJsZW4iLCJtc0dyaWRSb3ciLCJtc0dyaWRSb3dTcGFuIiwibXNHcmlkQ29sdW1uIiwibXNHcmlkQ29sdW1uU3BhbiIsIldlYmtpdExpbmVDbGFtcCIsImh5cGhlbmF0ZVJlZ2V4IiwiYW5pbWF0aW9uUmVnZXgiLCJpc0N1c3RvbVByb3BlcnR5IiwiaXNQcm9jZXNzYWJsZVZhbHVlIiwicHJvY2Vzc1N0eWxlTmFtZSIsImZuIiwic3R5bGVOYW1lIiwicDEiLCJwMiIsImN1cnNvciIsImhhbmRsZUludGVycG9sYXRpb24iLCJtZXJnZWRQcm9wcyIsImludGVycG9sYXRpb24iLCJjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uIiwiX19lbW90aW9uX3N0eWxlcyIsImFuaW0iLCJpbnRlcnBvbGF0ZWQiLCJjcmVhdGVTdHJpbmdGcm9tT2JqZWN0IiwicHJldmlvdXNDdXJzb3IiLCJjYWNoZWQiLCJsYWJlbFBhdHRlcm4iLCJzdHJpbmdNb2RlIiwic3RyaW5ncyIsInJhdyIsImxhc3RJbmRleCIsImlkZW50aWZpZXJOYW1lIiwiRW1vdGlvbkNhY2hlQ29udGV4dCIsIlRoZW1lQ29udGV4dCIsIkNhY2hlUHJvdmlkZXIiLCJ0eXBlUHJvcE5hbWUiLCJ0aGVtZSIsImNzc1Byb3AiLCJFbW90aW9uIiwiYXJnc0xlbmd0aCIsImNyZWF0ZUVsZW1lbnRBcmdBcnJheSIsImNsYXNzbmFtZXMiLCJjbHMiLCJ0b0FkZCIsIm1lcmdlIiwiQ2xhc3NOYW1lcyIsImN4IiwiX2xlbjIiLCJfa2V5MiIsImVsZSIsIm5vb3AiLCJhcHBseVByZWZpeFRvTmFtZSIsImFyciIsImNsZWFuVmFsdWUiLCJpc0RvY3VtZW50RWxlbWVudCIsImdldFNjcm9sbFRvcCIsInBhZ2VZT2Zmc2V0Iiwic2Nyb2xsVG8iLCJhbmltYXRlZFNjcm9sbFRvIiwiZHVyYXRpb24iLCJjdXJyZW50VGltZSIsImFuaW1hdGVTY3JvbGwiLCJpc1RvdWNoQ2FwYWJsZSIsImNyZWF0ZUV2ZW50IiwiX2luaGVyaXRzTG9vc2UiLCJnZXRNZW51UGxhY2VtZW50IiwibWF4SGVpZ2h0IiwibWVudUVsIiwibWluSGVpZ2h0IiwicGxhY2VtZW50Iiwic2hvdWxkU2Nyb2xsIiwiaXNGaXhlZFBvc2l0aW9uIiwic3BhY2luZyIsInNjcm9sbFBhcmVudCIsImV4Y2x1ZGVTdGF0aWNQYXJlbnQiLCJvdmVyZmxvd1J4IiwiZG9jRWwiLCJvdmVyZmxvd1kiLCJvdmVyZmxvd1giLCJnZXRTY3JvbGxQYXJlbnQiLCJkZWZhdWx0U3RhdGUiLCJvZmZzZXRQYXJlbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJfbWVudUVsJGdldEJvdW5kaW5nQ2wiLCJtZW51Qm90dG9tIiwibWVudUhlaWdodCIsIm1lbnVUb3AiLCJjb250YWluZXJUb3AiLCJ2aWV3SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW5Ub3AiLCJ2aWV3U3BhY2VBYm92ZSIsInZpZXdTcGFjZUJlbG93Iiwic2Nyb2xsU3BhY2VBYm92ZSIsInNjcm9sbFNwYWNlQmVsb3ciLCJzY3JvbGxEb3duIiwic2Nyb2xsVXAiLCJfY29uc3RyYWluZWRIZWlnaHQiLCJzcGFjZUFib3ZlIiwiY29udHJvbEhlaWdodCIsIl9jb25zdHJhaW5lZEhlaWdodDIiLCJjb2VyY2VQbGFjZW1lbnQiLCJNZW51UGxhY2VyIiwibWF4TWVudUhlaWdodCIsImdldFBsYWNlbWVudCIsIm1pbk1lbnVIZWlnaHQiLCJtZW51UGxhY2VtZW50IiwibWVudVBvc2l0aW9uIiwibWVudVNob3VsZFNjcm9sbEludG9WaWV3IiwiZ2V0UG9ydGFsUGxhY2VtZW50IiwiZ2V0VXBkYXRlZFByb3BzIiwicGxhY2VyUHJvcHMiLCJub3RpY2VDU1MiLCJfcmVmNSIsIl9yZWY1JHRoZW1lIiwiYmFzZVVuaXQiLCJjb2xvcnMiLCJuZXV0cmFsNDAiLCJ0ZXh0QWxpZ24iLCJub09wdGlvbnNNZXNzYWdlQ1NTIiwibG9hZGluZ01lc3NhZ2VDU1MiLCJnZXRTdHlsZXMiLCJpbm5lclByb3BzIiwiX0NvbXBvbmVudDIiLCJNZW51UG9ydGFsIiwiX3JlZjciLCJfcHJvdG8yIiwiYXBwZW5kVG8iLCJjb250cm9sRWxlbWVudCIsImlzRml4ZWQiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRPYmoiLCJzY3JvbGxEaXN0YW5jZSIsIm1lbnVXcmFwcGVyIiwia2V5TGlzdCIsImhhc1Byb3AiLCJleHBvcnRlZEVxdWFsIiwiZXF1YWwiLCJhcnJBIiwiYXJyQiIsImRhdGVBIiwiZGF0ZUIiLCJnZXRUaW1lIiwicmVnZXhwQSIsIlJlZ0V4cCIsInJlZ2V4cEIiLCJtZXNzYWdlIiwiX2V4dGVuZHMkMSIsIl90ZW1wbGF0ZU9iamVjdCIsIl90YWdnZWRUZW1wbGF0ZUxpdGVyYWxMb29zZSIsIl9leHRlbmRzJDIiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsInZpZXdCb3giLCJiYXNlQ1NTIiwiX3JlZjMiLCJpc0ZvY3VzZWQiLCJfcmVmMyR0aGVtZSIsIm5ldXRyYWw2MCIsIm5ldXRyYWwyMCIsIm5ldXRyYWw4MCIsImRyb3Bkb3duSW5kaWNhdG9yQ1NTIiwiY2xlYXJJbmRpY2F0b3JDU1MiLCJsb2FkaW5nRG90QW5pbWF0aW9ucyIsImluc2VydGFibGUiLCJfcmVmNiIsIm1hcmdpbkxlZnQiLCJ2ZXJ0aWNhbEFsaWduIiwiaXNSdGwiLCJpbmRpY2F0b3IiLCJfZXh0ZW5kcyQzIiwiX2V4dGVuZHMkNCIsIl9leHRlbmRzJDUiLCJpc0hpZGRlbiIsIl9leHRlbmRzJDYiLCJfcmVmNCIsImNvbXBvbmVudHMiLCJyZW1vdmVQcm9wcyIsInNlbGVjdFByb3BzIiwiQ29udGFpbmVyIiwiTGFiZWwiLCJSZW1vdmUiLCJlbW90aW9uQ3giLCJfZXh0ZW5kcyQ3IiwiY3JvcFdpdGhFbGxpcHNpcyIsIl9leHRlbmRzJDgiLCJfZXh0ZW5kcyQ5IiwiX2V4dGVuZHMkYSIsIkNsZWFySW5kaWNhdG9yIiwiaW5uZXJSZWYiLCJtZW51SXNPcGVuIiwiY29udHJvbCIsIkRyb3Bkb3duSW5kaWNhdG9yIiwiRG93bkNoZXZyb24iLCJDcm9zc0ljb24iLCJHcm91cCIsIkhlYWRpbmciLCJoZWFkaW5nUHJvcHMiLCJncm91cCIsIkdyb3VwSGVhZGluZyIsImNsZWFuUHJvcHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSQxIiwiSW5kaWNhdG9yc0NvbnRhaW5lciIsImluZGljYXRvcnMiLCJJbmRpY2F0b3JTZXBhcmF0b3IiLCJJbnB1dCIsIl9yZWYyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UkMiIsIkxvYWRpbmdJbmRpY2F0b3IiLCJNZW51TGlzdCIsImlzTXVsdGkiLCJMb2FkaW5nTWVzc2FnZSIsIk5vT3B0aW9uc01lc3NhZ2UiLCJNdWx0aVZhbHVlIiwiTXVsdGlWYWx1ZUNvbnRhaW5lciIsIk11bHRpVmFsdWVMYWJlbCIsIk11bHRpVmFsdWVSZW1vdmUiLCJPcHRpb24iLCJQbGFjZWhvbGRlciIsIlNlbGVjdENvbnRhaW5lciIsIlNpbmdsZVZhbHVlIiwiVmFsdWVDb250YWluZXIiLCJoYXNWYWx1ZSIsImRpYWNyaXRpY3MiLCJsZXR0ZXJzIiwic3RyaXBEaWFjcml0aWNzIiwidHJpbVN0cmluZyIsImRlZmF1bHRTdHJpbmdpZnkiLCJEdW1teUlucHV0IiwiaW4iLCJvdXQiLCJvbkV4aXRlZCIsImFwcGVhciIsImVudGVyIiwiZXhpdCIsImVtb3Rpb24iLCJ0cmFuc2Zvcm0iLCJOb2RlUmVzb2x2ZXIiLCJTVFlMRV9LRVlTIiwiTE9DS19TVFlMRVMiLCJwcmV2ZW50VG91Y2hNb3ZlIiwiYWxsb3dUb3VjaE1vdmUiLCJwcmV2ZW50SW5lcnRpYVNjcm9sbCIsInRvdGFsU2Nyb2xsIiwiY3VycmVudFNjcm9sbCIsImlzVG91Y2hEZXZpY2UiLCJtYXhUb3VjaFBvaW50cyIsImFjdGl2ZVNjcm9sbExvY2tzIiwiU2Nyb2xsTG9jayIsIm9yaWdpbmFsU3R5bGVzIiwibGlzdGVuZXJPcHRpb25zIiwiY2FwdHVyZSIsInBhc3NpdmUiLCJhY2NvdW50Rm9yU2Nyb2xsYmFycyIsInRvdWNoU2Nyb2xsVGFyZ2V0IiwidGFyZ2V0U3R5bGUiLCJjdXJyZW50UGFkZGluZyIsInBhZGRpbmdSaWdodCIsImNsaWVudFdpZHRoIiwiYWRqdXN0ZWRQYWRkaW5nIiwiaW5uZXJXaWR0aCIsIl90aGlzMyIsIl9yZWYkMSIsIl9QdXJlQ29tcG9uZW50IiwiU2Nyb2xsQmxvY2siLCJnZXRTY3JvbGxUYXJnZXQiLCJibHVyU2VsZWN0SW5wdXQiLCJpc0VuYWJsZWQiLCJTY3JvbGxDYXB0b3IiLCJpc0JvdHRvbSIsImlzVG9wIiwic2Nyb2xsVGFyZ2V0IiwidG91Y2hTdGFydCIsImNhbmNlbFNjcm9sbCIsImhhbmRsZUV2ZW50RGVsdGEiLCJkZWx0YSIsIm9uQm90dG9tQXJyaXZlIiwib25Cb3R0b21MZWF2ZSIsIm9uVG9wQXJyaXZlIiwib25Ub3BMZWF2ZSIsIl90aGlzJHNjcm9sbFRhcmdldCIsImNsaWVudEhlaWdodCIsImlzRGVsdGFQb3NpdGl2ZSIsImF2YWlsYWJsZVNjcm9sbCIsInNob3VsZENhbmNlbFNjcm9sbCIsIm9uV2hlZWwiLCJvblRvdWNoU3RhcnQiLCJvblRvdWNoTW92ZSIsInN0YXJ0TGlzdGVuaW5nIiwic3RvcExpc3RlbmluZyIsIlNjcm9sbENhcHRvclN3aXRjaCIsIl9yZWYkaXNFbmFibGVkIiwiaW5zdHJ1Y3Rpb25zQXJpYU1lc3NhZ2UiLCJpc1NlYXJjaGFibGUiLCJ2YWx1ZUV2ZW50QXJpYU1lc3NhZ2UiLCJpc09wdGlvbkRpc2FibGVkIiwiY2xlYXJJbmRpY2F0b3IiLCJkaXJlY3Rpb24iLCJwb2ludGVyRXZlbnRzIiwiX3JlZiR0aGVtZSIsImFsaWduSXRlbXMiLCJuZXV0cmFsNSIsIm5ldXRyYWwwIiwiYm9yZGVyQ29sb3IiLCJuZXV0cmFsMTAiLCJwcmltYXJ5IiwiYm9yZGVyU3R5bGUiLCJib3JkZXJXaWR0aCIsImJveFNoYWRvdyIsImZsZXhXcmFwIiwianVzdGlmeUNvbnRlbnQiLCJuZXV0cmFsMzAiLCJkcm9wZG93bkluZGljYXRvciIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nVG9wIiwiZ3JvdXBIZWFkaW5nIiwicGFkZGluZ0xlZnQiLCJpbmRpY2F0b3JzQ29udGFpbmVyIiwiYWxpZ25TZWxmIiwiaW5kaWNhdG9yU2VwYXJhdG9yIiwiX3JlZjQkdGhlbWUiLCJtYXJnaW4iLCJsb2FkaW5nSW5kaWNhdG9yIiwibWFyZ2luUmlnaHQiLCJsb2FkaW5nTWVzc2FnZSIsIl9yZWYyJHRoZW1lIiwiYWxpZ25Ub0NvbnRyb2wiLCJtZW51R3V0dGVyIiwibWVudUxpc3QiLCJtZW51UG9ydGFsIiwibXVsdGlWYWx1ZSIsIm11bHRpVmFsdWVMYWJlbCIsInRleHRPdmVyZmxvdyIsIm11bHRpVmFsdWVSZW1vdmUiLCJkYW5nZXJMaWdodCIsImRhbmdlciIsIm5vT3B0aW9uc01lc3NhZ2UiLCJwcmltYXJ5MjUiLCJ1c2VyU2VsZWN0IiwiV2Via2l0VGFwSGlnaGxpZ2h0Q29sb3IiLCJwcmltYXJ5NTAiLCJuZXV0cmFsNTAiLCJzaW5nbGVWYWx1ZSIsIm1heFdpZHRoIiwidmFsdWVDb250YWluZXIiLCJkZWZhdWx0VGhlbWUiLCJwcmltYXJ5NzUiLCJuZXV0cmFsNzAiLCJuZXV0cmFsOTAiLCJjb25maWciLCJiYWNrc3BhY2VSZW1vdmVzVmFsdWUiLCJibHVySW5wdXRPblNlbGVjdCIsImNhcHR1cmVNZW51U2Nyb2xsIiwiY2xvc2VNZW51T25TZWxlY3QiLCJjbG9zZU1lbnVPblNjcm9sbCIsImNvbnRyb2xTaG91bGRSZW5kZXJWYWx1ZSIsImVzY2FwZUNsZWFyc1ZhbHVlIiwiZmlsdGVyT3B0aW9uIiwicmF3SW5wdXQiLCJfaWdub3JlQ2FzZSRpZ25vcmVBY2MiLCJpZ25vcmVDYXNlIiwiaWdub3JlQWNjZW50cyIsIm1hdGNoRnJvbSIsImNhbmRpZGF0ZSIsImZvcm1hdEdyb3VwTGFiZWwiLCJnZXRPcHRpb25MYWJlbCIsImdldE9wdGlvblZhbHVlIiwiaXNMb2FkaW5nIiwibWVudVNob3VsZEJsb2NrU2Nyb2xsIiwiaXNNb2JpbGVEZXZpY2UiLCJvcGVuTWVudU9uRm9jdXMiLCJvcGVuTWVudU9uQ2xpY2siLCJwYWdlU2l6ZSIsInNjcmVlblJlYWRlclN0YXR1cyIsInRhYlNlbGVjdHNWYWx1ZSIsImluc3RhbmNlSWQiLCJTZWxlY3QiLCJhcmlhTGl2ZVNlbGVjdGlvbiIsImFyaWFMaXZlQ29udGV4dCIsImZvY3VzZWRPcHRpb24iLCJmb2N1c2VkVmFsdWUiLCJpbnB1dElzSGlkZGVuIiwibWVudU9wdGlvbnMiLCJzZWxlY3RWYWx1ZSIsImJsb2NrT3B0aW9uSG92ZXIiLCJpc0NvbXBvc2luZyIsImNsZWFyRm9jdXNWYWx1ZU9uVXBkYXRlIiwiY29tbW9uUHJvcHMiLCJoYXNHcm91cHMiLCJpbml0aWFsVG91Y2hYIiwiaW5pdGlhbFRvdWNoWSIsImlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZSIsImluc3RhbmNlUHJlZml4Iiwib3BlbkFmdGVyRm9jdXMiLCJzY3JvbGxUb0ZvY3VzZWRPcHRpb25PblVwZGF0ZSIsInVzZXJJc0RyYWdnaW5nIiwiY29udHJvbFJlZiIsImdldENvbnRyb2xSZWYiLCJmb2N1c2VkT3B0aW9uUmVmIiwiZ2V0Rm9jdXNlZE9wdGlvblJlZiIsIm1lbnVMaXN0UmVmIiwiZ2V0TWVudUxpc3RSZWYiLCJnZXRJbnB1dFJlZiIsImNhY2hlQ29tcG9uZW50cyIsImZvY3VzSW5wdXQiLCJibHVySW5wdXQiLCJuZXdWYWx1ZSIsImFjdGlvbk1ldGEiLCJvbklucHV0Q2hhbmdlIiwib25NZW51Q2xvc2UiLCJzZWxlY3RPcHRpb24iLCJfdGhpcyRwcm9wczMiLCJpc09wdGlvblNlbGVjdGVkIiwiYW5ub3VuY2VBcmlhTGl2ZVNlbGVjdGlvbiIsInJlbW92ZVZhbHVlIiwicmVtb3ZlZFZhbHVlIiwiY2xlYXJWYWx1ZSIsInBvcFZhbHVlIiwibGFzdFNlbGVjdGVkVmFsdWUiLCJjdXN0b20iLCJnZXRFbGVtZW50SWQiLCJnZXRBY3RpdmVEZXNjZW5kZW50SWQiLCJfdGhpcyRzdGF0ZSIsImFubm91bmNlQXJpYUxpdmVDb250ZXh0Iiwib25NZW51TW91c2VEb3duIiwib25NZW51TW91c2VNb3ZlIiwib25Db250cm9sTW91c2VEb3duIiwib3Blbk1lbnUiLCJvbkRyb3Bkb3duSW5kaWNhdG9yTW91c2VEb3duIiwiX3RoaXMkcHJvcHM0Iiwib25DbGVhckluZGljYXRvck1vdXNlRG93biIsIm9uU2Nyb2xsIiwib25Db21wb3NpdGlvblN0YXJ0Iiwib25Db21wb3NpdGlvbkVuZCIsInRvdWNoIiwiYWJzIiwib25Db250cm9sVG91Y2hFbmQiLCJvbkNsZWFySW5kaWNhdG9yVG91Y2hFbmQiLCJvbkRyb3Bkb3duSW5kaWNhdG9yVG91Y2hFbmQiLCJoYW5kbGVJbnB1dENoYW5nZSIsImlucHV0VmFsdWUiLCJvbk1lbnVPcGVuIiwib25JbnB1dEZvY3VzIiwiX3RoaXMkcHJvcHM1Iiwib25JbnB1dEJsdXIiLCJvbkJsdXIiLCJvbk9wdGlvbkhvdmVyIiwic2hvdWxkSGlkZVNlbGVjdGVkT3B0aW9ucyIsIl90aGlzJHByb3BzNiIsImhpZGVTZWxlY3RlZE9wdGlvbnMiLCJfdGhpcyRwcm9wczciLCJpc0NsZWFyYWJsZSIsIl90aGlzJHN0YXRlMiIsImZvY3VzVmFsdWUiLCJmb2N1c09wdGlvbiIsImJ1aWxkTWVudU9wdGlvbnMiLCJfcHJvcHMkaW5wdXRWYWx1ZSIsInRvT3B0aW9uIiwib25Ib3ZlciIsIm9wdGlvbklkIiwib25Nb3VzZU1vdmUiLCJvbk1vdXNlT3ZlciIsIml0ZW1JbmRleCIsImdyb3VwSWQiLCJfdmFsdWUiLCJfc2VsZWN0VmFsdWUiLCJuZXdTZWxlY3RWYWx1ZSIsImxhc3RQcm9wcyIsIl9tZW51T3B0aW9ucyIsInN0YXJ0TGlzdGVuaW5nQ29tcG9zaXRpb24iLCJzdGFydExpc3RlbmluZ1RvVG91Y2giLCJfdGhpcyRwcm9wczgiLCJnZXROZXh0Rm9jdXNlZFZhbHVlIiwiZ2V0TmV4dEZvY3VzZWRPcHRpb24iLCJmb2N1c2VkRWwiLCJtZW51UmVjdCIsImZvY3VzZWRSZWN0Iiwib3ZlclNjcm9sbCIsIl90aGlzJHByb3BzOSIsIm9mZnNldFRvcCIsInN0b3BMaXN0ZW5pbmdDb21wb3NpdGlvbiIsInN0b3BMaXN0ZW5pbmdUb1RvdWNoIiwiX3RoaXMkcHJvcHMxMCIsIl90aGlzJHN0YXRlMyIsIm9wZW5BdEluZGV4Iiwic2VsZWN0ZWRJbmRleCIsIl90aGlzJHByb3BzMTEiLCJfdGhpcyRzdGF0ZTQiLCJmb2N1c2VkSW5kZXgiLCJuZXh0Rm9jdXMiLCJfdGhpcyRzdGF0ZTUiLCJnZXRUaGVtZSIsImdldENvbW1vblByb3BzIiwiY2xhc3NOYW1lUHJlZml4IiwibmV4dFNlbGVjdFZhbHVlIiwiX3RoaXMkc3RhdGU2IiwibGFzdEZvY3VzZWRJbmRleCIsImxhc3RGb2N1c2VkT3B0aW9uIiwiaGFzT3B0aW9ucyIsImNvdW50T3B0aW9ucyIsIl90aGlzJHByb3BzMTIiLCJzb21lIiwiZm9ybWF0T3B0aW9uTGFiZWwiLCJjb25zdHJ1Y3RBcmlhTGl2ZU1lc3NhZ2UiLCJfdGhpcyRzdGF0ZTciLCJfdGhpcyRwcm9wczEzIiwidmFsdWVGb2N1c0FyaWFNZXNzYWdlIiwib3B0aW9uRm9jdXNBcmlhTWVzc2FnZSIsInNjcmVlblJlYWRlck1lc3NhZ2UiLCJyZXN1bHRzQXJpYU1lc3NhZ2UiLCJyZW5kZXJJbnB1dCIsIl90aGlzJHByb3BzMTQiLCJhcmlhQXR0cmlidXRlcyIsInJlYWRPbmx5IiwiX3RoaXMkY29tbW9uUHJvcHMiLCJhdXRvQ2FwaXRhbGl6ZSIsImF1dG9Db21wbGV0ZSIsImF1dG9Db3JyZWN0Iiwic3BlbGxDaGVjayIsInJlbmRlclBsYWNlaG9sZGVyT3JWYWx1ZSIsIl90aGlzNCIsIl90aGlzJGNvbXBvbmVudHMiLCJfdGhpcyRwcm9wczE1IiwiX3RoaXMkc3RhdGU4Iiwib3B0IiwiaXNPcHRpb25Gb2N1c2VkIiwicmVuZGVyQ2xlYXJJbmRpY2F0b3IiLCJfdGhpcyRwcm9wczE2IiwicmVuZGVyTG9hZGluZ0luZGljYXRvciIsIl90aGlzJHByb3BzMTciLCJyZW5kZXJJbmRpY2F0b3JTZXBhcmF0b3IiLCJfdGhpcyRjb21wb25lbnRzMiIsInJlbmRlckRyb3Bkb3duSW5kaWNhdG9yIiwicmVuZGVyTWVudSIsIl90aGlzNSIsIl90aGlzJGNvbXBvbmVudHMzIiwiX3RoaXMkc3RhdGU5IiwiX3RoaXMkcHJvcHMxOCIsIm1lbnVQb3J0YWxUYXJnZXQiLCJvbk1lbnVTY3JvbGxUb1RvcCIsIm9uTWVudVNjcm9sbFRvQm90dG9tIiwibWVudVVJIiwiaGVhZGluZ0lkIiwiX21lc3NhZ2UiLCJtZW51UGxhY2VtZW50UHJvcHMiLCJtZW51RWxlbWVudCIsIl9yZWY4IiwiX3JlZjgkcGxhY2VyUHJvcHMiLCJyZW5kZXJGb3JtRmllbGQiLCJfdGhpczYiLCJfdGhpcyRwcm9wczE5IiwiZGVsaW1pdGVyIiwiX3ZhbHVlMiIsInJlbmRlckxpdmVSZWdpb24iLCJfdGhpcyRjb21wb25lbnRzNCIsIl90aGlzJHByb3BzMjAiLCJkZWZhdWx0SW5wdXRWYWx1ZSIsImRlZmF1bHRNZW51SXNPcGVuIiwiU2VsZWN0Q29tcG9uZW50IiwiX2NsYXNzIiwiU3RhdGVNYW5hZ2VyIiwiY2FsbFByb3AiLCJnZXRQcm9wIiwiY3VzdG9tU3R5bGVzIiwiQWRkUXVlc3Rpb25Nb2RhbCIsInFPYmoiLCJtY0xpc3QiLCJ0eXBlTGlzdCIsInNlbGVjdGVkVGFnTGlzdCIsInFUZXh0Iiwic2VsZWN0ZWRRVHlwZSIsInNlbGVjdGVkUVR5cGVPYmoiLCJ0ZkNob2ljZSIsIm1jQ2hvaWNlIiwiYW5zd2VyIiwiaW5pdGlhbGl6ZURhdGEiLCJyZW5kZXJUYWJsZUJvZHkiLCJyZW5kZXJUYWdzIiwiaGFuZGxlU3VibWl0IiwiY2xlYXJEYXRhIiwib25RVHlwZUNoYW5nZSIsImhhbmRsZU9wdGlvbkNoYW5nZSIsImhhbmRsZVRhZ0NoYW5nZSIsImhhbmRsZU9uQmx1ciIsInFBbnMiLCJsb2ciLCJvcCIsImFucyIsIl9fUmVxdWVzdFZlcmlmaWNhdGlvblRva2VuIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCIkIiwiYWpheCIsImRhdGFUeXBlIiwibWV0aG9kIiwic3VjY2VzcyIsImFsZXJ0IiwiY2xvc2VNb2RhbCIsInJvd3MiLCJ0YWdMaXN0IiwiaHRtbEZvciIsIkFQUFMiLCJRdWVzdGlvbkNvbnRhaW5lciIsInF1ZXN0aW9ucyIsImdldFF1ZXN0aW9uIiwiZ2V0VGFnTGlzdHMiLCJnZXRUeXBlTGlzdHMiLCJ0b2dnbGVNb2RhbCIsInRhYmwiLCJxVGFnIiwidE5hbWUiLCJxVHlwZSIsInZhcmlhbnQiLCJoZWFkZXJUYWIiLCJyZW5kZXJRdWVzdGlvblRhYmxlIiwiYWRkUXVlc3Rpb25Nb2RhbCIsIkFwcCIsImRhdGFzZXQiLCJSZWFjdERPTSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9E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Q2lELFNBQVNsQixpQkFBaUIsaUJBQWlCdEMsU0FYM0MsU0FBNEJ2RCxHQUMxQixJQUFJeXVFLEVBQU1mLEdBQUsxdEUsRUFBR1UsSUFDbEIsR0FBSyt0RSxFQUFMLENBR0EsSUFBTTd4RSxFQUFRNUMsT0FBT3FDLE9BQU8sR0FBSTJELEVBQUcwdUUsU0FHbkNDLFNBQVM3NUQsT0FBTyxrQkFBQzI1RCxFQUFRN3hFLEdBQVdvRCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMzIpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY2FuVXNlRE9NID0gdW5kZWZpbmVkO1xuXG52YXIgX2V4ZW52ID0gcmVxdWlyZShcImV4ZW52XCIpO1xuXG52YXIgX2V4ZW52MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4ZW52KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIEVFID0gX2V4ZW52Mi5kZWZhdWx0O1xuXG52YXIgU2FmZUhUTUxFbGVtZW50ID0gRUUuY2FuVXNlRE9NID8gd2luZG93LkhUTUxFbGVtZW50IDoge307XG5cbnZhciBjYW5Vc2VET00gPSBleHBvcnRzLmNhblVzZURPTSA9IEVFLmNhblVzZURPTTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gU2FmZUhUTUxFbGVtZW50OyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG5cdHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBzaXplclN0eWxlID0ge1xuXHRwb3NpdGlvbjogJ2Fic29sdXRlJyxcblx0dG9wOiAwLFxuXHRsZWZ0OiAwLFxuXHR2aXNpYmlsaXR5OiAnaGlkZGVuJyxcblx0aGVpZ2h0OiAwLFxuXHRvdmVyZmxvdzogJ3Njcm9sbCcsXG5cdHdoaXRlU3BhY2U6ICdwcmUnXG59O1xuXG52YXIgSU5QVVRfUFJPUFNfQkxBQ0tMSVNUID0gWydleHRyYVdpZHRoJywgJ2luamVjdFN0eWxlcycsICdpbnB1dENsYXNzTmFtZScsICdpbnB1dFJlZicsICdpbnB1dFN0eWxlJywgJ21pbldpZHRoJywgJ29uQXV0b3NpemUnLCAncGxhY2Vob2xkZXJJc01pbldpZHRoJ107XG5cbnZhciBjbGVhbklucHV0UHJvcHMgPSBmdW5jdGlvbiBjbGVhbklucHV0UHJvcHMoaW5wdXRQcm9wcykge1xuXHRJTlBVVF9QUk9QU19CTEFDS0xJU1QuZm9yRWFjaChmdW5jdGlvbiAoZmllbGQpIHtcblx0XHRyZXR1cm4gZGVsZXRlIGlucHV0UHJvcHNbZmllbGRdO1xuXHR9KTtcblx0cmV0dXJuIGlucHV0UHJvcHM7XG59O1xuXG52YXIgY29weVN0eWxlcyA9IGZ1bmN0aW9uIGNvcHlTdHlsZXMoc3R5bGVzLCBub2RlKSB7XG5cdG5vZGUuc3R5bGUuZm9udFNpemUgPSBzdHlsZXMuZm9udFNpemU7XG5cdG5vZGUuc3R5bGUuZm9udEZhbWlseSA9IHN0eWxlcy5mb250RmFtaWx5O1xuXHRub2RlLnN0eWxlLmZvbnRXZWlnaHQgPSBzdHlsZXMuZm9udFdlaWdodDtcblx0bm9kZS5zdHlsZS5mb250U3R5bGUgPSBzdHlsZXMuZm9udFN0eWxlO1xuXHRub2RlLnN0eWxlLmxldHRlclNwYWNpbmcgPSBzdHlsZXMubGV0dGVyU3BhY2luZztcblx0bm9kZS5zdHlsZS50ZXh0VHJhbnNmb3JtID0gc3R5bGVzLnRleHRUcmFuc2Zvcm07XG59O1xuXG52YXIgaXNJRSA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5uYXZpZ2F0b3IgPyAvTVNJRSB8VHJpZGVudFxcL3xFZGdlXFwvLy50ZXN0KHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KSA6IGZhbHNlO1xuXG52YXIgZ2VuZXJhdGVJZCA9IGZ1bmN0aW9uIGdlbmVyYXRlSWQoKSB7XG5cdC8vIHdlIG9ubHkgbmVlZCBhbiBhdXRvLWdlbmVyYXRlZCBJRCBmb3Igc3R5bGVzaGVldCBpbmplY3Rpb24sIHdoaWNoIGlzIG9ubHlcblx0Ly8gdXNlZCBmb3IgSUUuIHNvIGlmIHRoZSBicm93c2VyIGlzIG5vdCBJRSwgdGhpcyBzaG91bGQgcmV0dXJuIHVuZGVmaW5lZC5cblx0cmV0dXJuIGlzSUUgPyAnXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgMTIpIDogdW5kZWZpbmVkO1xufTtcblxudmFyIEF1dG9zaXplSW5wdXQgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuXHRfaW5oZXJpdHMoQXV0b3NpemVJbnB1dCwgX0NvbXBvbmVudCk7XG5cblx0ZnVuY3Rpb24gQXV0b3NpemVJbnB1dChwcm9wcykge1xuXHRcdF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBdXRvc2l6ZUlucHV0KTtcblxuXHRcdHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChBdXRvc2l6ZUlucHV0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQXV0b3NpemVJbnB1dCkpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuXHRcdF90aGlzLmlucHV0UmVmID0gZnVuY3Rpb24gKGVsKSB7XG5cdFx0XHRfdGhpcy5pbnB1dCA9IGVsO1xuXHRcdFx0aWYgKHR5cGVvZiBfdGhpcy5wcm9wcy5pbnB1dFJlZiA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRfdGhpcy5wcm9wcy5pbnB1dFJlZihlbCk7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdF90aGlzLnBsYWNlSG9sZGVyU2l6ZXJSZWYgPSBmdW5jdGlvbiAoZWwpIHtcblx0XHRcdF90aGlzLnBsYWNlSG9sZGVyU2l6ZXIgPSBlbDtcblx0XHR9O1xuXG5cdFx0X3RoaXMuc2l6ZXJSZWYgPSBmdW5jdGlvbiAoZWwpIHtcblx0XHRcdF90aGlzLnNpemVyID0gZWw7XG5cdFx0fTtcblxuXHRcdF90aGlzLnN0YXRlID0ge1xuXHRcdFx0aW5wdXRXaWR0aDogcHJvcHMubWluV2lkdGgsXG5cdFx0XHRpbnB1dElkOiBwcm9wcy5pZCB8fCBnZW5lcmF0ZUlkKClcblx0XHR9O1xuXHRcdHJldHVybiBfdGhpcztcblx0fVxuXG5cdF9jcmVhdGVDbGFzcyhBdXRvc2l6ZUlucHV0LCBbe1xuXHRcdGtleTogJ2NvbXBvbmVudERpZE1vdW50Jyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG5cdFx0XHR0aGlzLm1vdW50ZWQgPSB0cnVlO1xuXHRcdFx0dGhpcy5jb3B5SW5wdXRTdHlsZXMoKTtcblx0XHRcdHRoaXMudXBkYXRlSW5wdXRXaWR0aCgpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ1VOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG5cdFx0XHR2YXIgaWQgPSBuZXh0UHJvcHMuaWQ7XG5cblx0XHRcdGlmIChpZCAhPT0gdGhpcy5wcm9wcy5pZCkge1xuXHRcdFx0XHR0aGlzLnNldFN0YXRlKHsgaW5wdXRJZDogaWQgfHwgZ2VuZXJhdGVJZCgpIH0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ2NvbXBvbmVudERpZFVwZGF0ZScsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuXHRcdFx0aWYgKHByZXZTdGF0ZS5pbnB1dFdpZHRoICE9PSB0aGlzLnN0YXRlLmlucHV0V2lkdGgpIHtcblx0XHRcdFx0aWYgKHR5cGVvZiB0aGlzLnByb3BzLm9uQXV0b3NpemUgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0XHR0aGlzLnByb3BzLm9uQXV0b3NpemUodGhpcy5zdGF0ZS5pbnB1dFdpZHRoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0dGhpcy51cGRhdGVJbnB1dFdpZHRoKCk7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnY29tcG9uZW50V2lsbFVubW91bnQnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcblx0XHRcdHRoaXMubW91bnRlZCA9IGZhbHNlO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ2NvcHlJbnB1dFN0eWxlcycsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGNvcHlJbnB1dFN0eWxlcygpIHtcblx0XHRcdGlmICghdGhpcy5tb3VudGVkIHx8ICF3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR2YXIgaW5wdXRTdHlsZXMgPSB0aGlzLmlucHV0ICYmIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuaW5wdXQpO1xuXHRcdFx0aWYgKCFpbnB1dFN0eWxlcykge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHRjb3B5U3R5bGVzKGlucHV0U3R5bGVzLCB0aGlzLnNpemVyKTtcblx0XHRcdGlmICh0aGlzLnBsYWNlSG9sZGVyU2l6ZXIpIHtcblx0XHRcdFx0Y29weVN0eWxlcyhpbnB1dFN0eWxlcywgdGhpcy5wbGFjZUhvbGRlclNpemVyKTtcblx0XHRcdH1cblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICd1cGRhdGVJbnB1dFdpZHRoJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gdXBkYXRlSW5wdXRXaWR0aCgpIHtcblx0XHRcdGlmICghdGhpcy5tb3VudGVkIHx8ICF0aGlzLnNpemVyIHx8IHR5cGVvZiB0aGlzLnNpemVyLnNjcm9sbFdpZHRoID09PSAndW5kZWZpbmVkJykge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR2YXIgbmV3SW5wdXRXaWR0aCA9IHZvaWQgMDtcblx0XHRcdGlmICh0aGlzLnByb3BzLnBsYWNlaG9sZGVyICYmICghdGhpcy5wcm9wcy52YWx1ZSB8fCB0aGlzLnByb3BzLnZhbHVlICYmIHRoaXMucHJvcHMucGxhY2Vob2xkZXJJc01pbldpZHRoKSkge1xuXHRcdFx0XHRuZXdJbnB1dFdpZHRoID0gTWF0aC5tYXgodGhpcy5zaXplci5zY3JvbGxXaWR0aCwgdGhpcy5wbGFjZUhvbGRlclNpemVyLnNjcm9sbFdpZHRoKSArIDI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRuZXdJbnB1dFdpZHRoID0gdGhpcy5zaXplci5zY3JvbGxXaWR0aCArIDI7XG5cdFx0XHR9XG5cdFx0XHQvLyBhZGQgZXh0cmFXaWR0aCB0byB0aGUgZGV0ZWN0ZWQgd2lkdGguIGZvciBudW1iZXIgdHlwZXMsIHRoaXMgZGVmYXVsdHMgdG8gMTYgdG8gYWxsb3cgZm9yIHRoZSBzdGVwcGVyIFVJXG5cdFx0XHR2YXIgZXh0cmFXaWR0aCA9IHRoaXMucHJvcHMudHlwZSA9PT0gJ251bWJlcicgJiYgdGhpcy5wcm9wcy5leHRyYVdpZHRoID09PSB1bmRlZmluZWQgPyAxNiA6IHBhcnNlSW50KHRoaXMucHJvcHMuZXh0cmFXaWR0aCkgfHwgMDtcblx0XHRcdG5ld0lucHV0V2lkdGggKz0gZXh0cmFXaWR0aDtcblx0XHRcdGlmIChuZXdJbnB1dFdpZHRoIDwgdGhpcy5wcm9wcy5taW5XaWR0aCkge1xuXHRcdFx0XHRuZXdJbnB1dFdpZHRoID0gdGhpcy5wcm9wcy5taW5XaWR0aDtcblx0XHRcdH1cblx0XHRcdGlmIChuZXdJbnB1dFdpZHRoICE9PSB0aGlzLnN0YXRlLmlucHV0V2lkdGgpIHtcblx0XHRcdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRcdFx0aW5wdXRXaWR0aDogbmV3SW5wdXRXaWR0aFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdnZXRJbnB1dCcsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIGdldElucHV0KCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuaW5wdXQ7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAnZm9jdXMnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBmb2N1cygpIHtcblx0XHRcdHRoaXMuaW5wdXQuZm9jdXMoKTtcblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdibHVyJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gYmx1cigpIHtcblx0XHRcdHRoaXMuaW5wdXQuYmx1cigpO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3NlbGVjdCcsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHNlbGVjdCgpIHtcblx0XHRcdHRoaXMuaW5wdXQuc2VsZWN0KCk7XG5cdFx0fVxuXHR9LCB7XG5cdFx0a2V5OiAncmVuZGVyU3R5bGVzJyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gcmVuZGVyU3R5bGVzKCkge1xuXHRcdFx0Ly8gdGhpcyBtZXRob2QgaW5qZWN0cyBzdHlsZXMgdG8gaGlkZSBJRSdzIGNsZWFyIGluZGljYXRvciwgd2hpY2ggbWVzc2VzXG5cdFx0XHQvLyB3aXRoIGlucHV0IHNpemUgZGV0ZWN0aW9uLiB0aGUgc3R5bGVzaGVldCBpcyBvbmx5IGluamVjdGVkIHdoZW4gdGhlXG5cdFx0XHQvLyBicm93c2VyIGlzIElFLCBhbmQgY2FuIGFsc28gYmUgZGlzYWJsZWQgYnkgdGhlIGBpbmplY3RTdHlsZXNgIHByb3AuXG5cdFx0XHR2YXIgaW5qZWN0U3R5bGVzID0gdGhpcy5wcm9wcy5pbmplY3RTdHlsZXM7XG5cblx0XHRcdHJldHVybiBpc0lFICYmIGluamVjdFN0eWxlcyA/IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCdzdHlsZScsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcblx0XHRcdFx0XHRfX2h0bWw6ICdpbnB1dCMnICsgdGhpcy5zdGF0ZS5pbnB1dElkICsgJzo6LW1zLWNsZWFyIHtkaXNwbGF5OiBub25lO30nXG5cdFx0XHRcdH0gfSkgOiBudWxsO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3JlbmRlcicsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcblx0XHRcdHZhciBzaXplclZhbHVlID0gW3RoaXMucHJvcHMuZGVmYXVsdFZhbHVlLCB0aGlzLnByb3BzLnZhbHVlLCAnJ10ucmVkdWNlKGZ1bmN0aW9uIChwcmV2aW91c1ZhbHVlLCBjdXJyZW50VmFsdWUpIHtcblx0XHRcdFx0aWYgKHByZXZpb3VzVmFsdWUgIT09IG51bGwgJiYgcHJldmlvdXNWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHByZXZpb3VzVmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIGN1cnJlbnRWYWx1ZTtcblx0XHRcdH0pO1xuXG5cdFx0XHR2YXIgd3JhcHBlclN0eWxlID0gX2V4dGVuZHMoe30sIHRoaXMucHJvcHMuc3R5bGUpO1xuXHRcdFx0aWYgKCF3cmFwcGVyU3R5bGUuZGlzcGxheSkgd3JhcHBlclN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcblxuXHRcdFx0dmFyIGlucHV0U3R5bGUgPSBfZXh0ZW5kcyh7XG5cdFx0XHRcdGJveFNpemluZzogJ2NvbnRlbnQtYm94Jyxcblx0XHRcdFx0d2lkdGg6IHRoaXMuc3RhdGUuaW5wdXRXaWR0aCArICdweCdcblx0XHRcdH0sIHRoaXMucHJvcHMuaW5wdXRTdHlsZSk7XG5cblx0XHRcdHZhciBpbnB1dFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHRoaXMucHJvcHMsIFtdKTtcblxuXHRcdFx0Y2xlYW5JbnB1dFByb3BzKGlucHV0UHJvcHMpO1xuXHRcdFx0aW5wdXRQcm9wcy5jbGFzc05hbWUgPSB0aGlzLnByb3BzLmlucHV0Q2xhc3NOYW1lO1xuXHRcdFx0aW5wdXRQcm9wcy5pZCA9IHRoaXMuc3RhdGUuaW5wdXRJZDtcblx0XHRcdGlucHV0UHJvcHMuc3R5bGUgPSBpbnB1dFN0eWxlO1xuXG5cdFx0XHRyZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdCdkaXYnLFxuXHRcdFx0XHR7IGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUsIHN0eWxlOiB3cmFwcGVyU3R5bGUgfSxcblx0XHRcdFx0dGhpcy5yZW5kZXJTdHlsZXMoKSxcblx0XHRcdFx0X3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JywgX2V4dGVuZHMoe30sIGlucHV0UHJvcHMsIHsgcmVmOiB0aGlzLmlucHV0UmVmIH0pKSxcblx0XHRcdFx0X3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdFx0J2RpdicsXG5cdFx0XHRcdFx0eyByZWY6IHRoaXMuc2l6ZXJSZWYsIHN0eWxlOiBzaXplclN0eWxlIH0sXG5cdFx0XHRcdFx0c2l6ZXJWYWx1ZVxuXHRcdFx0XHQpLFxuXHRcdFx0XHR0aGlzLnByb3BzLnBsYWNlaG9sZGVyID8gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG5cdFx0XHRcdFx0J2RpdicsXG5cdFx0XHRcdFx0eyByZWY6IHRoaXMucGxhY2VIb2xkZXJTaXplclJlZiwgc3R5bGU6IHNpemVyU3R5bGUgfSxcblx0XHRcdFx0XHR0aGlzLnByb3BzLnBsYWNlaG9sZGVyXG5cdFx0XHRcdCkgOiBudWxsXG5cdFx0XHQpO1xuXHRcdH1cblx0fV0pO1xuXG5cdHJldHVybiBBdXRvc2l6ZUlucHV0O1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuQXV0b3NpemVJbnB1dC5wcm9wVHlwZXMgPSB7XG5cdGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIC8vIGNsYXNzTmFtZSBmb3IgdGhlIG91dGVyIGVsZW1lbnRcblx0ZGVmYXVsdFZhbHVlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmFueSwgLy8gZGVmYXVsdCBmaWVsZCB2YWx1ZVxuXHRleHRyYVdpZHRoOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbLy8gYWRkaXRpb25hbCB3aWR0aCBmb3IgaW5wdXQgZWxlbWVudFxuXHRfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlciwgX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmddKSxcblx0aWQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCAvLyBpZCB0byB1c2UgZm9yIHRoZSBpbnB1dCwgY2FuIGJlIHNldCBmb3IgY29uc2lzdGVudCBzbmFwc2hvdHNcblx0aW5qZWN0U3R5bGVzOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsIC8vIGluamVjdCB0aGUgY3VzdG9tIHN0eWxlc2hlZXQgdG8gaGlkZSBjbGVhciBVSSwgZGVmYXVsdHMgdG8gdHJ1ZVxuXHRpbnB1dENsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIC8vIGNsYXNzTmFtZSBmb3IgdGhlIGlucHV0IGVsZW1lbnRcblx0aW5wdXRSZWY6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYywgLy8gcmVmIGNhbGxiYWNrIGZvciB0aGUgaW5wdXQgZWxlbWVudFxuXHRpbnB1dFN0eWxlOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCwgLy8gY3NzIHN0eWxlcyBmb3IgdGhlIGlucHV0IGVsZW1lbnRcblx0bWluV2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFsvLyBtaW5pbXVtIHdpZHRoIGZvciBpbnB1dCBlbGVtZW50XG5cdF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLCBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ10pLFxuXHRvbkF1dG9zaXplOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsIC8vIG9uQXV0b3NpemUgaGFuZGxlcjogZnVuY3Rpb24obmV3V2lkdGgpIHt9XG5cdG9uQ2hhbmdlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsIC8vIG9uQ2hhbmdlIGhhbmRsZXI6IGZ1bmN0aW9uKGV2ZW50KSB7fVxuXHRwbGFjZWhvbGRlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIC8vIHBsYWNlaG9sZGVyIHRleHRcblx0cGxhY2Vob2xkZXJJc01pbldpZHRoOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsIC8vIGRvbid0IGNvbGxhcHNlIHNpemUgdG8gbGVzcyB0aGFuIHRoZSBwbGFjZWhvbGRlclxuXHRzdHlsZTogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsIC8vIGNzcyBzdHlsZXMgZm9yIHRoZSBvdXRlciBlbGVtZW50XG5cdHZhbHVlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmFueSAvLyBmaWVsZCB2YWx1ZVxufTtcbkF1dG9zaXplSW5wdXQuZGVmYXVsdFByb3BzID0ge1xuXHRtaW5XaWR0aDogMSxcblx0aW5qZWN0U3R5bGVzOiB0cnVlXG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBBdXRvc2l6ZUlucHV0OyIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZpbmRUYWJiYWJsZURlc2NlbmRhbnRzO1xuLyohXG4gKiBBZGFwdGVkIGZyb20galF1ZXJ5IFVJIGNvcmVcbiAqXG4gKiBodHRwOi8vanF1ZXJ5dWkuY29tXG4gKlxuICogQ29weXJpZ2h0IDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2NhdGVnb3J5L3VpLWNvcmUvXG4gKi9cblxudmFyIHRhYmJhYmxlTm9kZSA9IC9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdC87XG5cbmZ1bmN0aW9uIGhpZGVzQ29udGVudHMoZWxlbWVudCkge1xuICB2YXIgemVyb1NpemUgPSBlbGVtZW50Lm9mZnNldFdpZHRoIDw9IDAgJiYgZWxlbWVudC5vZmZzZXRIZWlnaHQgPD0gMDtcblxuICAvLyBJZiB0aGUgbm9kZSBpcyBlbXB0eSwgdGhpcyBpcyBnb29kIGVub3VnaFxuICBpZiAoemVyb1NpemUgJiYgIWVsZW1lbnQuaW5uZXJIVE1MKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBPdGhlcndpc2Ugd2UgbmVlZCB0byBjaGVjayBzb21lIHN0eWxlc1xuICB2YXIgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcbiAgcmV0dXJuIHplcm9TaXplID8gc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShcIm92ZXJmbG93XCIpICE9PSBcInZpc2libGVcIiB8fFxuICAvLyBpZiAnb3ZlcmZsb3c6IHZpc2libGUnIHNldCwgY2hlY2sgaWYgdGhlcmUgaXMgYWN0dWFsbHkgYW55IG92ZXJmbG93XG4gIGVsZW1lbnQuc2Nyb2xsV2lkdGggPD0gMCAmJiBlbGVtZW50LnNjcm9sbEhlaWdodCA8PSAwIDogc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShcImRpc3BsYXlcIikgPT0gXCJub25lXCI7XG59XG5cbmZ1bmN0aW9uIHZpc2libGUoZWxlbWVudCkge1xuICB2YXIgcGFyZW50RWxlbWVudCA9IGVsZW1lbnQ7XG4gIHdoaWxlIChwYXJlbnRFbGVtZW50KSB7XG4gICAgaWYgKHBhcmVudEVsZW1lbnQgPT09IGRvY3VtZW50LmJvZHkpIGJyZWFrO1xuICAgIGlmIChoaWRlc0NvbnRlbnRzKHBhcmVudEVsZW1lbnQpKSByZXR1cm4gZmFsc2U7XG4gICAgcGFyZW50RWxlbWVudCA9IHBhcmVudEVsZW1lbnQucGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZm9jdXNhYmxlKGVsZW1lbnQsIGlzVGFiSW5kZXhOb3ROYU4pIHtcbiAgdmFyIG5vZGVOYW1lID0gZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuICB2YXIgcmVzID0gdGFiYmFibGVOb2RlLnRlc3Qobm9kZU5hbWUpICYmICFlbGVtZW50LmRpc2FibGVkIHx8IChub2RlTmFtZSA9PT0gXCJhXCIgPyBlbGVtZW50LmhyZWYgfHwgaXNUYWJJbmRleE5vdE5hTiA6IGlzVGFiSW5kZXhOb3ROYU4pO1xuICByZXR1cm4gcmVzICYmIHZpc2libGUoZWxlbWVudCk7XG59XG5cbmZ1bmN0aW9uIHRhYmJhYmxlKGVsZW1lbnQpIHtcbiAgdmFyIHRhYkluZGV4ID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoXCJ0YWJpbmRleFwiKTtcbiAgaWYgKHRhYkluZGV4ID09PSBudWxsKSB0YWJJbmRleCA9IHVuZGVmaW5lZDtcbiAgdmFyIGlzVGFiSW5kZXhOYU4gPSBpc05hTih0YWJJbmRleCk7XG4gIHJldHVybiAoaXNUYWJJbmRleE5hTiB8fCB0YWJJbmRleCA+PSAwKSAmJiBmb2N1c2FibGUoZWxlbWVudCwgIWlzVGFiSW5kZXhOYU4pO1xufVxuXG5mdW5jdGlvbiBmaW5kVGFiYmFibGVEZXNjZW5kYW50cyhlbGVtZW50KSB7XG4gIHJldHVybiBbXS5zbGljZS5jYWxsKGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChcIipcIiksIDApLmZpbHRlcih0YWJiYWJsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hc3NlcnROb2RlTGlzdCA9IGFzc2VydE5vZGVMaXN0O1xuZXhwb3J0cy5zZXRFbGVtZW50ID0gc2V0RWxlbWVudDtcbmV4cG9ydHMudmFsaWRhdGVFbGVtZW50ID0gdmFsaWRhdGVFbGVtZW50O1xuZXhwb3J0cy5oaWRlID0gaGlkZTtcbmV4cG9ydHMuc2hvdyA9IHNob3c7XG5leHBvcnRzLmRvY3VtZW50Tm90UmVhZHlPclNTUlRlc3RpbmcgPSBkb2N1bWVudE5vdFJlYWR5T3JTU1JUZXN0aW5nO1xuZXhwb3J0cy5yZXNldEZvclRlc3RpbmcgPSByZXNldEZvclRlc3Rpbmc7XG5cbnZhciBfd2FybmluZyA9IHJlcXVpcmUoXCJ3YXJuaW5nXCIpO1xuXG52YXIgX3dhcm5pbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd2FybmluZyk7XG5cbnZhciBfc2FmZUhUTUxFbGVtZW50ID0gcmVxdWlyZShcIi4vc2FmZUhUTUxFbGVtZW50XCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgZ2xvYmFsRWxlbWVudCA9IG51bGw7XG5cbmZ1bmN0aW9uIGFzc2VydE5vZGVMaXN0KG5vZGVMaXN0LCBzZWxlY3Rvcikge1xuICBpZiAoIW5vZGVMaXN0IHx8ICFub2RlTGlzdC5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJyZWFjdC1tb2RhbDogTm8gZWxlbWVudHMgd2VyZSBmb3VuZCBmb3Igc2VsZWN0b3IgXCIgKyBzZWxlY3RvciArIFwiLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRFbGVtZW50KGVsZW1lbnQpIHtcbiAgdmFyIHVzZUVsZW1lbnQgPSBlbGVtZW50O1xuICBpZiAodHlwZW9mIHVzZUVsZW1lbnQgPT09IFwic3RyaW5nXCIgJiYgX3NhZmVIVE1MRWxlbWVudC5jYW5Vc2VET00pIHtcbiAgICB2YXIgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHVzZUVsZW1lbnQpO1xuICAgIGFzc2VydE5vZGVMaXN0KGVsLCB1c2VFbGVtZW50KTtcbiAgICB1c2VFbGVtZW50ID0gXCJsZW5ndGhcIiBpbiBlbCA/IGVsWzBdIDogZWw7XG4gIH1cbiAgZ2xvYmFsRWxlbWVudCA9IHVzZUVsZW1lbnQgfHwgZ2xvYmFsRWxlbWVudDtcbiAgcmV0dXJuIGdsb2JhbEVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRWxlbWVudChhcHBFbGVtZW50KSB7XG4gIGlmICghYXBwRWxlbWVudCAmJiAhZ2xvYmFsRWxlbWVudCkge1xuICAgICgwLCBfd2FybmluZzIuZGVmYXVsdCkoZmFsc2UsIFtcInJlYWN0LW1vZGFsOiBBcHAgZWxlbWVudCBpcyBub3QgZGVmaW5lZC5cIiwgXCJQbGVhc2UgdXNlIGBNb2RhbC5zZXRBcHBFbGVtZW50KGVsKWAgb3Igc2V0IGBhcHBFbGVtZW50PXtlbH1gLlwiLCBcIlRoaXMgaXMgbmVlZGVkIHNvIHNjcmVlbiByZWFkZXJzIGRvbid0IHNlZSBtYWluIGNvbnRlbnRcIiwgXCJ3aGVuIG1vZGFsIGlzIG9wZW5lZC4gSXQgaXMgbm90IHJlY29tbWVuZGVkLCBidXQgeW91IGNhbiBvcHQtb3V0XCIsIFwiYnkgc2V0dGluZyBgYXJpYUhpZGVBcHA9e2ZhbHNlfWAuXCJdLmpvaW4oXCIgXCIpKTtcblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBoaWRlKGFwcEVsZW1lbnQpIHtcbiAgaWYgKHZhbGlkYXRlRWxlbWVudChhcHBFbGVtZW50KSkge1xuICAgIChhcHBFbGVtZW50IHx8IGdsb2JhbEVsZW1lbnQpLnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsIFwidHJ1ZVwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzaG93KGFwcEVsZW1lbnQpIHtcbiAgaWYgKHZhbGlkYXRlRWxlbWVudChhcHBFbGVtZW50KSkge1xuICAgIChhcHBFbGVtZW50IHx8IGdsb2JhbEVsZW1lbnQpLnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRvY3VtZW50Tm90UmVhZHlPclNTUlRlc3RpbmcoKSB7XG4gIGdsb2JhbEVsZW1lbnQgPSBudWxsO1xufVxuXG5mdW5jdGlvbiByZXNldEZvclRlc3RpbmcoKSB7XG4gIGdsb2JhbEVsZW1lbnQgPSBudWxsO1xufSIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG4vLyBUcmFja3MgcG9ydGFscyB0aGF0IGFyZSBvcGVuIGFuZCBlbWl0cyBldmVudHMgdG8gc3Vic2NyaWJlcnNcblxudmFyIFBvcnRhbE9wZW5JbnN0YW5jZXMgPSBmdW5jdGlvbiBQb3J0YWxPcGVuSW5zdGFuY2VzKCkge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQb3J0YWxPcGVuSW5zdGFuY2VzKTtcblxuICB0aGlzLnJlZ2lzdGVyID0gZnVuY3Rpb24gKG9wZW5JbnN0YW5jZSkge1xuICAgIGlmIChfdGhpcy5vcGVuSW5zdGFuY2VzLmluZGV4T2Yob3Blbkluc3RhbmNlKSAhPT0gLTEpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKFwiUmVhY3QtTW9kYWw6IENhbm5vdCByZWdpc3RlciBtb2RhbCBpbnN0YW5jZSB0aGF0J3MgYWxyZWFkeSBvcGVuXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBfdGhpcy5vcGVuSW5zdGFuY2VzLnB1c2gob3Blbkluc3RhbmNlKTtcbiAgICBfdGhpcy5lbWl0KFwicmVnaXN0ZXJcIik7XG4gIH07XG5cbiAgdGhpcy5kZXJlZ2lzdGVyID0gZnVuY3Rpb24gKG9wZW5JbnN0YW5jZSkge1xuICAgIHZhciBpbmRleCA9IF90aGlzLm9wZW5JbnN0YW5jZXMuaW5kZXhPZihvcGVuSW5zdGFuY2UpO1xuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKFwiUmVhY3QtTW9kYWw6IFVuYWJsZSB0byBkZXJlZ2lzdGVyIFwiICsgb3Blbkluc3RhbmNlICsgXCIgYXMgXCIgKyBcIml0IHdhcyBuZXZlciByZWdpc3RlcmVkXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBfdGhpcy5vcGVuSW5zdGFuY2VzLnNwbGljZShpbmRleCwgMSk7XG4gICAgX3RoaXMuZW1pdChcImRlcmVnaXN0ZXJcIik7XG4gIH07XG5cbiAgdGhpcy5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICBfdGhpcy5zdWJzY3JpYmVycy5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcblxuICB0aGlzLmVtaXQgPSBmdW5jdGlvbiAoZXZlbnRUeXBlKSB7XG4gICAgX3RoaXMuc3Vic2NyaWJlcnMuZm9yRWFjaChmdW5jdGlvbiAoc3Vic2NyaWJlcikge1xuICAgICAgcmV0dXJuIHN1YnNjcmliZXIoZXZlbnRUeXBlLFxuICAgICAgLy8gc2hhbGxvdyBjb3B5IHRvIGF2b2lkIGFjY2lkZW50YWwgbXV0YXRpb25cbiAgICAgIF90aGlzLm9wZW5JbnN0YW5jZXMuc2xpY2UoKSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdGhpcy5vcGVuSW5zdGFuY2VzID0gW107XG4gIHRoaXMuc3Vic2NyaWJlcnMgPSBbXTtcbn07XG5cbnZhciBwb3J0YWxPcGVuSW5zdGFuY2VzID0gbmV3IFBvcnRhbE9wZW5JbnN0YW5jZXMoKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gcG9ydGFsT3Blbkluc3RhbmNlcztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfTW9kYWwgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL01vZGFsXCIpO1xuXG52YXIgX01vZGFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01vZGFsKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX01vZGFsMi5kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9yZWFjdERvbSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0LWRvbVwiKSk7XG5cbnZhciBfY2xhc3NuYW1lcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImNsYXNzbmFtZXNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpIHsgcmV0dXJuIGNhY2hlOyB9OyByZXR1cm4gY2FjaGU7IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7IGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IF90eXBlb2Yob2JqKSAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09ialtcImRlZmF1bHRcIl0gPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbnZhciBERUZBVUxUX1BMQUNFSE9MREVSX1NUUklORyA9ICdTZWxlY3QuLi4nO1xuXG52YXIgRHJvcGRvd24gPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKERyb3Bkb3duLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBEcm9wZG93bihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEcm9wZG93bik7XG5cbiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihEcm9wZG93bikuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgc2VsZWN0ZWQ6IF90aGlzLnBhcnNlVmFsdWUocHJvcHMudmFsdWUsIHByb3BzLm9wdGlvbnMpIHx8IHtcbiAgICAgICAgbGFiZWw6IHR5cGVvZiBwcm9wcy5wbGFjZWhvbGRlciA9PT0gJ3VuZGVmaW5lZCcgPyBERUZBVUxUX1BMQUNFSE9MREVSX1NUUklORyA6IHByb3BzLnBsYWNlaG9sZGVyLFxuICAgICAgICB2YWx1ZTogJydcbiAgICAgIH0sXG4gICAgICBpc09wZW46IGZhbHNlXG4gICAgfTtcbiAgICBfdGhpcy5tb3VudGVkID0gdHJ1ZTtcbiAgICBfdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrID0gX3RoaXMuaGFuZGxlRG9jdW1lbnRDbGljay5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5maXJlQ2hhbmdlRXZlbnQgPSBfdGhpcy5maXJlQ2hhbmdlRXZlbnQuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKERyb3Bkb3duLCBbe1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV3UHJvcHMpIHtcbiAgICAgIGlmIChuZXdQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLnBhcnNlVmFsdWUobmV3UHJvcHMudmFsdWUsIG5ld1Byb3BzLm9wdGlvbnMpO1xuXG4gICAgICAgIGlmIChzZWxlY3RlZCAhPT0gdGhpcy5zdGF0ZS5zZWxlY3RlZCkge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2VsZWN0ZWQ6IHNlbGVjdGVkXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHNlbGVjdGVkOiB7XG4gICAgICAgICAgICBsYWJlbDogdHlwZW9mIG5ld1Byb3BzLnBsYWNlaG9sZGVyID09PSAndW5kZWZpbmVkJyA/IERFRkFVTFRfUExBQ0VIT0xERVJfU1RSSU5HIDogbmV3UHJvcHMucGxhY2Vob2xkZXIsXG4gICAgICAgICAgICB2YWx1ZTogJydcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrLCBmYWxzZSk7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuaGFuZGxlRG9jdW1lbnRDbGljaywgZmFsc2UpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMubW91bnRlZCA9IGZhbHNlO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZURvY3VtZW50Q2xpY2ssIGZhbHNlKTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5oYW5kbGVEb2N1bWVudENsaWNrLCBmYWxzZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZU1vdXNlRG93blwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVNb3VzZURvd24oZXZlbnQpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLm9uRm9jdXMgJiYgdHlwZW9mIHRoaXMucHJvcHMub25Gb2N1cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aGlzLnByb3BzLm9uRm9jdXModGhpcy5zdGF0ZS5pc09wZW4pO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ21vdXNlZG93bicgJiYgZXZlbnQuYnV0dG9uICE9PSAwKSByZXR1cm47XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGlmICghdGhpcy5wcm9wcy5kaXNhYmxlZCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBpc09wZW46ICF0aGlzLnN0YXRlLmlzT3BlblxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicGFyc2VWYWx1ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYXJzZVZhbHVlKHZhbHVlLCBvcHRpb25zKSB7XG4gICAgICB2YXIgb3B0aW9uO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbnVtID0gb3B0aW9ucy5sZW5ndGg7IGkgPCBudW07IGkrKykge1xuICAgICAgICAgIGlmIChvcHRpb25zW2ldLnR5cGUgPT09ICdncm91cCcpIHtcbiAgICAgICAgICAgIHZhciBtYXRjaCA9IG9wdGlvbnNbaV0uaXRlbXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgICAgICAgIHJldHVybiBpdGVtLnZhbHVlID09PSB2YWx1ZTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIG9wdGlvbiA9IG1hdGNoWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnNbaV0udmFsdWUgIT09ICd1bmRlZmluZWQnICYmIG9wdGlvbnNbaV0udmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICBvcHRpb24gPSBvcHRpb25zW2ldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gb3B0aW9uIHx8IHZhbHVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXRWYWx1ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSwgbGFiZWwpIHtcbiAgICAgIHZhciBuZXdTdGF0ZSA9IHtcbiAgICAgICAgc2VsZWN0ZWQ6IHtcbiAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgbGFiZWw6IGxhYmVsXG4gICAgICAgIH0sXG4gICAgICAgIGlzT3BlbjogZmFsc2VcbiAgICAgIH07XG4gICAgICB0aGlzLmZpcmVDaGFuZ2VFdmVudChuZXdTdGF0ZSk7XG4gICAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZmlyZUNoYW5nZUV2ZW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZpcmVDaGFuZ2VFdmVudChuZXdTdGF0ZSkge1xuICAgICAgaWYgKG5ld1N0YXRlLnNlbGVjdGVkICE9PSB0aGlzLnN0YXRlLnNlbGVjdGVkICYmIHRoaXMucHJvcHMub25DaGFuZ2UpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZShuZXdTdGF0ZS5zZWxlY3RlZCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlck9wdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJPcHRpb24ob3B0aW9uKSB7XG4gICAgICB2YXIgX2NsYXNzZXM7XG5cbiAgICAgIHZhciB2YWx1ZSA9IG9wdGlvbi52YWx1ZTtcblxuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmFsdWUgPSBvcHRpb24ubGFiZWwgfHwgb3B0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgbGFiZWwgPSBvcHRpb24ubGFiZWwgfHwgb3B0aW9uLnZhbHVlIHx8IG9wdGlvbjtcbiAgICAgIHZhciBpc1NlbGVjdGVkID0gdmFsdWUgPT09IHRoaXMuc3RhdGUuc2VsZWN0ZWQudmFsdWUgfHwgdmFsdWUgPT09IHRoaXMuc3RhdGUuc2VsZWN0ZWQ7XG4gICAgICB2YXIgY2xhc3NlcyA9IChfY2xhc3NlcyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzZXMsIFwiXCIuY29uY2F0KHRoaXMucHJvcHMuYmFzZUNsYXNzTmFtZSwgXCItb3B0aW9uXCIpLCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc2VzLCBvcHRpb24uY2xhc3NOYW1lLCAhIW9wdGlvbi5jbGFzc05hbWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzZXMsICdpcy1zZWxlY3RlZCcsIGlzU2VsZWN0ZWQpLCBfY2xhc3Nlcyk7XG4gICAgICB2YXIgb3B0aW9uQ2xhc3MgPSAoMCwgX2NsYXNzbmFtZXNbXCJkZWZhdWx0XCJdKShjbGFzc2VzKTtcbiAgICAgIHJldHVybiBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBrZXk6IHZhbHVlLFxuICAgICAgICBjbGFzc05hbWU6IG9wdGlvbkNsYXNzLFxuICAgICAgICBvbk1vdXNlRG93bjogdGhpcy5zZXRWYWx1ZS5iaW5kKHRoaXMsIHZhbHVlLCBsYWJlbCksXG4gICAgICAgIG9uQ2xpY2s6IHRoaXMuc2V0VmFsdWUuYmluZCh0aGlzLCB2YWx1ZSwgbGFiZWwpLFxuICAgICAgICByb2xlOiBcIm9wdGlvblwiLFxuICAgICAgICBcImFyaWEtc2VsZWN0ZWRcIjogaXNTZWxlY3RlZCA/ICd0cnVlJyA6ICdmYWxzZSdcbiAgICAgIH0sIGxhYmVsKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYnVpbGRNZW51XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJ1aWxkTWVudSgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIG9wdGlvbnMgPSBfdGhpcyRwcm9wcy5vcHRpb25zLFxuICAgICAgICAgIGJhc2VDbGFzc05hbWUgPSBfdGhpcyRwcm9wcy5iYXNlQ2xhc3NOYW1lO1xuICAgICAgdmFyIG9wcyA9IG9wdGlvbnMubWFwKGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICAgICAgaWYgKG9wdGlvbi50eXBlID09PSAnZ3JvdXAnKSB7XG4gICAgICAgICAgdmFyIGdyb3VwVGl0bGUgPSBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIi10aXRsZVwiKVxuICAgICAgICAgIH0sIG9wdGlvbi5uYW1lKTtcblxuICAgICAgICAgIHZhciBfb3B0aW9ucyA9IG9wdGlvbi5pdGVtcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIucmVuZGVyT3B0aW9uKGl0ZW0pO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcmV0dXJuIF9yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KGJhc2VDbGFzc05hbWUsIFwiLWdyb3VwXCIpLFxuICAgICAgICAgICAga2V5OiBvcHRpb24ubmFtZSxcbiAgICAgICAgICAgIHJvbGU6IFwibGlzdGJveFwiLFxuICAgICAgICAgICAgdGFiSW5kZXg6IFwiLTFcIlxuICAgICAgICAgIH0sIGdyb3VwVGl0bGUsIF9vcHRpb25zKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnJlbmRlck9wdGlvbihvcHRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBvcHMubGVuZ3RoID8gb3BzIDogX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIi1ub3Jlc3VsdHNcIilcbiAgICAgIH0sIFwiTm8gb3B0aW9ucyBmb3VuZFwiKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFuZGxlRG9jdW1lbnRDbGlja1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVEb2N1bWVudENsaWNrKGV2ZW50KSB7XG4gICAgICBpZiAodGhpcy5tb3VudGVkKSB7XG4gICAgICAgIGlmICghX3JlYWN0RG9tW1wiZGVmYXVsdFwiXS5maW5kRE9NTm9kZSh0aGlzKS5jb250YWlucyhldmVudC50YXJnZXQpKSB7XG4gICAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNPcGVuKSB7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgaXNPcGVuOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzVmFsdWVTZWxlY3RlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1ZhbHVlU2VsZWN0ZWQoKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHRoaXMuc3RhdGUuc2VsZWN0ZWQgPT09ICdzdHJpbmcnIHx8IHRoaXMuc3RhdGUuc2VsZWN0ZWQudmFsdWUgIT09ICcnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF9jbGFzc05hbWVzLCBfY2xhc3NOYW1lczIsIF9jbGFzc05hbWVzMywgX2NsYXNzTmFtZXM0LCBfY2xhc3NOYW1lczU7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGJhc2VDbGFzc05hbWUgPSBfdGhpcyRwcm9wczIuYmFzZUNsYXNzTmFtZSxcbiAgICAgICAgICBjb250cm9sQ2xhc3NOYW1lID0gX3RoaXMkcHJvcHMyLmNvbnRyb2xDbGFzc05hbWUsXG4gICAgICAgICAgcGxhY2Vob2xkZXJDbGFzc05hbWUgPSBfdGhpcyRwcm9wczIucGxhY2Vob2xkZXJDbGFzc05hbWUsXG4gICAgICAgICAgbWVudUNsYXNzTmFtZSA9IF90aGlzJHByb3BzMi5tZW51Q2xhc3NOYW1lLFxuICAgICAgICAgIGFycm93Q2xhc3NOYW1lID0gX3RoaXMkcHJvcHMyLmFycm93Q2xhc3NOYW1lLFxuICAgICAgICAgIGFycm93Q2xvc2VkID0gX3RoaXMkcHJvcHMyLmFycm93Q2xvc2VkLFxuICAgICAgICAgIGFycm93T3BlbiA9IF90aGlzJHByb3BzMi5hcnJvd09wZW4sXG4gICAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMyLmNsYXNzTmFtZTtcbiAgICAgIHZhciBkaXNhYmxlZENsYXNzID0gdGhpcy5wcm9wcy5kaXNhYmxlZCA/ICdEcm9wZG93bi1kaXNhYmxlZCcgOiAnJztcbiAgICAgIHZhciBwbGFjZUhvbGRlclZhbHVlID0gdHlwZW9mIHRoaXMuc3RhdGUuc2VsZWN0ZWQgPT09ICdzdHJpbmcnID8gdGhpcy5zdGF0ZS5zZWxlY3RlZCA6IHRoaXMuc3RhdGUuc2VsZWN0ZWQubGFiZWw7XG4gICAgICB2YXIgZHJvcGRvd25DbGFzcyA9ICgwLCBfY2xhc3NuYW1lc1tcImRlZmF1bHRcIl0pKChfY2xhc3NOYW1lcyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIFwiXCIuY29uY2F0KGJhc2VDbGFzc05hbWUsIFwiLXJvb3RcIiksIHRydWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsIGNsYXNzTmFtZSwgISFjbGFzc05hbWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMsICdpcy1vcGVuJywgdGhpcy5zdGF0ZS5pc09wZW4pLCBfY2xhc3NOYW1lcykpO1xuICAgICAgdmFyIGNvbnRyb2xDbGFzcyA9ICgwLCBfY2xhc3NuYW1lc1tcImRlZmF1bHRcIl0pKChfY2xhc3NOYW1lczIgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzMiwgXCJcIi5jb25jYXQoYmFzZUNsYXNzTmFtZSwgXCItY29udHJvbFwiKSwgdHJ1ZSksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lczIsIGNvbnRyb2xDbGFzc05hbWUsICEhY29udHJvbENsYXNzTmFtZSksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lczIsIGRpc2FibGVkQ2xhc3MsICEhZGlzYWJsZWRDbGFzcyksIF9jbGFzc05hbWVzMikpO1xuICAgICAgdmFyIHBsYWNlaG9sZGVyQ2xhc3MgPSAoMCwgX2NsYXNzbmFtZXNbXCJkZWZhdWx0XCJdKSgoX2NsYXNzTmFtZXMzID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lczMsIFwiXCIuY29uY2F0KGJhc2VDbGFzc05hbWUsIFwiLXBsYWNlaG9sZGVyXCIpLCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzMywgcGxhY2Vob2xkZXJDbGFzc05hbWUsICEhcGxhY2Vob2xkZXJDbGFzc05hbWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXMzLCAnaXMtc2VsZWN0ZWQnLCB0aGlzLmlzVmFsdWVTZWxlY3RlZCgpKSwgX2NsYXNzTmFtZXMzKSk7XG4gICAgICB2YXIgbWVudUNsYXNzID0gKDAsIF9jbGFzc25hbWVzW1wiZGVmYXVsdFwiXSkoKF9jbGFzc05hbWVzNCA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXM0LCBcIlwiLmNvbmNhdChiYXNlQ2xhc3NOYW1lLCBcIi1tZW51XCIpLCB0cnVlKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzNCwgbWVudUNsYXNzTmFtZSwgISFtZW51Q2xhc3NOYW1lKSwgX2NsYXNzTmFtZXM0KSk7XG4gICAgICB2YXIgYXJyb3dDbGFzcyA9ICgwLCBfY2xhc3NuYW1lc1tcImRlZmF1bHRcIl0pKChfY2xhc3NOYW1lczUgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzNSwgXCJcIi5jb25jYXQoYmFzZUNsYXNzTmFtZSwgXCItYXJyb3dcIiksIHRydWUpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTmFtZXM1LCBhcnJvd0NsYXNzTmFtZSwgISFhcnJvd0NsYXNzTmFtZSksIF9jbGFzc05hbWVzNSkpO1xuXG4gICAgICB2YXIgdmFsdWUgPSBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IHBsYWNlaG9sZGVyQ2xhc3NcbiAgICAgIH0sIHBsYWNlSG9sZGVyVmFsdWUpO1xuXG4gICAgICB2YXIgbWVudSA9IHRoaXMuc3RhdGUuaXNPcGVuID8gX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBtZW51Q2xhc3MsXG4gICAgICAgIFwiYXJpYS1leHBhbmRlZFwiOiBcInRydWVcIlxuICAgICAgfSwgdGhpcy5idWlsZE1lbnUoKSkgOiBudWxsO1xuICAgICAgcmV0dXJuIF9yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogZHJvcGRvd25DbGFzc1xuICAgICAgfSwgX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBjb250cm9sQ2xhc3MsXG4gICAgICAgIG9uTW91c2VEb3duOiB0aGlzLmhhbmRsZU1vdXNlRG93bi5iaW5kKHRoaXMpLFxuICAgICAgICBvblRvdWNoRW5kOiB0aGlzLmhhbmRsZU1vdXNlRG93bi5iaW5kKHRoaXMpLFxuICAgICAgICBcImFyaWEtaGFzcG9wdXBcIjogXCJsaXN0Ym94XCJcbiAgICAgIH0sIHZhbHVlLCBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiXCIuY29uY2F0KGJhc2VDbGFzc05hbWUsIFwiLWFycm93LXdyYXBwZXJcIilcbiAgICAgIH0sIGFycm93T3BlbiAmJiBhcnJvd0Nsb3NlZCA/IHRoaXMuc3RhdGUuaXNPcGVuID8gYXJyb3dPcGVuIDogYXJyb3dDbG9zZWQgOiBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBhcnJvd0NsYXNzXG4gICAgICB9KSkpLCBtZW51KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRHJvcGRvd247XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5Ecm9wZG93bi5kZWZhdWx0UHJvcHMgPSB7XG4gIGJhc2VDbGFzc05hbWU6ICdEcm9wZG93bidcbn07XG52YXIgX2RlZmF1bHQgPSBEcm9wZG93bjtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7XG4iLCJmdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTtcbiAgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7XG4gIHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2luaGVyaXRzTG9vc2U7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyx6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOlxuNjAxMTYsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQyhhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEcoKXt9Ry5wcm90b3R5cGU9Ri5wcm90b3R5cGU7ZnVuY3Rpb24gSChhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfXZhciBJPUgucHJvdG90eXBlPW5ldyBHO0kuY29uc3RydWN0b3I9SDtsKEksRi5wcm90b3R5cGUpO0kuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbT0wO208ZjttKyspaFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrVShkLGspO2crPVQoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1CJiZhW0JdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGs9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBhYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9YKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPU4oYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBYKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsZSxkKTtWKGEsYWEsYik7UyhiKX12YXIgWT17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBaKCl7dmFyIGE9WS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEMoMzIxKSk7cmV0dXJuIGF9XG52YXIgYmE9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6WSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtYKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGMpO1YoYSxXLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107WChhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKEMoMTQzKSk7cmV0dXJuIGF9fTtcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihDKDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUsuY2FsbChiLGgpJiYhTC5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBtPTA7bTxoO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxcbmtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmt9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjEzLjFcIjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiB1KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifWlmKCFhYSl0aHJvdyBFcnJvcih1KDIyNykpO1xuZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGspe2RhPSExO2VhPW51bGw7YmEuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsayl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGw9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHRocm93IEVycm9yKHUoMTk4KSk7ZmF8fChmYT0hMCxoYT1sKX19dmFyIGxhPW51bGwsbWE9bnVsbCxuYT1udWxsO1xuZnVuY3Rpb24gb2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PW5hKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9dmFyIHBhPW51bGwscWE9e307XG5mdW5jdGlvbiByYSgpe2lmKHBhKWZvcih2YXIgYSBpbiBxYSl7dmFyIGI9cWFbYV0sYz1wYS5pbmRleE9mKGEpO2lmKCEoLTE8YykpdGhyb3cgRXJyb3IodSg5NixhKSk7aWYoIXNhW2NdKXtpZighYi5leHRyYWN0RXZlbnRzKXRocm93IEVycm9yKHUoOTcsYSkpO3NhW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7aWYodGEuaGFzT3duUHJvcGVydHkoaCkpdGhyb3cgRXJyb3IodSg5OSxoKSk7dGFbaF09Zjt2YXIgaz1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGspe2ZvcihlIGluIGspay5oYXNPd25Qcm9wZXJ0eShlKSYmdWEoa1tlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHVhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7aWYoIWUpdGhyb3cgRXJyb3IodSg5OCxkLGEpKTt9fX19XG5mdW5jdGlvbiB1YShhLGIsYyl7aWYodmFbYV0pdGhyb3cgRXJyb3IodSgxMDAsYSkpO3ZhW2FdPWI7d2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgc2E9W10sdGE9e30sdmE9e30sd2E9e307ZnVuY3Rpb24geGEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107aWYoIXFhLmhhc093blByb3BlcnR5KGMpfHxxYVtjXSE9PWQpe2lmKHFhW2NdKXRocm93IEVycm9yKHUoMTAyLGMpKTtxYVtjXT1kO2I9ITB9fWImJnJhKCl9dmFyIHlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSx6YT1udWxsLEFhPW51bGwsQmE9bnVsbDtcbmZ1bmN0aW9uIENhKGEpe2lmKGE9bWEoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB6YSl0aHJvdyBFcnJvcih1KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPWxhKGIpLHphKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIERhKGEpe0FhP0JhP0JhLnB1c2goYSk6QmE9W2FdOkFhPWF9ZnVuY3Rpb24gRWEoKXtpZihBYSl7dmFyIGE9QWEsYj1CYTtCYT1BYT1udWxsO0NhKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylDYShiW2FdKX19ZnVuY3Rpb24gRmEoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBHYShhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEhhKCl7fXZhciBJYT1GYSxKYT0hMSxLYT0hMTtmdW5jdGlvbiBMYSgpe2lmKG51bGwhPT1BYXx8bnVsbCE9PUJhKUhhKCksRWEoKX1cbmZ1bmN0aW9uIE1hKGEsYixjKXtpZihLYSlyZXR1cm4gYShiLGMpO0thPSEwO3RyeXtyZXR1cm4gSWEoYSxiLGMpfWZpbmFsbHl7S2E9ITEsTGEoKX19dmFyIE5hPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxPYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFBhPXt9LFFhPXt9O1xuZnVuY3Rpb24gUmEoYSl7aWYoT2EuY2FsbChRYSxhKSlyZXR1cm4hMDtpZihPYS5jYWxsKFBhLGEpKXJldHVybiExO2lmKE5hLnRlc3QoYSkpcmV0dXJuIFFhW2FdPSEwO1BhW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIFNhKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVGEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8U2EoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiB2KGEsYixjLGQsZSxmKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zn12YXIgQz17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDAsITEsYSxudWxsLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtDW2JdPW5ldyB2KGIsMSwhMSxhWzFdLG51bGwsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDIsITEsYSxudWxsLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDMsITAsYSxudWxsLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7Q1thXT1uZXcgdihhLDQsITEsYSxudWxsLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNiwhMSxhLG51bGwsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTt2YXIgVWE9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBWYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxcblZhKTtDW2JdPW5ldyB2KGIsMSwhMSxhLG51bGwsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UoVWEsVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbkMueGxpbmtIcmVmPW5ldyB2KFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCl9KTt2YXIgV2E9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoV2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7V2EuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZ1wiKXx8KFdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnPXtzdXNwZW5zZTpudWxsfSk7XG5mdW5jdGlvbiBYYShhLGIsYyxkKXt2YXIgZT1DLmhhc093blByb3BlcnR5KGIpP0NbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChUYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/UmEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciBZYT0vXiguKilbXFxcXFxcL10vLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixaYT1FP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLCRhPUU/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixhYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxiYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxjYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxkYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxlYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGZiPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxnYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixoYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxpYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOlxuNjAxMjAsamI9RT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxrYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGxiPUU/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLG1iPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBuYihhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9bWImJmFbbWJdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gb2IoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiBwYihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGFiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlICRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBjYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBiYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGhiOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIGliOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGViOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgZGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBnYjp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgamI6cmV0dXJuIHBiKGEudHlwZSk7Y2FzZSBsYjpyZXR1cm4gcGIoYS5yZW5kZXIpO2Nhc2Uga2I6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBwYihhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBxYihhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9cGIoYS50eXBlKTtjPW51bGw7ZCYmKGM9cGIoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShZYSxcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxuZnVuY3Rpb24gcmIoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHNiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiB0YihhKXt2YXIgYj1zYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24geGIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPXRiKGEpKX1mdW5jdGlvbiB5YihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9c2IoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiB6YihhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBBYihhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1yYihudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEJiKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmWGEoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIENiKGEsYil7QmIoYSxiKTt2YXIgYz1yYihiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9EYihhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZEYihhLGIudHlwZSxyYihiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEViKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBEYihhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gRmIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gR2IoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1GYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBIYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrcmIoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIEliKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih1KDkxKSk7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gSmIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IodSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHUoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpyYihjKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPXJiKGIudmFsdWUpLGQ9cmIoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBMYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBNYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBOYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIE9iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9OYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBQYixRYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1NYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtQYj1QYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtQYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1QYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBSYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifWZ1bmN0aW9uIFNiKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRiPXthbmltYXRpb25lbmQ6U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2IoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYihcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFViPXt9LFZiPXt9O1xueWEmJihWYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYi5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYi5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYi50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdiKGEpe2lmKFViW2FdKXJldHVybiBVYlthXTtpZighVGJbYV0pcmV0dXJuIGE7dmFyIGI9VGJbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmIpcmV0dXJuIFViW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGI9V2IoXCJhbmltYXRpb25lbmRcIiksWWI9V2IoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmI9V2IoXCJhbmltYXRpb25zdGFydFwiKSwkYj1XYihcInRyYW5zaXRpb25lbmRcIiksYWM9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJjPW5ldyAoXCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXApO2Z1bmN0aW9uIGNjKGEpe3ZhciBiPWJjLmdldChhKTt2b2lkIDA9PT1iJiYoYj1uZXcgTWFwLGJjLnNldChhLGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRjKGEpe3ZhciBiPWEsYz1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXthPWI7ZG8gYj1hLDAhPT0oYi5lZmZlY3RUYWcmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIGVjKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZmMoYSl7aWYoZGMoYSkhPT1hKXRocm93IEVycm9yKHUoMTg4KSk7fVxuZnVuY3Rpb24gZ2MoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9ZGMoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gZmMoZSksYTtpZihmPT09ZClyZXR1cm4gZmMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih1KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHUoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IodSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHUoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoYyhhKXthPWdjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gaWMoYSxiKXtpZihudWxsPT1iKXRocm93IEVycm9yKHUoMzApKTtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19ZnVuY3Rpb24gamMoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIGtjPW51bGw7XG5mdW5jdGlvbiBsYyhhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspb2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmb2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fWZ1bmN0aW9uIG1jKGEpe251bGwhPT1hJiYoa2M9aWMoa2MsYSkpO2E9a2M7a2M9bnVsbDtpZihhKXtqYyhhLGxjKTtpZihrYyl0aHJvdyBFcnJvcih1KDk1KSk7aWYoZmEpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fX1cbmZ1bmN0aW9uIG5jKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBvYyhhKXtpZigheWEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9dmFyIHBjPVtdO2Z1bmN0aW9uIHFjKGEpe2EudG9wTGV2ZWxUeXBlPW51bGw7YS5uYXRpdmVFdmVudD1udWxsO2EudGFyZ2V0SW5zdD1udWxsO2EuYW5jZXN0b3JzLmxlbmd0aD0wOzEwPnBjLmxlbmd0aCYmcGMucHVzaChhKX1cbmZ1bmN0aW9uIHJjKGEsYixjLGQpe2lmKHBjLmxlbmd0aCl7dmFyIGU9cGMucG9wKCk7ZS50b3BMZXZlbFR5cGU9YTtlLmV2ZW50U3lzdGVtRmxhZ3M9ZDtlLm5hdGl2ZUV2ZW50PWI7ZS50YXJnZXRJbnN0PWM7cmV0dXJuIGV9cmV0dXJue3RvcExldmVsVHlwZTphLGV2ZW50U3lzdGVtRmxhZ3M6ZCxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119fVxuZnVuY3Rpb24gc2MoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZD1jO2lmKDM9PT1kLnRhZylkPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZWxzZXtmb3IoO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mb31pZighZClicmVhaztiPWMudGFnOzUhPT1iJiY2IT09Ynx8YS5hbmNlc3RvcnMucHVzaChjKTtjPXRjKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPW5jKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7dmFyIGY9YS5uYXRpdmVFdmVudCxnPWEuZXZlbnRTeXN0ZW1GbGFnczswPT09YyYmKGd8PTY0KTtmb3IodmFyIGg9bnVsbCxrPTA7azxzYS5sZW5ndGg7aysrKXt2YXIgbD1zYVtrXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSxnKSkmJihoPVxuaWMoaCxsKSl9bWMoaCl9fWZ1bmN0aW9uIHVjKGEsYixjKXtpZighYy5oYXMoYSkpe3N3aXRjaChhKXtjYXNlIFwic2Nyb2xsXCI6dmMoYixcInNjcm9sbFwiLCEwKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOnZjKGIsXCJmb2N1c1wiLCEwKTt2YyhiLFwiYmx1clwiLCEwKTtjLnNldChcImJsdXJcIixudWxsKTtjLnNldChcImZvY3VzXCIsbnVsbCk7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOm9jKGEpJiZ2YyhiLGEsITApO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYy5pbmRleE9mKGEpJiZGKGEsYil9Yy5zZXQoYSxudWxsKX19XG52YXIgd2MseGMseWMsemM9ITEsQWM9W10sQmM9bnVsbCxDYz1udWxsLERjPW51bGwsRWM9bmV3IE1hcCxGYz1uZXcgTWFwLEdjPVtdLEhjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY2xvc2UgY2FuY2VsIGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIiksSWM9XCJmb2N1cyBibHVyIGRyYWdlbnRlciBkcmFnbGVhdmUgbW91c2VvdmVyIG1vdXNlb3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJvdXQgZ290cG9pbnRlcmNhcHR1cmUgbG9zdHBvaW50ZXJjYXB0dXJlXCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gSmMoYSxiKXt2YXIgYz1jYyhiKTtIYy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3VjKGEsYixjKX0pO0ljLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSl9ZnVuY3Rpb24gS2MoYSxiLGMsZCxlKXtyZXR1cm57YmxvY2tlZE9uOmEsdG9wTGV2ZWxUeXBlOmIsZXZlbnRTeXN0ZW1GbGFnczpjfDMyLG5hdGl2ZUV2ZW50OmUsY29udGFpbmVyOmR9fVxuZnVuY3Rpb24gTGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpCYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Q2M9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6RGM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOkVjLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOkZjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fWZ1bmN0aW9uIE1jKGEsYixjLGQsZSxmKXtpZihudWxsPT09YXx8YS5uYXRpdmVFdmVudCE9PWYpcmV0dXJuIGE9S2MoYixjLGQsZSxmKSxudWxsIT09YiYmKGI9TmMoYiksbnVsbCE9PWImJnhjKGIpKSxhO2EuZXZlbnRTeXN0ZW1GbGFnc3w9ZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJmb2N1c1wiOnJldHVybiBCYz1NYyhCYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gQ2M9TWMoQ2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIERjPU1jKERjLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7RWMuc2V0KGYsTWMoRWMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLEZjLnNldChmLE1jKEZjLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIFBjKGEpe3ZhciBiPXRjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9ZGMoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9ZWMoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe3ljKGMpfSk7cmV0dXJufX1lbHNlIGlmKDM9PT1iJiZjLnN0YXRlTm9kZS5oeWRyYXRlKXthLmJsb2NrZWRPbj0zPT09Yy50YWc/Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO3JldHVybn19YS5ibG9ja2VkT249bnVsbH1mdW5jdGlvbiBRYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7dmFyIGI9UmMoYS50b3BMZXZlbFR5cGUsYS5ldmVudFN5c3RlbUZsYWdzLGEuY29udGFpbmVyLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1iKXt2YXIgYz1OYyhiKTtudWxsIT09YyYmeGMoYyk7YS5ibG9ja2VkT249YjtyZXR1cm4hMX1yZXR1cm4hMH1cbmZ1bmN0aW9uIFNjKGEsYixjKXtRYyhhKSYmYy5kZWxldGUoYil9ZnVuY3Rpb24gVGMoKXtmb3IoemM9ITE7MDxBYy5sZW5ndGg7KXt2YXIgYT1BY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9TmMoYS5ibG9ja2VkT24pO251bGwhPT1hJiZ3YyhhKTticmVha312YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7bnVsbCE9PWI/YS5ibG9ja2VkT249YjpBYy5zaGlmdCgpfW51bGwhPT1CYyYmUWMoQmMpJiYoQmM9bnVsbCk7bnVsbCE9PUNjJiZRYyhDYykmJihDYz1udWxsKTtudWxsIT09RGMmJlFjKERjKSYmKERjPW51bGwpO0VjLmZvckVhY2goU2MpO0ZjLmZvckVhY2goU2MpfWZ1bmN0aW9uIFVjKGEsYil7YS5ibG9ja2VkT249PT1iJiYoYS5ibG9ja2VkT249bnVsbCx6Y3x8KHpjPSEwLHIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFRjKSkpfVxuZnVuY3Rpb24gVmMoYSl7ZnVuY3Rpb24gYihiKXtyZXR1cm4gVWMoYixhKX1pZigwPEFjLmxlbmd0aCl7VWMoQWNbMF0sYSk7Zm9yKHZhciBjPTE7YzxBYy5sZW5ndGg7YysrKXt2YXIgZD1BY1tjXTtkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKX19bnVsbCE9PUJjJiZVYyhCYyxhKTtudWxsIT09Q2MmJlVjKENjLGEpO251bGwhPT1EYyYmVWMoRGMsYSk7RWMuZm9yRWFjaChiKTtGYy5mb3JFYWNoKGIpO2ZvcihjPTA7YzxHYy5sZW5ndGg7YysrKWQ9R2NbY10sZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCk7Zm9yKDswPEdjLmxlbmd0aCYmKGM9R2NbMF0sbnVsbD09PWMuYmxvY2tlZE9uKTspUGMoYyksbnVsbD09PWMuYmxvY2tlZE9uJiZHYy5zaGlmdCgpfVxudmFyIFdjPXt9LFljPW5ldyBNYXAsWmM9bmV3IE1hcCwkYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixYYixcImFuaW1hdGlvbkVuZFwiLFliLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsWmIsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiLFwicGxheWluZ1wiLFwicGxheWluZ1wiLFwicHJvZ3Jlc3NcIixcInByb2dyZXNzXCIsXCJzZWVraW5nXCIsXG5cInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIiwkYixcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gYWQoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV0sZj1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtmPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpmLGNhcHR1cmVkOmYrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbZF0sZXZlbnRQcmlvcml0eTpifTtaYy5zZXQoZCxiKTtZYy5zZXQoZCxmKTtXY1tlXT1mfX1cbmFkKFwiYmx1ciBibHVyIGNhbmNlbCBjYW5jZWwgY2xpY2sgY2xpY2sgY2xvc2UgY2xvc2UgY29udGV4dG1lbnUgY29udGV4dE1lbnUgY29weSBjb3B5IGN1dCBjdXQgYXV4Y2xpY2sgYXV4Q2xpY2sgZGJsY2xpY2sgZG91YmxlQ2xpY2sgZHJhZ2VuZCBkcmFnRW5kIGRyYWdzdGFydCBkcmFnU3RhcnQgZHJvcCBkcm9wIGZvY3VzIGZvY3VzIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksMCk7XG5hZChcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTthZCgkYywyKTtmb3IodmFyIGJkPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxjZD0wO2NkPGJkLmxlbmd0aDtjZCsrKVpjLnNldChiZFtjZF0sMCk7XG52YXIgZGQ9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxlZD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxmZD0hMDtmdW5jdGlvbiBGKGEsYil7dmMoYixhLCExKX1mdW5jdGlvbiB2YyhhLGIsYyl7dmFyIGQ9WmMuZ2V0KGIpO3N3aXRjaCh2b2lkIDA9PT1kPzI6ZCl7Y2FzZSAwOmQ9Z2QuYmluZChudWxsLGIsMSxhKTticmVhaztjYXNlIDE6ZD1oZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2RlZmF1bHQ6ZD1pZC5iaW5kKG51bGwsYiwxLGEpfWM/YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMCk6YS5hZGRFdmVudExpc3RlbmVyKGIsZCwhMSl9ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7SmF8fEhhKCk7dmFyIGU9aWQsZj1KYTtKYT0hMDt0cnl7R2EoZSxhLGIsYyxkKX1maW5hbGx5eyhKYT1mKXx8TGEoKX19ZnVuY3Rpb24gaGQoYSxiLGMsZCl7ZWQoZGQsaWQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGlkKGEsYixjLGQpe2lmKGZkKWlmKDA8QWMubGVuZ3RoJiYtMTxIYy5pbmRleE9mKGEpKWE9S2MobnVsbCxhLGIsYyxkKSxBYy5wdXNoKGEpO2Vsc2V7dmFyIGU9UmMoYSxiLGMsZCk7aWYobnVsbD09PWUpTGMoYSxkKTtlbHNlIGlmKC0xPEhjLmluZGV4T2YoYSkpYT1LYyhlLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZSBpZighT2MoZSxhLGIsYyxkKSl7TGMoYSxkKTthPXJjKGEsZCxudWxsLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfX19fVxuZnVuY3Rpb24gUmMoYSxiLGMsZCl7Yz1uYyhkKTtjPXRjKGMpO2lmKG51bGwhPT1jKXt2YXIgZT1kYyhjKTtpZihudWxsPT09ZSljPW51bGw7ZWxzZXt2YXIgZj1lLnRhZztpZigxMz09PWYpe2M9ZWMoZSk7aWYobnVsbCE9PWMpcmV0dXJuIGM7Yz1udWxsfWVsc2UgaWYoMz09PWYpe2lmKGUuc3RhdGVOb2RlLmh5ZHJhdGUpcmV0dXJuIDM9PT1lLnRhZz9lLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7Yz1udWxsfWVsc2UgZSE9PWMmJihjPW51bGwpfX1hPXJjKGEsZCxjLGIpO3RyeXtNYShzYyxhKX1maW5hbGx5e3FjKGEpfXJldHVybiBudWxsfVxudmFyIGpkPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LGtkPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhqZCkuZm9yRWFjaChmdW5jdGlvbihhKXtrZC5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2pkW2JdPWpkW2FdfSl9KTtmdW5jdGlvbiBsZChhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8amQuaGFzT3duUHJvcGVydHkoYSkmJmpkW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG1kKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPWxkKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIG5kPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBvZChhLGIpe2lmKGIpe2lmKG5kW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IodSgxMzcsYSxcIlwiKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcih1KDYwKSk7aWYoIShcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcih1KDYyLFwiXCIpKTt9fVxuZnVuY3Rpb24gcGQoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBxZD1NYi5odG1sO2Z1bmN0aW9uIHJkKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPWNjKGEpO2I9d2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspdWMoYltkXSxhLGMpfWZ1bmN0aW9uIHNkKCl7fVxuZnVuY3Rpb24gdGQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIHVkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1mdW5jdGlvbiB2ZChhLGIpe3ZhciBjPXVkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPXVkKGMpfX1cbmZ1bmN0aW9uIHdkKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/d2QoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfWZ1bmN0aW9uIHhkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPXRkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPXRkKGEuZG9jdW1lbnQpfXJldHVybiBifVxuZnVuY3Rpb24geWQoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX12YXIgemQ9XCIkXCIsQWQ9XCIvJFwiLEJkPVwiJD9cIixDZD1cIiQhXCIsRGQ9bnVsbCxFZD1udWxsO2Z1bmN0aW9uIEZkKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIEdkKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgSGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsSWQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIEpkKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfVxuZnVuY3Rpb24gS2QoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09emR8fGM9PT1DZHx8Yz09PUJkKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZSBjPT09QWQmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciBMZD1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxNZD1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0xkLE5kPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrTGQsT2Q9XCJfX3JlYWN0Q29udGFpbmVyZSRcIitMZDtcbmZ1bmN0aW9uIHRjKGEpe3ZhciBiPWFbTWRdO2lmKGIpcmV0dXJuIGI7Zm9yKHZhciBjPWEucGFyZW50Tm9kZTtjOyl7aWYoYj1jW09kXXx8Y1tNZF0pe2M9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWIuY2hpbGR8fG51bGwhPT1jJiZudWxsIT09Yy5jaGlsZClmb3IoYT1LZChhKTtudWxsIT09YTspe2lmKGM9YVtNZF0pcmV0dXJuIGM7YT1LZChhKX1yZXR1cm4gYn1hPWM7Yz1hLnBhcmVudE5vZGV9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTmMoYSl7YT1hW01kXXx8YVtPZF07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnJiYxMyE9PWEudGFnJiYzIT09YS50YWc/bnVsbDphfWZ1bmN0aW9uIFBkKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0aHJvdyBFcnJvcih1KDMzKSk7fWZ1bmN0aW9uIFFkKGEpe3JldHVybiBhW05kXXx8bnVsbH1cbmZ1bmN0aW9uIFJkKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPWxhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYyl0aHJvdyBFcnJvcih1KDIzMSxcbmIsdHlwZW9mIGMpKTtyZXR1cm4gY31mdW5jdGlvbiBUZChhLGIsYyl7aWYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPWljKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPWljKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfWZ1bmN0aW9uIFVkKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9UmQoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVRkKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspVGQoY1tiXSxcImJ1YmJsZWRcIixhKX19XG5mdW5jdGlvbiBWZChhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1TZChhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFdkKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmVmQoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfWZ1bmN0aW9uIFhkKGEpe2pjKGEsVWQpfXZhciBZZD1udWxsLFpkPW51bGwsJGQ9bnVsbDtcbmZ1bmN0aW9uIGFlKCl7aWYoJGQpcmV0dXJuICRkO3ZhciBhLGI9WmQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gJGQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBiZSgpe3JldHVybiEwfWZ1bmN0aW9uIGNlKCl7cmV0dXJuITF9XG5mdW5jdGlvbiBHKGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9iZTpjZTt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWNlO3JldHVybiB0aGlzfVxubihHLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWJlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWJlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWJlfSxpc1BlcnNpc3RlbnQ6Y2UsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Y2U7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTtHLkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbkcuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7ZGUoYyk7cmV0dXJuIGN9O2RlKEcpO2Z1bmN0aW9uIGVlKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfVxuZnVuY3Rpb24gZmUoYSl7aWYoIShhIGluc3RhbmNlb2YgdGhpcykpdGhyb3cgRXJyb3IodSgyNzkpKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9ZnVuY3Rpb24gZGUoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9ZWU7YS5yZWxlYXNlPWZlfXZhciBnZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaGU9Ry5leHRlbmQoe2RhdGE6bnVsbH0pLGllPVs5LDEzLDI3LDMyXSxqZT15YSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csa2U9bnVsbDt5YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoa2U9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBsZT15YSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIWtlLG1lPXlhJiYoIWplfHxrZSYmODxrZSYmMTE+PWtlKSxuZT1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxvZT17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSxwZT0hMTtcbmZ1bmN0aW9uIHFlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09aWUuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiByZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBzZT0hMTtmdW5jdGlvbiB0ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcmUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3BlPSEwO3JldHVybiBuZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1uZSYmcGU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gdWUoYSxiKXtpZihzZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhamUmJnFlKGEsYik/KGE9YWUoKSwkZD1aZD1ZZD1udWxsLHNlPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBtZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgdmU9e2V2ZW50VHlwZXM6b2UsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZTtpZihqZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgZj1vZS5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6Zj1vZS5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmY9b2UuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1mPXZvaWQgMH1lbHNlIHNlP3FlKGEsYykmJihmPW9lLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGY9b2UuY29tcG9zaXRpb25TdGFydCk7Zj8obWUmJlwia29cIiE9PWMubG9jYWxlJiYoc2V8fGYhPT1vZS5jb21wb3NpdGlvblN0YXJ0P2Y9PT1vZS5jb21wb3NpdGlvbkVuZCYmc2UmJihlPWFlKCkpOihZZD1kLFpkPVwidmFsdWVcImluIFlkP1lkLnZhbHVlOllkLnRleHRDb250ZW50LHNlPSEwKSksZj1nZS5nZXRQb29sZWQoZixcbmIsYyxkKSxlP2YuZGF0YT1lOihlPXJlKGMpLG51bGwhPT1lJiYoZi5kYXRhPWUpKSxYZChmKSxlPWYpOmU9bnVsbDsoYT1sZT90ZShhLGMpOnVlKGEsYykpPyhiPWhlLmdldFBvb2xlZChvZS5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsWGQoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWU/YjpudWxsPT09Yj9lOltlLGJdfX0sd2U9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24geGUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISF3ZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG52YXIgeWU9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gemUoYSxiLGMpe2E9Ry5nZXRQb29sZWQoeWUuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtEYShjKTtYZChhKTtyZXR1cm4gYX12YXIgQWU9bnVsbCxCZT1udWxsO2Z1bmN0aW9uIENlKGEpe21jKGEpfWZ1bmN0aW9uIERlKGEpe3ZhciBiPVBkKGEpO2lmKHliKGIpKXJldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEZlPSExO3lhJiYoRmU9b2MoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7XG5mdW5jdGlvbiBHZSgpe0FlJiYoQWUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpLEJlPUFlPW51bGwpfWZ1bmN0aW9uIEhlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZEZShCZSkpaWYoYT16ZShCZSxhLG5jKGEpKSxKYSltYyhhKTtlbHNle0phPSEwO3RyeXtGYShDZSxhKX1maW5hbGx5e0phPSExLExhKCl9fX1mdW5jdGlvbiBJZShhLGIsYyl7XCJmb2N1c1wiPT09YT8oR2UoKSxBZT1iLEJlPWMsQWUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsSGUpKTpcImJsdXJcIj09PWEmJkdlKCl9ZnVuY3Rpb24gSmUoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gRGUoQmUpfWZ1bmN0aW9uIEtlKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gRGUoYil9ZnVuY3Rpb24gTGUoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gRGUoYil9XG52YXIgTWU9e2V2ZW50VHlwZXM6eWUsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpGZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/UGQoYik6d2luZG93LGY9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO2lmKFwic2VsZWN0XCI9PT1mfHxcImlucHV0XCI9PT1mJiZcImZpbGVcIj09PWUudHlwZSl2YXIgZz1FZTtlbHNlIGlmKHhlKGUpKWlmKEZlKWc9TGU7ZWxzZXtnPUplO3ZhciBoPUllfWVsc2UoZj1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09Zi50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZz1LZSk7aWYoZyYmKGc9ZyhhLGIpKSlyZXR1cm4gemUoZyxjLGQpO2gmJmgoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZEYihlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxOZT1HLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksXG5PZT17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gUGUoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1PZVthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFFlKCl7cmV0dXJuIFBlfVxudmFyIFJlPTAsU2U9MCxUZT0hMSxVZT0hMSxWZT1OZS5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9UmU7UmU9YS5zY3JlZW5YO3JldHVybiBUZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFRlPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9U2U7U2U9YS5zY3JlZW5ZO3JldHVybiBVZT9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFVlPSEwLDApfX0pLFdlPVZlLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxYZT17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sWWU9e2V2ZW50VHlwZXM6WGUsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGc9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGYmJjA9PT0oZSYzMikmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZyYmIWYpcmV0dXJuIG51bGw7Zj1kLndpbmRvdz09PWQ/ZDooZj1kLm93bmVyRG9jdW1lbnQpP2YuZGVmYXVsdFZpZXd8fGYucGFyZW50V2luZG93OndpbmRvdztpZihnKXtpZihnPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT90YyhiKTpudWxsLG51bGwhPT1iKXt2YXIgaD1kYyhiKTtpZihiIT09aHx8NSE9PWIudGFnJiY2IT09Yi50YWcpYj1udWxsfX1lbHNlIGc9bnVsbDtpZihnPT09YilyZXR1cm4gbnVsbDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09XG5hKXt2YXIgaz1WZTt2YXIgbD1YZS5tb3VzZUxlYXZlO3ZhciBtPVhlLm1vdXNlRW50ZXI7dmFyIHA9XCJtb3VzZVwifWVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWs9V2UsbD1YZS5wb2ludGVyTGVhdmUsbT1YZS5wb2ludGVyRW50ZXIscD1cInBvaW50ZXJcIjthPW51bGw9PWc/ZjpQZChnKTtmPW51bGw9PWI/ZjpQZChiKTtsPWsuZ2V0UG9vbGVkKGwsZyxjLGQpO2wudHlwZT1wK1wibGVhdmVcIjtsLnRhcmdldD1hO2wucmVsYXRlZFRhcmdldD1mO2M9ay5nZXRQb29sZWQobSxiLGMsZCk7Yy50eXBlPXArXCJlbnRlclwiO2MudGFyZ2V0PWY7Yy5yZWxhdGVkVGFyZ2V0PWE7ZD1nO3A9YjtpZihkJiZwKWE6e2s9ZDttPXA7Zz0wO2ZvcihhPWs7YTthPVJkKGEpKWcrKzthPTA7Zm9yKGI9bTtiO2I9UmQoYikpYSsrO2Zvcig7MDxnLWE7KWs9UmQoayksZy0tO2Zvcig7MDxhLWc7KW09UmQobSksYS0tO2Zvcig7Zy0tOyl7aWYoaz09PW18fGs9PT1tLmFsdGVybmF0ZSlicmVhayBhO1xuaz1SZChrKTttPVJkKG0pfWs9bnVsbH1lbHNlIGs9bnVsbDttPWs7Zm9yKGs9W107ZCYmZCE9PW07KXtnPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1nJiZnPT09bSlicmVhaztrLnB1c2goZCk7ZD1SZChkKX1mb3IoZD1bXTtwJiZwIT09bTspe2c9cC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2QucHVzaChwKTtwPVJkKHApfWZvcihwPTA7cDxrLmxlbmd0aDtwKyspVmQoa1twXSxcImJ1YmJsZWRcIixsKTtmb3IocD1kLmxlbmd0aDswPHAtLTspVmQoZFtwXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuIDA9PT0oZSY2NCk/W2xdOltsLGNdfX07ZnVuY3Rpb24gWmUoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciAkZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgT2JqZWN0LmlzP09iamVjdC5pczpaZSxhZj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gYmYoYSxiKXtpZigkZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWFmLmNhbGwoYixjW2RdKXx8ISRlKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9XG52YXIgY2Y9eWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxkZj17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sZWY9bnVsbCxmZj1udWxsLGdmPW51bGwsaGY9ITE7XG5mdW5jdGlvbiBqZihhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKGhmfHxudWxsPT1lZnx8ZWYhPT10ZChjKSlyZXR1cm4gbnVsbDtjPWVmO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJnlkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIGdmJiZiZihnZixjKT9udWxsOihnZj1jLGE9Ry5nZXRQb29sZWQoZGYuc2VsZWN0LGZmLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9ZWYsWGQoYSksYSl9XG52YXIga2Y9e2V2ZW50VHlwZXM6ZGYsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkLGUsZil7ZT1mfHwoZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQpO2lmKCEoZj0hZSkpe2E6e2U9Y2MoZSk7Zj13YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKylpZighZS5oYXMoZltnXSkpe2U9ITE7YnJlYWsgYX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/UGQoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZih4ZShlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSllZj1lLGZmPWIsZ2Y9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOmdmPWZmPWVmPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOmhmPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gaGY9ITEsamYoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoY2YpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBqZihjLGQpfXJldHVybiBudWxsfX0sbGY9Ry5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG1mPUcuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksbmY9TmUuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBvZihhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBwZj17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0scWY9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHJmPU5lLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1wZlthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZihhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/cWZbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29mKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP29mKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksc2Y9VmUuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHRmPU5lLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlFlfSksdWY9Ry5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksdmY9VmUuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx3Zj17ZXZlbnRUeXBlczpXYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVljLmdldChhKTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9mKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1yZjticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9bmY7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1cblZlO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9c2Y7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT10ZjticmVhaztjYXNlIFhiOmNhc2UgWWI6Y2FzZSBaYjphPWxmO2JyZWFrO2Nhc2UgJGI6YT11ZjticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1OZTticmVhaztjYXNlIFwid2hlZWxcIjphPXZmO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9bWY7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1cbldlO2JyZWFrO2RlZmF1bHQ6YT1HfWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7WGQoYik7cmV0dXJuIGJ9fTtpZihwYSl0aHJvdyBFcnJvcih1KDEwMSkpO3BhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3JhKCk7dmFyIHhmPU5jO2xhPVFkO21hPXhmO25hPVBkO3hhKHtTaW1wbGVFdmVudFBsdWdpbjp3ZixFbnRlckxlYXZlRXZlbnRQbHVnaW46WWUsQ2hhbmdlRXZlbnRQbHVnaW46TWUsU2VsZWN0RXZlbnRQbHVnaW46a2YsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp2ZX0pO3ZhciB5Zj1bXSx6Zj0tMTtmdW5jdGlvbiBIKGEpezA+emZ8fChhLmN1cnJlbnQ9eWZbemZdLHlmW3pmXT1udWxsLHpmLS0pfVxuZnVuY3Rpb24gSShhLGIpe3pmKys7eWZbemZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQWY9e30sSj17Y3VycmVudDpBZn0sSz17Y3VycmVudDohMX0sQmY9QWY7ZnVuY3Rpb24gQ2YoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBBZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9XG5mdW5jdGlvbiBEZigpe0goSyk7SChKKX1mdW5jdGlvbiBFZihhLGIsYyl7aWYoSi5jdXJyZW50IT09QWYpdGhyb3cgRXJyb3IodSgxNjgpKTtJKEosYik7SShLLGMpfWZ1bmN0aW9uIEZmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IodSgxMDgscGIoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbih7fSxjLHt9LGQpfWZ1bmN0aW9uIEdmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxBZjtCZj1KLmN1cnJlbnQ7SShKLGEpO0koSyxLLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gSGYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHUoMTY5KSk7Yz8oYT1GZihhLGIsQmYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKEspLEgoSiksSShKLGEpKTpIKEspO0koSyxjKX1cbnZhciBJZj1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxKZj1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssS2Y9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxMZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxNZj1yLnVuc3RhYmxlX25vdyxOZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLE9mPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksUGY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxRZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFJmPXIudW5zdGFibGVfTG93UHJpb3JpdHksU2Y9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksVGY9e30sVWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxWZj12b2lkIDAhPT1MZj9MZjpmdW5jdGlvbigpe30sV2Y9bnVsbCxYZj1udWxsLFlmPSExLFpmPU1mKCksJGY9MUU0PlpmP01mOmZ1bmN0aW9uKCl7cmV0dXJuIE1mKCktWmZ9O1xuZnVuY3Rpb24gYWcoKXtzd2l0Y2goTmYoKSl7Y2FzZSBPZjpyZXR1cm4gOTk7Y2FzZSBQZjpyZXR1cm4gOTg7Y2FzZSBRZjpyZXR1cm4gOTc7Y2FzZSBSZjpyZXR1cm4gOTY7Y2FzZSBTZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIE9mO2Nhc2UgOTg6cmV0dXJuIFBmO2Nhc2UgOTc6cmV0dXJuIFFmO2Nhc2UgOTY6cmV0dXJuIFJmO2Nhc2UgOTU6cmV0dXJuIFNmO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMzIpKTt9fWZ1bmN0aW9uIGNnKGEsYil7YT1iZyhhKTtyZXR1cm4gSWYoYSxiKX1mdW5jdGlvbiBkZyhhLGIsYyl7YT1iZyhhKTtyZXR1cm4gSmYoYSxiLGMpfWZ1bmN0aW9uIGVnKGEpe251bGw9PT1XZj8oV2Y9W2FdLFhmPUpmKE9mLGZnKSk6V2YucHVzaChhKTtyZXR1cm4gVGZ9ZnVuY3Rpb24gZ2coKXtpZihudWxsIT09WGYpe3ZhciBhPVhmO1hmPW51bGw7S2YoYSl9ZmcoKX1cbmZ1bmN0aW9uIGZnKCl7aWYoIVlmJiZudWxsIT09V2Ype1lmPSEwO3ZhciBhPTA7dHJ5e3ZhciBiPVdmO2NnKDk5LGZ1bmN0aW9uKCl7Zm9yKDthPGIubGVuZ3RoO2ErKyl7dmFyIGM9YlthXTtkbyBjPWMoITApO3doaWxlKG51bGwhPT1jKX19KTtXZj1udWxsfWNhdGNoKGMpe3Rocm93IG51bGwhPT1XZiYmKFdmPVdmLnNsaWNlKGErMSkpLEpmKE9mLGdnKSxjO31maW5hbGx5e1lmPSExfX19ZnVuY3Rpb24gaGcoYSxiLGMpe2MvPTEwO3JldHVybiAxMDczNzQxODIxLSgoKDEwNzM3NDE4MjEtYStiLzEwKS9jfDApKzEpKmN9ZnVuY3Rpb24gaWcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9dmFyIGpnPXtjdXJyZW50Om51bGx9LGtnPW51bGwsbGc9bnVsbCxtZz1udWxsO2Z1bmN0aW9uIG5nKCl7bWc9bGc9a2c9bnVsbH1cbmZ1bmN0aW9uIG9nKGEpe3ZhciBiPWpnLmN1cnJlbnQ7SChqZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBwZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBxZyhhLGIpe2tnPWE7bWc9bGc9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYocmc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gc2coYSxiKXtpZihtZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpbWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PWxnKXtpZihudWxsPT09a2cpdGhyb3cgRXJyb3IodSgzMDgpKTtsZz1iO2tnLmRlcGVuZGVuY2llcz17ZXhwaXJhdGlvblRpbWU6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2UgbGc9bGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHRnPSExO2Z1bmN0aW9uIHVnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsYmFzZVF1ZXVlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB2ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxiYXNlUXVldWU6YS5iYXNlUXVldWUsc2hhcmVkOmEuc2hhcmVkLGVmZmVjdHM6YS5lZmZlY3RzfSl9ZnVuY3Rpb24gd2coYSxiKXthPXtleHBpcmF0aW9uVGltZTphLHN1c3BlbnNlQ29uZmlnOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfTtyZXR1cm4gYS5uZXh0PWF9ZnVuY3Rpb24geGcoYSxiKXthPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWEpe2E9YS5zaGFyZWQ7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn19XG5mdW5jdGlvbiB5ZyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZ2ZyhjLGEpO2E9YS51cGRhdGVRdWV1ZTtjPWEuYmFzZVF1ZXVlO251bGw9PT1jPyhhLmJhc2VRdWV1ZT1iLm5leHQ9YixiLm5leHQ9Yik6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpfVxuZnVuY3Rpb24gemcoYSxiLGMsZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt0Zz0hMTt2YXIgZj1lLmJhc2VRdWV1ZSxnPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWcpe2lmKG51bGwhPT1mKXt2YXIgaD1mLm5leHQ7Zi5uZXh0PWcubmV4dDtnLm5leHQ9aH1mPWc7ZS5zaGFyZWQucGVuZGluZz1udWxsO2g9YS5hbHRlcm5hdGU7bnVsbCE9PWgmJihoPWgudXBkYXRlUXVldWUsbnVsbCE9PWgmJihoLmJhc2VRdWV1ZT1nKSl9aWYobnVsbCE9PWYpe2g9Zi5uZXh0O3ZhciBrPWUuYmFzZVN0YXRlLGw9MCxtPW51bGwscD1udWxsLHg9bnVsbDtpZihudWxsIT09aCl7dmFyIHo9aDtkb3tnPXouZXhwaXJhdGlvblRpbWU7aWYoZzxkKXt2YXIgY2E9e2V4cGlyYXRpb25UaW1lOnouZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT14PyhwPXg9XG5jYSxtPWspOng9eC5uZXh0PWNhO2c+bCYmKGw9Zyl9ZWxzZXtudWxsIT09eCYmKHg9eC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOnouc3VzcGVuc2VDb25maWcsdGFnOnoudGFnLHBheWxvYWQ6ei5wYXlsb2FkLGNhbGxiYWNrOnouY2FsbGJhY2ssbmV4dDpudWxsfSk7QWcoZyx6LnN1c3BlbnNlQ29uZmlnKTthOnt2YXIgRD1hLHQ9ejtnPWI7Y2E9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpEPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgRCl7az1ELmNhbGwoY2EsayxnKTticmVhayBhfWs9RDticmVhayBhO2Nhc2UgMzpELmVmZmVjdFRhZz1ELmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6RD10LnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgRD9ELmNhbGwoY2EsayxnKTpEO2lmKG51bGw9PT1nfHx2b2lkIDA9PT1nKWJyZWFrIGE7az1uKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6dGc9ITB9fW51bGwhPT16LmNhbGxiYWNrJiZcbihhLmVmZmVjdFRhZ3w9MzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt6XTpnLnB1c2goeikpfXo9ei5uZXh0O2lmKG51bGw9PT16fHx6PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB6PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09eD9tPWs6eC5uZXh0PXA7ZS5iYXNlU3RhdGU9bTtlLmJhc2VRdWV1ZT14O0JnKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319XG5mdW5jdGlvbiBDZyhhLGIsYyl7YT1iLmVmZmVjdHM7Yi5lZmZlY3RzPW51bGw7aWYobnVsbCE9PWEpZm9yKGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGQ9YVtiXSxlPWQuY2FsbGJhY2s7aWYobnVsbCE9PWUpe2QuY2FsbGJhY2s9bnVsbDtkPWU7ZT1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkKXRocm93IEVycm9yKHUoMTkxLGQpKTtkLmNhbGwoZSl9fX12YXIgRGc9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsRWc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24gRmcoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEpnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT9kYyhhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9R2coKSxlPURnLnN1c3BlbnNlO2Q9SGcoZCxhLGUpO2U9d2coZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO3hnKGEsZSk7SWcoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9R2coKSxkPURnLnN1c3BlbnNlO1xuYz1IZyhjLGEsZCk7ZD13ZyhjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO3hnKGEsZCk7SWcoYSxjKX19O2Z1bmN0aW9uIEtnKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWJmKGMsZCl8fCFiZihlLGYpOiEwfVxuZnVuY3Rpb24gTGcoYSxiLGMpe3ZhciBkPSExLGU9QWY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9c2coZik6KGU9TChiKT9CZjpKLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9DZihhLGUpOkFmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9Smc7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gTWcoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpnLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTmcoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1FZzt1ZyhhKTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PXNnKGYpOihmPUwoYik/QmY6Si5jdXJyZW50LGUuY29udGV4dD1DZihhLGYpKTt6ZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoRmcoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksemcoYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciBPZz1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gUGcoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO2lmKGMpe2lmKDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDMwOSkpO3ZhciBkPWMuc3RhdGVOb2RlfWlmKCFkKXRocm93IEVycm9yKHUoMTQ3LGEpKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PUVnJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHUoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHUoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiBRZyhhLGIpe2lmKFwidGV4dGFyZWFcIiE9PWEudHlwZSl0aHJvdyBFcnJvcih1KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKSk7fVxuZnVuY3Rpb24gUmcoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9U2coYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9VGcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyksZC5yZWY9UGcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVVnKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPVBnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9VmcoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVdnKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9VGcoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGM9VWcoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9UGcoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlICRhOnJldHVybiBiPVZnKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihPZyhiKXx8XG5uYihiKSlyZXR1cm4gYj1XZyhiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtRZyhhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHgoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgWmE6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1hYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgJGE6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoT2coYyl8fG5iKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtRZyhhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHooYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YWI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgJGE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoT2coZCl8fG5iKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtRZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIGNhKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCxtPWcseT1nPTAsQT1udWxsO251bGwhPT1tJiZ5PGgubGVuZ3RoO3krKyl7bS5pbmRleD55PyhBPW0sbT1udWxsKTpBPW0uc2libGluZzt2YXIgcT14KGUsbSxoW3ldLGspO2lmKG51bGw9PT1xKXtudWxsPT09bSYmKG09QSk7YnJlYWt9YSYmXG5tJiZudWxsPT09cS5hbHRlcm5hdGUmJmIoZSxtKTtnPWYocSxnLHkpO251bGw9PT10P2w9cTp0LnNpYmxpbmc9cTt0PXE7bT1BfWlmKHk9PT1oLmxlbmd0aClyZXR1cm4gYyhlLG0pLGw7aWYobnVsbD09PW0pe2Zvcig7eTxoLmxlbmd0aDt5KyspbT1wKGUsaFt5XSxrKSxudWxsIT09bSYmKGc9ZihtLGcseSksbnVsbD09PXQ/bD1tOnQuc2libGluZz1tLHQ9bSk7cmV0dXJuIGx9Zm9yKG09ZChlLG0pO3k8aC5sZW5ndGg7eSsrKUE9eihtLGUseSxoW3ldLGspLG51bGwhPT1BJiYoYSYmbnVsbCE9PUEuYWx0ZXJuYXRlJiZtLmRlbGV0ZShudWxsPT09QS5rZXk/eTpBLmtleSksZz1mKEEsZyx5KSxudWxsPT09dD9sPUE6dC5zaWJsaW5nPUEsdD1BKTthJiZtLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIEQoZSxnLGgsbCl7dmFyIGs9bmIoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IodSgxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IodSgxNTEpKTtmb3IodmFyIG09az1udWxsLHQ9Zyx5PWc9MCxBPW51bGwscT1oLm5leHQoKTtudWxsIT09dCYmIXEuZG9uZTt5KysscT1oLm5leHQoKSl7dC5pbmRleD55PyhBPXQsdD1udWxsKTpBPXQuc2libGluZzt2YXIgRD14KGUsdCxxLnZhbHVlLGwpO2lmKG51bGw9PT1EKXtudWxsPT09dCYmKHQ9QSk7YnJlYWt9YSYmdCYmbnVsbD09PUQuYWx0ZXJuYXRlJiZiKGUsdCk7Zz1mKEQsZyx5KTtudWxsPT09bT9rPUQ6bS5zaWJsaW5nPUQ7bT1EO3Q9QX1pZihxLmRvbmUpcmV0dXJuIGMoZSx0KSxrO2lmKG51bGw9PT10KXtmb3IoOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT1wKGUscS52YWx1ZSxsKSxudWxsIT09cSYmKGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7cmV0dXJuIGt9Zm9yKHQ9ZChlLHQpOyFxLmRvbmU7eSsrLHE9aC5uZXh0KCkpcT16KHQsZSx5LHEudmFsdWUsbCksbnVsbCE9PXEmJihhJiZudWxsIT09XG5xLmFsdGVybmF0ZSYmdC5kZWxldGUobnVsbD09PXEua2V5P3k6cS5rZXkpLGc9ZihxLGcseSksbnVsbD09PW0/az1xOm0uc2libGluZz1xLG09cSk7YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YWImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgWmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1hYil7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9UGcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1hYj8oZD1XZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VWcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UGcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlICRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9VmcoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VGcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoT2coZikpcmV0dXJuIGNhKGEsZCxmLGgpO2lmKG5iKGYpKXJldHVybiBEKGEsZCxmLGgpO2wmJlFnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6dGhyb3cgYT1hLnR5cGUsRXJyb3IodSgxNTIsYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBYZz1SZyghMCksWWc9UmcoITEpLFpnPXt9LCRnPXtjdXJyZW50OlpnfSxhaD17Y3VycmVudDpaZ30sYmg9e2N1cnJlbnQ6Wmd9O1xuZnVuY3Rpb24gY2goYSl7aWYoYT09PVpnKXRocm93IEVycm9yKHUoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZGgoYSxiKXtJKGJoLGIpO0koYWgsYSk7SSgkZyxaZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpPYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9T2IoYixhKX1IKCRnKTtJKCRnLGIpfWZ1bmN0aW9uIGVoKCl7SCgkZyk7SChhaCk7SChiaCl9ZnVuY3Rpb24gZmgoYSl7Y2goYmguY3VycmVudCk7dmFyIGI9Y2goJGcuY3VycmVudCk7dmFyIGM9T2IoYixhLnR5cGUpO2IhPT1jJiYoSShhaCxhKSxJKCRnLGMpKX1mdW5jdGlvbiBnaChhKXthaC5jdXJyZW50PT09YSYmKEgoJGcpLEgoYWgpKX12YXIgTT17Y3VycmVudDowfTtcbmZ1bmN0aW9uIGhoKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fGMuZGF0YT09PUJkfHxjLmRhdGE9PT1DZCkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBifWVsc2UgaWYobnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ31yZXR1cm4gbnVsbH1mdW5jdGlvbiBpaChhLGIpe3JldHVybntyZXNwb25kZXI6YSxwcm9wczpifX1cbnZhciBqaD1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGtoPVdhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLGxoPTAsTj1udWxsLE89bnVsbCxQPW51bGwsbWg9ITE7ZnVuY3Rpb24gUSgpe3Rocm93IEVycm9yKHUoMzIxKSk7fWZ1bmN0aW9uIG5oKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoISRlKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBvaChhLGIsYyxkLGUsZil7bGg9ZjtOPWI7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2IuZXhwaXJhdGlvblRpbWU9MDtqaC5jdXJyZW50PW51bGw9PT1hfHxudWxsPT09YS5tZW1vaXplZFN0YXRlP3BoOnFoO2E9YyhkLGUpO2lmKGIuZXhwaXJhdGlvblRpbWU9PT1saCl7Zj0wO2Rve2IuZXhwaXJhdGlvblRpbWU9MDtpZighKDI1PmYpKXRocm93IEVycm9yKHUoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7amguY3VycmVudD1yaDthPWMoZCxlKX13aGlsZShiLmV4cGlyYXRpb25UaW1lPT09bGgpfWpoLmN1cnJlbnQ9c2g7Yj1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtsaD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYoYil0aHJvdyBFcnJvcih1KDMwMCkpO3JldHVybiBhfVxuZnVuY3Rpb24gdGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWE7cmV0dXJuIFB9ZnVuY3Rpb24gdWgoKXtpZihudWxsPT09Tyl7dmFyIGE9Ti5hbHRlcm5hdGU7YT1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbH1lbHNlIGE9Ty5uZXh0O3ZhciBiPW51bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZTpQLm5leHQ7aWYobnVsbCE9PWIpUD1iLE89YTtlbHNle2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzEwKSk7Tz1hO2E9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxiYXNlUXVldWU6Ty5iYXNlUXVldWUscXVldWU6Ty5xdWV1ZSxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YX1yZXR1cm4gUH1cbmZ1bmN0aW9uIHZoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gd2goYSl7dmFyIGI9dWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IodSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1PLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsuZXhwaXJhdGlvblRpbWU7aWYobDxsaCl7dmFyIG09e2V4cGlyYXRpb25UaW1lOmsuZXhwaXJhdGlvblRpbWUsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWg/KGc9aD1tLGY9ZCk6aD1oLm5leHQ9bTtsPk4uZXhwaXJhdGlvblRpbWUmJlxuKE4uZXhwaXJhdGlvblRpbWU9bCxCZyhsKSl9ZWxzZSBudWxsIT09aCYmKGg9aC5uZXh0PXtleHBpcmF0aW9uVGltZToxMDczNzQxODIzLHN1c3BlbnNlQ29uZmlnOmsuc3VzcGVuc2VDb25maWcsYWN0aW9uOmsuYWN0aW9uLGVhZ2VyUmVkdWNlcjprLmVhZ2VyUmVkdWNlcixlYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9KSxBZyhsLGsuc3VzcGVuc2VDb25maWcpLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2s9ay5uZXh0fXdoaWxlKG51bGwhPT1rJiZrIT09ZSk7bnVsbD09PWg/Zj1kOmgubmV4dD1nOyRlKGQsYi5tZW1vaXplZFN0YXRlKXx8KHJnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1mO2IuYmFzZVF1ZXVlPWg7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiB4aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7JGUoZixiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIHloKGEpe3ZhciBiPXRoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOnZoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD16aC5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIEFoKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU4udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTi51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEJoKCl7cmV0dXJuIHVoKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBDaChhLGIsYyxkKXt2YXIgZT10aCgpO04uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIERoKGEsYixjLGQpe3ZhciBlPXVoKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmbmgoZCxnLmRlcHMpKXtBaChiLGMsZixkKTtyZXR1cm59fU4uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1BaCgxfGIsYyxmLGQpfWZ1bmN0aW9uIEVoKGEsYil7cmV0dXJuIENoKDUxNiw0LGEsYil9ZnVuY3Rpb24gRmgoYSxiKXtyZXR1cm4gRGgoNTE2LDQsYSxiKX1mdW5jdGlvbiBHaChhLGIpe3JldHVybiBEaCg0LDIsYSxiKX1cbmZ1bmN0aW9uIEhoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gSWgoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBEaCg0LDIsSGguYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gSmgoKXt9ZnVuY3Rpb24gS2goYSxiKXt0aCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIExoKGEsYil7dmFyIGM9dWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJm5oKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gTWgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gTmgoYSxiLGMpe3ZhciBkPWFnKCk7Y2coOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtjZyg5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1raC5zdXNwZW5zZTtraC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7YSghMSksYygpfWZpbmFsbHl7a2guc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIHpoKGEsYixjKXt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09Tnx8bnVsbCE9PWYmJmY9PT1OKW1oPSEwLGUuZXhwaXJhdGlvblRpbWU9bGgsTi5leHBpcmF0aW9uVGltZT1saDtlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKCRlKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31JZyhhLFxuZCl9fVxudmFyIHNoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VSZXNwb25kZXI6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRfSxwaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6S2gsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIENoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIENoKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj10aCgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTp5aCx1c2VEZWJ1Z1ZhbHVlOkpoLHVzZVJlc3BvbmRlcjppaCx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9eWgoYSksZD1jWzBdLGU9Y1sxXTtFaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9XG5jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXloKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltLaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxxaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOndoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB3aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz13aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj1cbndoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxyaD17cmVhZENvbnRleHQ6c2csdXNlQ2FsbGJhY2s6TGgsdXNlQ29udGV4dDpzZyx1c2VFZmZlY3Q6RmgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpJaCx1c2VMYXlvdXRFZmZlY3Q6R2gsdXNlTWVtbzpNaCx1c2VSZWR1Y2VyOnhoLHVzZVJlZjpCaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB4aCh2aCl9LHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz14aCh2aCksZD1jWzBdLGU9Y1sxXTtGaChmdW5jdGlvbigpe3ZhciBjPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7a2guc3VzcGVuc2U9Y319LFthLGJdKTtyZXR1cm4gZH0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj14aCh2aCksYz1iWzBdO2I9YlsxXTtyZXR1cm5bTGgoTmguYmluZChudWxsLFxuYixhKSxbYixhXSksY119fSxPaD1udWxsLFBoPW51bGwsUWg9ITE7ZnVuY3Rpb24gUmgoYSxiKXt2YXIgYz1TaCg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gVGgoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIFVoKGEpe2lmKFFoKXt2YXIgYj1QaDtpZihiKXt2YXIgYz1iO2lmKCFUaChhLGIpKXtiPUpkKGMubmV4dFNpYmxpbmcpO2lmKCFifHwhVGgoYSxiKSl7YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTEwMjV8MjtRaD0hMTtPaD1hO3JldHVybn1SaChPaCxjKX1PaD1hO1BoPUpkKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyLFFoPSExLE9oPWF9fWZ1bmN0aW9uIFZoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtPaD1hfVxuZnVuY3Rpb24gV2goYSl7aWYoYSE9PU9oKXJldHVybiExO2lmKCFRaClyZXR1cm4gVmgoYSksUWg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFHZChiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9UGg7YjspUmgoYSxiKSxiPUpkKGIubmV4dFNpYmxpbmcpO1ZoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IodSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihjPT09QWQpe2lmKDA9PT1iKXtQaD1KZChhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlIGMhPT16ZCYmYyE9PUNkJiZjIT09QmR8fGIrK31hPWEubmV4dFNpYmxpbmd9UGg9bnVsbH19ZWxzZSBQaD1PaD9KZChhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKCl7UGg9T2g9bnVsbDtRaD0hMX12YXIgWWg9V2EuUmVhY3RDdXJyZW50T3duZXIscmc9ITE7ZnVuY3Rpb24gUihhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1lnKGIsbnVsbCxjLGQpOlhnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIFpoKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtxZyhiLGUpO2Q9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGFpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhYmkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsY2koYSxiLGcsZCxlLGYpO2E9VWcoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpiZixjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiAkaChhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1TZyhnLGQpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIGNpKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmJmKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHJnPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSwkaChhLGIsZikpOmRpKGEsYixjLGQsZil9ZnVuY3Rpb24gZWkoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBkaShhLGIsYyxkLGUpe3ZhciBmPUwoYyk/QmY6Si5jdXJyZW50O2Y9Q2YoYixmKTtxZyhiLGUpO2M9b2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcmcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSwkaChhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UihhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7aWYoTChjKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO3FnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxMZyhiLGMsZCksTmcoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCk7dGc9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9eDt6ZyhiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8dGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoRmcoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPXRnfHxLZyhiLGMsaCxkLHgsayxsKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSx2ZyhhLGIpLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOmlnKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXNnKGwpOihsPUwoYyk/QmY6Si5jdXJyZW50LGw9Q2YoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmTWcoYixnLGQsbCksdGc9ITEsaz1iLm1lbW9pemVkU3RhdGUsZy5zdGF0ZT1rLHpnKGIsZCxnLGUpLHg9Yi5tZW1vaXplZFN0YXRlLGghPT1kfHxrIT09eHx8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSx4PWIubWVtb2l6ZWRTdGF0ZSksKG09dGd8fEtnKGIsYyxoLGQsayx4LGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxcbngsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx4LGwpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmaz09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1sLGQ9bSk6XG4oXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIGdpKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGdpKGEsYixjLGQsZSxmKXtlaShhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmSGYoYixjLCExKSwkaChhLGIsZik7ZD1iLnN0YXRlTm9kZTtZaC5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1YZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVhnKGIsbnVsbCxoLGYpKTpSKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJkhmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9FZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZFZihhLGIuY29udGV4dCwhMSk7ZGgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIGlpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlUaW1lOjB9O1xuZnVuY3Rpb24gamkoYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9TS5jdXJyZW50LGc9ITEsaDsoaD0wIT09KGIuZWZmZWN0VGFnJjY0KSl8fChoPTAhPT0oZiYyKSYmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlKSk7aD8oZz0hMCxiLmVmZmVjdFRhZyY9LTY1KTpudWxsIT09YSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZXx8dm9pZCAwPT09ZS5mYWxsYmFja3x8ITA9PT1lLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwoZnw9MSk7SShNLGYmMSk7aWYobnVsbD09PWEpe3ZvaWQgMCE9PWUuZmFsbGJhY2smJlVoKGIpO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49XG5iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWU7cmV0dXJuIGN9ZD1lLmNoaWxkcmVuO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVlnKGIsbnVsbCxkLGMpfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2E9YS5jaGlsZDtkPWEuc2libGluZztpZihnKXtlPWUuZmFsbGJhY2s7Yz1TZyhhLGEucGVuZGluZ1Byb3BzKTtjLnJldHVybj1iO2lmKDA9PT0oYi5tb2RlJjIpJiYoZz1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09YS5jaGlsZCkpZm9yKGMuY2hpbGQ9ZztudWxsIT09ZzspZy5yZXR1cm49YyxnPWcuc2libGluZztkPVNnKGQsZSk7ZC5yZXR1cm49YjtjLnNpYmxpbmc9ZDtjLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1jO3JldHVybiBkfWM9WGcoYixhLmNoaWxkLGUuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9XG5jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7ZT1XZyhudWxsLGQsMCxudWxsKTtlLnJldHVybj1iO2UuY2hpbGQ9YTtudWxsIT09YSYmKGEucmV0dXJuPWUpO2lmKDA9PT0oYi5tb2RlJjIpKWZvcihhPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGUuY2hpbGQ9YTtudWxsIT09YTspYS5yZXR1cm49ZSxhPWEuc2libGluZztjPVdnKGcsZCxjLG51bGwpO2MucmV0dXJuPWI7ZS5zaWJsaW5nPWM7Yy5lZmZlY3RUYWd8PTI7ZS5jaGlsZEV4cGlyYXRpb25UaW1lPTA7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31iLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1YZyhiLGEsZS5jaGlsZHJlbixjKX1cbmZ1bmN0aW9uIGtpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtwZyhhLnJldHVybixiKX1mdW5jdGlvbiBsaShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxFeHBpcmF0aW9uOjAsdGFpbE1vZGU6ZSxsYXN0RWZmZWN0OmZ9OihnLmlzQmFja3dhcmRzPWIsZy5yZW5kZXJpbmc9bnVsbCxnLnJlbmRlcmluZ1N0YXJ0VGltZT0wLGcubGFzdD1kLGcudGFpbD1jLGcudGFpbEV4cGlyYXRpb249MCxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtSKGEsYixkLmNoaWxkcmVuLGMpO2Q9TS5jdXJyZW50O2lmKDAhPT0oZCYyKSlkPWQmMXwyLGIuZWZmZWN0VGFnfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJmtpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKWtpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoTSxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aGgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTtsaShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1oaChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9bGkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOmxpKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiAkaChhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTswIT09ZCYmQmcoZCk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHUoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1TZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXZhciBuaSxvaSxwaSxxaTtcbm5pPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtvaT1mdW5jdGlvbigpe307XG5waT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7Y2goJGcuY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXpiKGcsZik7ZD16YihnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9R2IoZyxmKTtkPUdiKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9SWIoZyxmKTtkPUliKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9c2QpfW9kKGMsZCk7dmFyIGgsaztjPW51bGw7Zm9yKGggaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShoKSYmZi5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ZltoXSlpZihcInN0eWxlXCI9PT1cbmgpZm9yKGsgaW4gZz1mW2hdLGcpZy5oYXNPd25Qcm9wZXJ0eShrKSYmKGN8fChjPXt9KSxjW2tdPVwiXCIpO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1oJiZcImNoaWxkcmVuXCIhPT1oJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYodmEuaGFzT3duUHJvcGVydHkoaCk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGgsbnVsbCkpO2ZvcihoIGluIGQpe3ZhciBsPWRbaF07Zz1udWxsIT1mP2ZbaF06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoaCkmJmwhPT1nJiYobnVsbCE9bHx8bnVsbCE9ZykpaWYoXCJzdHlsZVwiPT09aClpZihnKXtmb3IoayBpbiBnKSFnLmhhc093blByb3BlcnR5KGspfHxsJiZsLmhhc093blByb3BlcnR5KGspfHwoY3x8KGM9e30pLGNba109XCJcIik7Zm9yKGsgaW4gbClsLmhhc093blByb3BlcnR5KGspJiZnW2tdIT09bFtrXSYmKGN8fChjPXt9KSxcbmNba109bFtrXSl9ZWxzZSBjfHwoYXx8KGE9W10pLGEucHVzaChoLGMpKSxjPWw7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGw9bD9sLl9faHRtbDp2b2lkIDAsZz1nP2cuX19odG1sOnZvaWQgMCxudWxsIT1sJiZnIT09bCYmKGE9YXx8W10pLnB1c2goaCxsKSk6XCJjaGlsZHJlblwiPT09aD9nPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGgsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT8obnVsbCE9bCYmcmQoZSxoKSxhfHxnPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChoLGwpKX1jJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsYyk7ZT1hO2lmKGIudXBkYXRlUXVldWU9ZSliLmVmZmVjdFRhZ3w9NH19O1xucWk9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmVmZmVjdFRhZ3w9NCl9O2Z1bmN0aW9uIHJpKGEsYil7c3dpdGNoKGEudGFpbE1vZGUpe2Nhc2UgXCJoaWRkZW5cIjpiPWEudGFpbDtmb3IodmFyIGM9bnVsbDtudWxsIT09YjspbnVsbCE9PWIuYWx0ZXJuYXRlJiYoYz1iKSxiPWIuc2libGluZztudWxsPT09Yz9hLnRhaWw9bnVsbDpjLnNpYmxpbmc9bnVsbDticmVhaztjYXNlIFwiY29sbGFwc2VkXCI6Yz1hLnRhaWw7Zm9yKHZhciBkPW51bGw7bnVsbCE9PWM7KW51bGwhPT1jLmFsdGVybmF0ZSYmKGQ9YyksYz1jLnNpYmxpbmc7bnVsbD09PWQ/Ynx8bnVsbD09PWEudGFpbD9hLnRhaWw9bnVsbDphLnRhaWwuc2libGluZz1udWxsOmQuc2libGluZz1udWxsfX1cbmZ1bmN0aW9uIHNpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpjYXNlIDE2OmNhc2UgMTU6Y2FzZSAwOmNhc2UgMTE6Y2FzZSA3OmNhc2UgODpjYXNlIDEyOmNhc2UgOTpjYXNlIDE0OnJldHVybiBudWxsO2Nhc2UgMTpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAzOnJldHVybiBlaCgpLEgoSyksSChKKSxjPWIuc3RhdGVOb2RlLGMucGVuZGluZ0NvbnRleHQmJihjLmNvbnRleHQ9Yy5wZW5kaW5nQ29udGV4dCxjLnBlbmRpbmdDb250ZXh0PW51bGwpLG51bGwhPT1hJiZudWxsIT09YS5jaGlsZHx8IVdoKGIpfHwoYi5lZmZlY3RUYWd8PTQpLG9pKGIpLG51bGw7Y2FzZSA1OmdoKGIpO2M9Y2goYmguY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlwaShhLGIsZSxkLGMpLGEucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbnJldHVybiBudWxsfWE9Y2goJGcuY3VycmVudCk7aWYoV2goYikpe2Q9Yi5zdGF0ZU5vZGU7ZT1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbTWRdPWI7ZFtOZF09Zjtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihhPTA7YTxhYy5sZW5ndGg7YSsrKUYoYWNbYV0sZCk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGQpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGQpO0YoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixkKTtGKFwic3VibWl0XCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoZCxmKTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RihcImludmFsaWRcIixkKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6SmIoZCxmKSxGKFwiaW52YWxpZFwiLGQpLHJkKGMsXCJvbkNoYW5nZVwiKX1vZChlLGYpO2E9bnVsbDtmb3IodmFyIGcgaW4gZilpZihmLmhhc093blByb3BlcnR5KGcpKXt2YXIgaD1mW2ddO1wiY2hpbGRyZW5cIj09PWc/XCJzdHJpbmdcIj09PXR5cGVvZiBoP2QudGV4dENvbnRlbnQhPT1oJiYoYT1bXCJjaGlsZHJlblwiLGhdKTpcIm51bWJlclwiPT09dHlwZW9mIGgmJmQudGV4dENvbnRlbnQhPT1cIlwiK2gmJihhPVtcImNoaWxkcmVuXCIsXCJcIitoXSk6dmEuaGFzT3duUHJvcGVydHkoZykmJm51bGwhPWgmJnJkKGMsZyl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGQpO0ViKGQsZiwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eGIoZCk7TGIoZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLm9uQ2xpY2smJlxuKGQub25jbGljaz1zZCl9Yz1hO2IudXBkYXRlUXVldWU9YztudWxsIT09YyYmKGIuZWZmZWN0VGFnfD00KX1lbHNle2c9OT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQ7YT09PXFkJiYoYT1OYihlKSk7YT09PXFkP1wic2NyaXB0XCI9PT1lPyhhPWcuY3JlYXRlRWxlbWVudChcImRpdlwiKSxhLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGE9YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoZSx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChlKSxcInNlbGVjdFwiPT09ZSYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsZSk7YVtNZF09YjthW05kXT1kO25pKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTtnPXBkKGUsZCk7c3dpdGNoKGUpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RihcImxvYWRcIixcbmEpO2g9ZDticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWMubGVuZ3RoO2grKylGKGFjW2hdLGEpO2g9ZDticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGEpO0YoXCJsb2FkXCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RihcInJlc2V0XCIsYSk7RihcInN1Ym1pdFwiLGEpO2g9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6QWIoYSxkKTtoPXpiKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9R2IoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2g9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihhLFxuZCk7aD1JYihhLGQpO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1kfW9kKGUsaCk7dmFyIGs9aDtmb3IoZiBpbiBrKWlmKGsuaGFzT3duUHJvcGVydHkoZikpe3ZhciBsPWtbZl07XCJzdHlsZVwiPT09Zj9tZChhLGwpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmUWIoYSxsKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/KFwidGV4dGFyZWFcIiE9PWV8fFwiXCIhPT1sKSYmUmIoYSxsKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJlJiKGEsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYodmEuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9bCYmcmQoYyxmKTpudWxsIT1sJiZYYShhLGYsbCxnKSl9c3dpdGNoKGUpe2Nhc2UgXCJpbnB1dFwiOnhiKGEpO0ViKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihhKTtMYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrcmIoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtjPWQudmFsdWU7bnVsbCE9Yz9IYihhLCEhZC5tdWx0aXBsZSxjLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmSGIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKGEub25jbGljaz1zZCl9RmQoZSxkKSYmKGIuZWZmZWN0VGFnfD00KX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpcWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTY2KSk7XG5jPWNoKGJoLmN1cnJlbnQpO2NoKCRnLmN1cnJlbnQpO1doKGIpPyhjPWIuc3RhdGVOb2RlLGQ9Yi5tZW1vaXplZFByb3BzLGNbTWRdPWIsYy5ub2RlVmFsdWUhPT1kJiYoYi5lZmZlY3RUYWd8PTQpKTooYz0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGNbTWRdPWIsYi5zdGF0ZU5vZGU9Yyl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtjPW51bGwhPT1kO2Q9ITE7bnVsbD09PWE/dm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLmZhbGxiYWNrJiZXaChiKTooZT1hLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZSxjfHxudWxsPT09ZXx8KGU9YS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoZj1iLmZpcnN0RWZmZWN0LG51bGwhPT1mPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWYpOihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1cbmUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKSk7aWYoYyYmIWQmJjAhPT0oYi5tb2RlJjIpKWlmKG51bGw9PT1hJiYhMCE9PWIubWVtb2l6ZWRQcm9wcy51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8MCE9PShNLmN1cnJlbnQmMSkpUz09PXRpJiYoUz11aSk7ZWxzZXtpZihTPT09dGl8fFM9PT11aSlTPXZpOzAhPT13aSYmbnVsbCE9PVQmJih4aShULFUpLHlpKFQsd2kpKX1pZihjfHxkKWIuZWZmZWN0VGFnfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxvaShiKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGIpLG51bGw7Y2FzZSAxNzpyZXR1cm4gTChiLnR5cGUpJiZEZigpLG51bGw7Y2FzZSAxOTpIKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2U9MCE9PShiLmVmZmVjdFRhZyY2NCk7Zj1kLnJlbmRlcmluZztpZihudWxsPT09ZilpZihlKXJpKGQsITEpO2Vsc2V7aWYoUyE9PXRpfHxudWxsIT09YSYmMCE9PShhLmVmZmVjdFRhZyZcbjY0KSlmb3IoZj1iLmNoaWxkO251bGwhPT1mOyl7YT1oaChmKTtpZihudWxsIT09YSl7Yi5lZmZlY3RUYWd8PTY0O3JpKGQsITEpO2U9YS51cGRhdGVRdWV1ZTtudWxsIT09ZSYmKGIudXBkYXRlUXVldWU9ZSxiLmVmZmVjdFRhZ3w9NCk7bnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsZj1jLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxhPWUuYWx0ZXJuYXRlLG51bGw9PT1hPyhlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxlLmV4cGlyYXRpb25UaW1lPWYsZS5jaGlsZD1udWxsLGUubWVtb2l6ZWRQcm9wcz1udWxsLGUubWVtb2l6ZWRTdGF0ZT1udWxsLGUudXBkYXRlUXVldWU9bnVsbCxlLmRlcGVuZGVuY2llcz1udWxsKTooZS5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZSxcbmUuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWEuY2hpbGQsZS5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxmPWEuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1mP251bGw6e2V4cGlyYXRpb25UaW1lOmYuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmYuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Zi5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7SShNLE0uY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWY9Zi5zaWJsaW5nfX1lbHNle2lmKCFlKWlmKGE9aGgoZiksbnVsbCE9PWEpe2lmKGIuZWZmZWN0VGFnfD02NCxlPSEwLGM9YS51cGRhdGVRdWV1ZSxudWxsIT09YyYmKGIudXBkYXRlUXVldWU9YyxiLmVmZmVjdFRhZ3w9NCkscmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFmLmFsdGVybmF0ZSlyZXR1cm4gYj1cbmIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqJGYoKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5kLnRhaWxFeHBpcmF0aW9uJiYxPGMmJihiLmVmZmVjdFRhZ3w9NjQsZT0hMCxyaShkLCExKSxiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT1jLTEpO2QuaXNCYWNrd2FyZHM/KGYuc2libGluZz1iLmNoaWxkLGIuY2hpbGQ9Zik6KGM9ZC5sYXN0LG51bGwhPT1jP2Muc2libGluZz1mOmIuY2hpbGQ9ZixkLmxhc3Q9Zil9cmV0dXJuIG51bGwhPT1kLnRhaWw/KDA9PT1kLnRhaWxFeHBpcmF0aW9uJiYoZC50YWlsRXhwaXJhdGlvbj0kZigpKzUwMCksYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9JGYoKSxjLnNpYmxpbmc9bnVsbCxiPU0uY3VycmVudCxJKE0sZT9iJjF8MjpiJjEpLGMpOm51bGx9dGhyb3cgRXJyb3IodSgxNTYsXG5iLnRhZykpO31mdW5jdGlvbiB6aShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJkRmKCk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImNDA5Nj8oYS5lZmZlY3RUYWc9YiYtNDA5N3w2NCxhKTpudWxsO2Nhc2UgMzplaCgpO0goSyk7SChKKTtiPWEuZWZmZWN0VGFnO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IodSgyODUpKTthLmVmZmVjdFRhZz1iJi00MDk3fDY0O3JldHVybiBhO2Nhc2UgNTpyZXR1cm4gZ2goYSksbnVsbDtjYXNlIDEzOnJldHVybiBIKE0pLGI9YS5lZmZlY3RUYWcsYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChNKSxudWxsO2Nhc2UgNDpyZXR1cm4gZWgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIG9nKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19ZnVuY3Rpb24gQWkoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpxYihiKX19XG52YXIgQmk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gQ2koYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1xYihjKSk7bnVsbCE9PWMmJnBiKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJnBiKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIERpKGEsYil7dHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChjKXtFaShhLGMpfX1mdW5jdGlvbiBGaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtFaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBHaShhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOnJldHVybjtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzppZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9XG5mdW5jdGlvbiBIaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmRlc3Ryb3k7Yy5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1kJiZkKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBJaShhLGIpe2I9Yi51cGRhdGVRdWV1ZTtiPW51bGwhPT1iP2IubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1iKXt2YXIgYz1iPWIubmV4dDtkb3tpZigoYy50YWcmYSk9PT1hKXt2YXIgZD1jLmNyZWF0ZTtjLmRlc3Ryb3k9ZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19XG5mdW5jdGlvbiBKaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6SWkoMyxjKTtyZXR1cm47Y2FzZSAxOmE9Yy5zdGF0ZU5vZGU7aWYoYy5lZmZlY3RUYWcmNClpZihudWxsPT09YilhLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczppZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJkNnKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9Yy5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmE9Yy5jaGlsZC5zdGF0ZU5vZGV9Q2coYyxiLGEpfXJldHVybjtcbmNhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmVmZmVjdFRhZyY0JiZGZChjLnR5cGUsYy5tZW1vaXplZFByb3BzKSYmYS5mb2N1cygpO3JldHVybjtjYXNlIDY6cmV0dXJuO2Nhc2UgNDpyZXR1cm47Y2FzZSAxMjpyZXR1cm47Y2FzZSAxMzpudWxsPT09Yy5tZW1vaXplZFN0YXRlJiYoYz1jLmFsdGVybmF0ZSxudWxsIT09YyYmKGM9Yy5tZW1vaXplZFN0YXRlLG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbCE9PWMmJlZjKGMpKSkpO3JldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEtpKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgTGkmJkxpKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7Y2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0VpKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpGaShiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZEaShiLGMpO2JyZWFrO2Nhc2UgNTpGaShiKTticmVhaztjYXNlIDQ6TWkoYSxiLGMpfX1cbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmTmkoYil9ZnVuY3Rpb24gT2koYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBQaShhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihPaShiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IodSgxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoUmIoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fE9pKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJjIpY29udGludWUgYjtcbmlmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9RaShhLGMsYik6UmkoYSxjLGIpfVxuZnVuY3Rpb24gUWkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPXNkKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFFpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUWkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gUmkoYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihSaShhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVJpKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIE1pKGEsYixjKXtmb3IodmFyIGQ9YixlPSExLGYsZzs7KXtpZighZSl7ZT1kLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWUpdGhyb3cgRXJyb3IodSgxNjApKTtmPWUuc3RhdGVOb2RlO3N3aXRjaChlLnRhZyl7Y2FzZSA1Omc9ITE7YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87Zz0hMDticmVhayBhO2Nhc2UgNDpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGF9ZT1lLnJldHVybn1lPSEwfWlmKDU9PT1kLnRhZ3x8Nj09PWQudGFnKXthOmZvcih2YXIgaD1hLGs9ZCxsPWMsbT1rOzspaWYoS2koaCxtLGwpLG51bGwhPT1tLmNoaWxkJiY0IT09bS50YWcpbS5jaGlsZC5yZXR1cm49bSxtPW0uY2hpbGQ7ZWxzZXtpZihtPT09aylicmVhayBhO2Zvcig7bnVsbD09PW0uc2libGluZzspe2lmKG51bGw9PT1tLnJldHVybnx8bS5yZXR1cm49PT1rKWJyZWFrIGE7bT1tLnJldHVybn1tLnNpYmxpbmcucmV0dXJuPW0ucmV0dXJuO209bS5zaWJsaW5nfWc/KGg9XG5mLGs9ZC5zdGF0ZU5vZGUsOD09PWgubm9kZVR5cGU/aC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGspOmgucmVtb3ZlQ2hpbGQoaykpOmYucmVtb3ZlQ2hpbGQoZC5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWQudGFnKXtpZihudWxsIT09ZC5jaGlsZCl7Zj1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2c9ITA7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoS2koYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFNpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpIaSgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tOZF09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQmIoYyxkKTtwZChhLGUpO2I9cGQoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP21kKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9RYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/UmIoYyxoKTpYYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6Q2IoYyxkKTticmVhaztcbmNhc2UgXCJ0ZXh0YXJlYVwiOktiKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/SGIoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP0hiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpIYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHUoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmI9Yi5zdGF0ZU5vZGU7Yi5oeWRyYXRlJiYoYi5oeWRyYXRlPSExLFZjKGIuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOmM9YjtudWxsPT09Yi5tZW1vaXplZFN0YXRlP1xuZD0hMTooZD0hMCxjPWIuY2hpbGQsVGk9JGYoKSk7aWYobnVsbCE9PWMpYTpmb3IoYT1jOzspe2lmKDU9PT1hLnRhZylmPWEuc3RhdGVOb2RlLGQ/KGY9Zi5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGY9YS5zdGF0ZU5vZGUsZT1hLm1lbW9pemVkUHJvcHMuc3R5bGUsZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGwsZi5zdHlsZS5kaXNwbGF5PWxkKFwiZGlzcGxheVwiLGUpKTtlbHNlIGlmKDY9PT1hLnRhZylhLnN0YXRlTm9kZS5ub2RlVmFsdWU9ZD9cIlwiOmEubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09YS50YWcmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUmJm51bGw9PT1hLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7Zj1hLmNoaWxkLnNpYmxpbmc7Zi5yZXR1cm49YTthPVxuZjtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YylicmVhaztmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YylicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31VaShiKTtyZXR1cm47Y2FzZSAxOTpVaShiKTtyZXR1cm47Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IodSgxNjMpKTt9ZnVuY3Rpb24gVWkoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgQmkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1WaS5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbnZhciBXaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBYaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1lpfHwoWWk9ITAsWmk9ZCk7Q2koYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiAkaShhLGIsYyl7Yz13ZyhjLG51bGwpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtDaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09YWo/YWo9bmV3IFNldChbdGhpc10pOmFqLmFkZCh0aGlzKSxDaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbnZhciBiaj1NYXRoLmNlaWwsY2o9V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixkaj1XYS5SZWFjdEN1cnJlbnRPd25lcixWPTAsZWo9OCxmaj0xNixnaj0zMix0aT0wLGhqPTEsaWo9Mix1aT0zLHZpPTQsamo9NSxXPVYsVD1udWxsLFg9bnVsbCxVPTAsUz10aSxraj1udWxsLGxqPTEwNzM3NDE4MjMsbWo9MTA3Mzc0MTgyMyxuaj1udWxsLHdpPTAsb2o9ITEsVGk9MCxwaj01MDAsWT1udWxsLFlpPSExLFppPW51bGwsYWo9bnVsbCxxaj0hMSxyaj1udWxsLHNqPTkwLHRqPW51bGwsdWo9MCx2aj1udWxsLHdqPTA7ZnVuY3Rpb24gR2coKXtyZXR1cm4oVyYoZmp8Z2opKSE9PVY/MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKTowIT09d2o/d2o6d2o9MTA3Mzc0MTgyMS0oJGYoKS8xMHwwKX1cbmZ1bmN0aW9uIEhnKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9YWcoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmZmopIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPWhnKGEsYy50aW1lb3V0TXN8MHx8NUUzLDI1MCk7ZWxzZSBzd2l0Y2goZCl7Y2FzZSA5OTphPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA5ODphPWhnKGEsMTUwLDEwMCk7YnJlYWs7Y2FzZSA5NzpjYXNlIDk2OmE9aGcoYSw1RTMsMjUwKTticmVhaztjYXNlIDk1OmE9MjticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHUoMzI2KSk7fW51bGwhPT1UJiZhPT09VSYmLS1hO3JldHVybiBhfVxuZnVuY3Rpb24gSWcoYSxiKXtpZig1MDx1ail0aHJvdyB1aj0wLHZqPW51bGwsRXJyb3IodSgxODUpKTthPXhqKGEsYik7aWYobnVsbCE9PWEpe3ZhciBjPWFnKCk7MTA3Mzc0MTgyMz09PWI/KFcmZWopIT09ViYmKFcmKGZqfGdqKSk9PT1WP3lqKGEpOihaKGEpLFc9PT1WJiZnZygpKTpaKGEpOyhXJjQpPT09Vnx8OTghPT1jJiY5OSE9PWN8fChudWxsPT09dGo/dGo9bmV3IE1hcChbW2EsYl1dKTooYz10ai5nZXQoYSksKHZvaWQgMD09PWN8fGM+YikmJnRqLnNldChhLGIpKSl9fVxuZnVuY3Rpb24geGooYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1udWxsIT09ZSYmKFQ9PT1lJiYoQmcoYiksUz09PXZpJiZ4aShlLFUpKSx5aShlLGIpKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIHpqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2lmKDAhPT1iKXJldHVybiBiO2I9YS5maXJzdFBlbmRpbmdUaW1lO2lmKCFBaihhLGIpKXJldHVybiBiO3ZhciBjPWEubGFzdFBpbmdlZFRpbWU7YT1hLm5leHRLbm93blBlbmRpbmdMZXZlbDthPWM+YT9jOmE7cmV0dXJuIDI+PWEmJmIhPT1hPzA6YX1cbmZ1bmN0aW9uIFooYSl7aWYoMCE9PWEubGFzdEV4cGlyZWRUaW1lKWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGEuY2FsbGJhY2tQcmlvcml0eT05OSxhLmNhbGxiYWNrTm9kZT1lZyh5ai5iaW5kKG51bGwsYSkpO2Vsc2V7dmFyIGI9emooYSksYz1hLmNhbGxiYWNrTm9kZTtpZigwPT09YiludWxsIT09YyYmKGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTAsYS5jYWxsYmFja1ByaW9yaXR5PTkwKTtlbHNle3ZhciBkPUdnKCk7MTA3Mzc0MTgyMz09PWI/ZD05OToxPT09Ynx8Mj09PWI/ZD05NTooZD0xMCooMTA3Mzc0MTgyMS1iKS0xMCooMTA3Mzc0MTgyMS1kKSxkPTA+PWQ/OTk6MjUwPj1kPzk4OjUyNTA+PWQ/OTc6OTUpO2lmKG51bGwhPT1jKXt2YXIgZT1hLmNhbGxiYWNrUHJpb3JpdHk7aWYoYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPT09YiYmZT49ZClyZXR1cm47YyE9PVRmJiZLZihjKX1hLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9XG5iO2EuY2FsbGJhY2tQcmlvcml0eT1kO2I9MTA3Mzc0MTgyMz09PWI/ZWcoeWouYmluZChudWxsLGEpKTpkZyhkLEJqLmJpbmQobnVsbCxhKSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMS1iKS0kZigpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gQmooYSxiKXt3aj0wO2lmKGIpcmV0dXJuIGI9R2coKSxDaihhLGIpLFooYSksbnVsbDt2YXIgYz16aihhKTtpZigwIT09Yyl7Yj1hLmNhbGxiYWNrTm9kZTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZjPT09VXx8RWooYSxjKTtpZihudWxsIT09WCl7dmFyIGQ9VztXfD1majt2YXIgZT1GaigpO2RvIHRyeXtHaigpO2JyZWFrfWNhdGNoKGgpe0hqKGEsaCl9d2hpbGUoMSk7bmcoKTtXPWQ7Y2ouY3VycmVudD1lO2lmKFM9PT1oail0aHJvdyBiPWtqLEVqKGEsYykseGkoYSxjKSxaKGEpLGI7aWYobnVsbD09PVgpc3dpdGNoKGU9YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZSxhLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9YyxkPVMsVD1udWxsLGQpe2Nhc2UgdGk6Y2FzZSBoajp0aHJvdyBFcnJvcih1KDM0NSkpO2Nhc2UgaWo6Q2ooYSwyPGM/MjpjKTticmVhaztjYXNlIHVpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO1xuYz09PWQmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1JaihlKSk7aWYoMTA3Mzc0MTgyMz09PWxqJiYoZT1UaStwai0kZigpLDEwPGUpKXtpZihvail7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9fWY9emooYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1IZChKai5iaW5kKG51bGwsYSksZSk7YnJlYWt9SmooYSk7YnJlYWs7Y2FzZSB2aTp4aShhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZihvaiYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09ZXx8ZT49Yykpe2EubGFzdFBpbmdlZFRpbWU9YztFaihhLGMpO2JyZWFrfWU9emooYSk7aWYoMCE9PWUmJmUhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1cbmQ7YnJlYWt9MTA3Mzc0MTgyMyE9PW1qP2Q9MTAqKDEwNzM3NDE4MjEtbWopLSRmKCk6MTA3Mzc0MTgyMz09PWxqP2Q9MDooZD0xMCooMTA3Mzc0MTgyMS1saiktNUUzLGU9JGYoKSxjPTEwKigxMDczNzQxODIxLWMpLWUsZD1lLWQsMD5kJiYoZD0wKSxkPSgxMjA+ZD8xMjA6NDgwPmQ/NDgwOjEwODA+ZD8xMDgwOjE5MjA+ZD8xOTIwOjNFMz5kPzNFMzo0MzIwPmQ/NDMyMDoxOTYwKmJqKGQvMTk2MCkpLWQsYzxkJiYoZD1jKSk7aWYoMTA8ZCl7YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha31KaihhKTticmVhaztjYXNlIGpqOmlmKDEwNzM3NDE4MjMhPT1saiYmbnVsbCE9PW5qKXtmPWxqO3ZhciBnPW5qO2Q9Zy5idXN5TWluRHVyYXRpb25Nc3wwOzA+PWQ/ZD0wOihlPWcuYnVzeURlbGF5TXN8MCxmPSRmKCktKDEwKigxMDczNzQxODIxLWYpLShnLnRpbWVvdXRNc3wwfHw1RTMpKSxkPWY8PWU/MDplK2QtZik7aWYoMTA8ZCl7eGkoYSxjKTthLnRpbWVvdXRIYW5kbGU9XG5IZChKai5iaW5kKG51bGwsYSksZCk7YnJlYWt9fUpqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEJqLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiB5aihhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTtEaigpO2E9PT1UJiZiPT09VXx8RWooYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1majt2YXIgZD1GaigpO2RvIHRyeXtLaigpO2JyZWFrfWNhdGNoKGUpe0hqKGEsZSl9d2hpbGUoMSk7bmcoKTtXPWM7Y2ouY3VycmVudD1kO2lmKFM9PT1oail0aHJvdyBjPWtqLEVqKGEsYikseGkoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IodSgyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtKaihhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIExqKCl7aWYobnVsbCE9PXRqKXt2YXIgYT10ajt0aj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhLGMpe0NqKGMsYSk7WihjKX0pO2dnKCl9fVxuZnVuY3Rpb24gTWooYSxiKXt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1mdW5jdGlvbiBOaihhLGIpe3ZhciBjPVc7VyY9LTI7V3w9ZWo7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX1cbmZ1bmN0aW9uIEVqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLElkKGMpKTtpZihudWxsIT09WClmb3IoYz1YLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkRmKCk7YnJlYWs7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2JyZWFrO2Nhc2UgNTpnaChkKTticmVhaztjYXNlIDQ6ZWgoKTticmVhaztjYXNlIDEzOkgoTSk7YnJlYWs7Y2FzZSAxOTpIKE0pO2JyZWFrO2Nhc2UgMTA6b2coZCl9Yz1jLnJldHVybn1UPWE7WD1TZyhhLmN1cnJlbnQsbnVsbCk7VT1iO1M9dGk7a2o9bnVsbDttaj1saj0xMDczNzQxODIzO25qPW51bGw7d2k9MDtvaj0hMX1cbmZ1bmN0aW9uIEhqKGEsYil7ZG97dHJ5e25nKCk7amguY3VycmVudD1zaDtpZihtaClmb3IodmFyIGM9Ti5tZW1vaXplZFN0YXRlO251bGwhPT1jOyl7dmFyIGQ9Yy5xdWV1ZTtudWxsIT09ZCYmKGQucGVuZGluZz1udWxsKTtjPWMubmV4dH1saD0wO1A9Tz1OPW51bGw7bWg9ITE7aWYobnVsbD09PVh8fG51bGw9PT1YLnJldHVybilyZXR1cm4gUz1oaixraj1iLFg9bnVsbDthOnt2YXIgZT1hLGY9WC5yZXR1cm4sZz1YLGg9YjtiPVU7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5maXJzdEVmZmVjdD1nLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09aCYmXCJvYmplY3RcIj09PXR5cGVvZiBoJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC50aGVuKXt2YXIgaz1oO2lmKDA9PT0oZy5tb2RlJjIpKXt2YXIgbD1nLmFsdGVybmF0ZTtsPyhnLnVwZGF0ZVF1ZXVlPWwudXBkYXRlUXVldWUsZy5tZW1vaXplZFN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxnLmV4cGlyYXRpb25UaW1lPWwuZXhwaXJhdGlvblRpbWUpOihnLnVwZGF0ZVF1ZXVlPVxubnVsbCxnLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIG09MCE9PShNLmN1cnJlbnQmMSkscD1mO2Rve3ZhciB4O2lmKHg9MTM9PT1wLnRhZyl7dmFyIHo9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT16KXg9bnVsbCE9PXouZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciBjYT1wLm1lbW9pemVkUHJvcHM7eD12b2lkIDA9PT1jYS5mYWxsYmFjaz8hMTohMCE9PWNhLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOm0/ITE6ITB9fWlmKHgpe3ZhciBEPXAudXBkYXRlUXVldWU7aWYobnVsbD09PUQpe3ZhciB0PW5ldyBTZXQ7dC5hZGQoayk7cC51cGRhdGVRdWV1ZT10fWVsc2UgRC5hZGQoayk7aWYoMD09PShwLm1vZGUmMikpe3AuZWZmZWN0VGFnfD02NDtnLmVmZmVjdFRhZyY9LTI5ODE7aWYoMT09PWcudGFnKWlmKG51bGw9PT1nLmFsdGVybmF0ZSlnLnRhZz0xNztlbHNle3ZhciB5PXdnKDEwNzM3NDE4MjMsbnVsbCk7eS50YWc9Mjt4ZyhnLHkpfWcuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztcbmJyZWFrIGF9aD12b2lkIDA7Zz1iO3ZhciBBPWUucGluZ0NhY2hlO251bGw9PT1BPyhBPWUucGluZ0NhY2hlPW5ldyBXaSxoPW5ldyBTZXQsQS5zZXQoayxoKSk6KGg9QS5nZXQoayksdm9pZCAwPT09aCYmKGg9bmV3IFNldCxBLnNldChrLGgpKSk7aWYoIWguaGFzKGcpKXtoLmFkZChnKTt2YXIgcT1Pai5iaW5kKG51bGwsZSxrLGcpO2sudGhlbihxLHEpfXAuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9YjticmVhayBhfXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApO2g9RXJyb3IoKHBiKGcudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitxYihnKSl9UyE9PVxuamomJihTPWlqKTtoPUFpKGgsZyk7cD1mO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOms9aDtwLmVmZmVjdFRhZ3w9NDA5NjtwLmV4cGlyYXRpb25UaW1lPWI7dmFyIEI9WGkocCxrLGIpO3lnKHAsQik7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciB3PXAudHlwZSx1Yj1wLnN0YXRlTm9kZTtpZigwPT09KHAuZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXViJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgdWIuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXModWIpKSkpe3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgdmI9JGkocCxrLGIpO3lnKHAsdmIpO2JyZWFrIGF9fXA9cC5yZXR1cm59d2hpbGUobnVsbCE9PXApfVg9UGooWCl9Y2F0Y2goWGMpe2I9WGM7Y29udGludWV9YnJlYWt9d2hpbGUoMSl9XG5mdW5jdGlvbiBGaigpe3ZhciBhPWNqLmN1cnJlbnQ7Y2ouY3VycmVudD1zaDtyZXR1cm4gbnVsbD09PWE/c2g6YX1mdW5jdGlvbiBBZyhhLGIpe2E8bGomJjI8YSYmKGxqPWEpO251bGwhPT1iJiZhPG1qJiYyPGEmJihtaj1hLG5qPWIpfWZ1bmN0aW9uIEJnKGEpe2E+d2kmJih3aT1hKX1mdW5jdGlvbiBLaigpe2Zvcig7bnVsbCE9PVg7KVg9UWooWCl9ZnVuY3Rpb24gR2ooKXtmb3IoO251bGwhPT1YJiYhVWYoKTspWD1RaihYKX1mdW5jdGlvbiBRaihhKXt2YXIgYj1SaihhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9UGooYSkpO2RqLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFBqKGEpe1g9YTtkb3t2YXIgYj1YLmFsdGVybmF0ZTthPVgucmV0dXJuO2lmKDA9PT0oWC5lZmZlY3RUYWcmMjA0OCkpe2I9c2koYixYLFUpO2lmKDE9PT1VfHwxIT09WC5jaGlsZEV4cGlyYXRpb25UaW1lKXtmb3IodmFyIGM9MCxkPVguY2hpbGQ7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lLGY9ZC5jaGlsZEV4cGlyYXRpb25UaW1lO2U+YyYmKGM9ZSk7Zj5jJiYoYz1mKTtkPWQuc2libGluZ31YLmNoaWxkRXhwaXJhdGlvblRpbWU9Y31pZihudWxsIT09YilyZXR1cm4gYjtudWxsIT09YSYmMD09PShhLmVmZmVjdFRhZyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1YLmZpcnN0RWZmZWN0KSxudWxsIT09WC5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PVguZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1YLmxhc3RFZmZlY3QpLDE8WC5lZmZlY3RUYWcmJihudWxsIT09XG5hLmxhc3RFZmZlY3Q/YS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WDphLmZpcnN0RWZmZWN0PVgsYS5sYXN0RWZmZWN0PVgpKX1lbHNle2I9emkoWCk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZWZmZWN0VGFnJj0yMDQ3LGI7bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZWZmZWN0VGFnfD0yMDQ4KX1iPVguc2libGluZztpZihudWxsIT09YilyZXR1cm4gYjtYPWF9d2hpbGUobnVsbCE9PVgpO1M9PT10aSYmKFM9amopO3JldHVybiBudWxsfWZ1bmN0aW9uIElqKGEpe3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7YT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7cmV0dXJuIGI+YT9iOmF9ZnVuY3Rpb24gSmooYSl7dmFyIGI9YWcoKTtjZyg5OSxTai5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBTaihhLGIpe2RvIERqKCk7d2hpbGUobnVsbCE9PXJqKTtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMjcpKTt2YXIgYz1hLmZpbmlzaGVkV29yayxkPWEuZmluaXNoZWRFeHBpcmF0aW9uVGltZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO2lmKGM9PT1hLmN1cnJlbnQpdGhyb3cgRXJyb3IodSgxNzcpKTthLmNhbGxiYWNrTm9kZT1udWxsO2EuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wO2EuY2FsbGJhY2tQcmlvcml0eT05MDthLm5leHRLbm93blBlbmRpbmdMZXZlbD0wO3ZhciBlPUlqKGMpO2EuZmlyc3RQZW5kaW5nVGltZT1lO2Q8PWEubGFzdFN1c3BlbmRlZFRpbWU/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmQ8PWEuZmlyc3RTdXNwZW5kZWRUaW1lJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9XG5kLTEpO2Q8PWEubGFzdFBpbmdlZFRpbWUmJihhLmxhc3RQaW5nZWRUaW1lPTApO2Q8PWEubGFzdEV4cGlyZWRUaW1lJiYoYS5sYXN0RXhwaXJlZFRpbWU9MCk7YT09PVQmJihYPVQ9bnVsbCxVPTApOzE8Yy5lZmZlY3RUYWc/bnVsbCE9PWMubGFzdEVmZmVjdD8oYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxlPWMuZmlyc3RFZmZlY3QpOmU9YzplPWMuZmlyc3RFZmZlY3Q7aWYobnVsbCE9PWUpe3ZhciBmPVc7V3w9Z2o7ZGouY3VycmVudD1udWxsO0RkPWZkO3ZhciBnPXhkKCk7aWYoeWQoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpdmFyIGg9e3N0YXJ0Omcuc2VsZWN0aW9uU3RhcnQsZW5kOmcuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2g9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBrPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpO2lmKGsmJjAhPT1rLnJhbmdlQ291bnQpe2g9ay5hbmNob3JOb2RlO3ZhciBsPWsuYW5jaG9yT2Zmc2V0LFxubT1rLmZvY3VzTm9kZTtrPWsuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsbS5ub2RlVHlwZX1jYXRjaCh3Yil7aD1udWxsO2JyZWFrIGF9dmFyIHA9MCx4PS0xLHo9LTEsY2E9MCxEPTAsdD1nLHk9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciBBOzspe3QhPT1ofHwwIT09bCYmMyE9PXQubm9kZVR5cGV8fCh4PXArbCk7dCE9PW18fDAhPT1rJiYzIT09dC5ub2RlVHlwZXx8KHo9cCtrKTszPT09dC5ub2RlVHlwZSYmKHArPXQubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PShBPXQuZmlyc3RDaGlsZCkpYnJlYWs7eT10O3Q9QX1mb3IoOzspe2lmKHQ9PT1nKWJyZWFrIGI7eT09PWgmJisrY2E9PT1sJiYoeD1wKTt5PT09bSYmKytEPT09ayYmKHo9cCk7aWYobnVsbCE9PShBPXQubmV4dFNpYmxpbmcpKWJyZWFrO3Q9eTt5PXQucGFyZW50Tm9kZX10PUF9aD0tMT09PXh8fC0xPT09ej9udWxsOntzdGFydDp4LGVuZDp6fX1lbHNlIGg9bnVsbH1oPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9XG5udWxsO0VkPXthY3RpdmVFbGVtZW50RGV0YWNoZWQ6bnVsbCxmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO1k9ZTtkbyB0cnl7VGooKX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IoZz1hLGg9YjtudWxsIT09WTspe3ZhciBxPVkuZWZmZWN0VGFnO3EmMTYmJlJiKFkuc3RhdGVOb2RlLFwiXCIpO2lmKHEmMTI4KXt2YXIgQj1ZLmFsdGVybmF0ZTtpZihudWxsIT09Qil7dmFyIHc9Qi5yZWY7bnVsbCE9PXcmJihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdz93KG51bGwpOncuY3VycmVudD1udWxsKX19c3dpdGNoKHEmMTAzOCl7Y2FzZSAyOlBpKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj1cbi0xMDI1O1NpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgNDpTaShZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDg6bD1ZLE1pKGcsbCxoKSxOaShsKX1ZPVkubmV4dEVmZmVjdH19Y2F0Y2god2Ipe2lmKG51bGw9PT1ZKXRocm93IEVycm9yKHUoMzMwKSk7RWkoWSx3Yik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO3c9RWQ7Qj14ZCgpO3E9dy5mb2N1c2VkRWxlbTtoPXcuc2VsZWN0aW9uUmFuZ2U7aWYoQiE9PXEmJnEmJnEub3duZXJEb2N1bWVudCYmd2QocS5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxxKSl7bnVsbCE9PWgmJnlkKHEpJiYoQj1oLnN0YXJ0LHc9aC5lbmQsdm9pZCAwPT09dyYmKHc9QiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD1CLHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKHcscS52YWx1ZS5sZW5ndGgpKToodz0oQj1xLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmQi5kZWZhdWx0Vmlld3x8d2luZG93LHcuZ2V0U2VsZWN0aW9uJiZcbih3PXcuZ2V0U2VsZWN0aW9uKCksbD1xLnRleHRDb250ZW50Lmxlbmd0aCxnPU1hdGgubWluKGguc3RhcnQsbCksaD12b2lkIDA9PT1oLmVuZD9nOk1hdGgubWluKGguZW5kLGwpLCF3LmV4dGVuZCYmZz5oJiYobD1oLGg9ZyxnPWwpLGw9dmQocSxnKSxtPXZkKHEsaCksbCYmbSYmKDEhPT13LnJhbmdlQ291bnR8fHcuYW5jaG9yTm9kZSE9PWwubm9kZXx8dy5hbmNob3JPZmZzZXQhPT1sLm9mZnNldHx8dy5mb2N1c05vZGUhPT1tLm5vZGV8fHcuZm9jdXNPZmZzZXQhPT1tLm9mZnNldCkmJihCPUIuY3JlYXRlUmFuZ2UoKSxCLnNldFN0YXJ0KGwubm9kZSxsLm9mZnNldCksdy5yZW1vdmVBbGxSYW5nZXMoKSxnPmg/KHcuYWRkUmFuZ2UoQiksdy5leHRlbmQobS5ub2RlLG0ub2Zmc2V0KSk6KEIuc2V0RW5kKG0ubm9kZSxtLm9mZnNldCksdy5hZGRSYW5nZShCKSkpKSkpO0I9W107Zm9yKHc9cTt3PXcucGFyZW50Tm9kZTspMT09PXcubm9kZVR5cGUmJkIucHVzaCh7ZWxlbWVudDp3LGxlZnQ6dy5zY3JvbGxMZWZ0LFxudG9wOncuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHEuZm9jdXMmJnEuZm9jdXMoKTtmb3IocT0wO3E8Qi5sZW5ndGg7cSsrKXc9QltxXSx3LmVsZW1lbnQuc2Nyb2xsTGVmdD13LmxlZnQsdy5lbGVtZW50LnNjcm9sbFRvcD13LnRvcH1mZD0hIURkO0VkPURkPW51bGw7YS5jdXJyZW50PWM7WT1lO2RvIHRyeXtmb3IocT1hO251bGwhPT1ZOyl7dmFyIHViPVkuZWZmZWN0VGFnO3ViJjM2JiZKaShxLFkuYWx0ZXJuYXRlLFkpO2lmKHViJjEyOCl7Qj12b2lkIDA7dmFyIHZiPVkucmVmO2lmKG51bGwhPT12Yil7dmFyIFhjPVkuc3RhdGVOb2RlO3N3aXRjaChZLnRhZyl7Y2FzZSA1OkI9WGM7YnJlYWs7ZGVmYXVsdDpCPVhjfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB2Yj92YihCKTp2Yi5jdXJyZW50PUJ9fVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1cbm51bGw7VmYoKTtXPWZ9ZWxzZSBhLmN1cnJlbnQ9YztpZihxailxaj0hMSxyaj1hLHNqPWI7ZWxzZSBmb3IoWT1lO251bGwhPT1ZOyliPVkubmV4dEVmZmVjdCxZLm5leHRFZmZlY3Q9bnVsbCxZPWI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7MD09PWImJihhaj1udWxsKTsxMDczNzQxODIzPT09Yj9hPT09dmo/dWorKzoodWo9MCx2aj1hKTp1aj0wO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBVaiYmVWooYy5zdGF0ZU5vZGUsZCk7WihhKTtpZihZaSl0aHJvdyBZaT0hMSxhPVppLFppPW51bGwsYTtpZigoVyZlaikhPT1WKXJldHVybiBudWxsO2dnKCk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gVGooKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkdpKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHxxanx8KHFqPSEwLGRnKDk3LGZ1bmN0aW9uKCl7RGooKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBEaigpe2lmKDkwIT09c2ope3ZhciBhPTk3PHNqPzk3OnNqO3NqPTkwO3JldHVybiBjZyhhLFZqKX19ZnVuY3Rpb24gVmooKXtpZihudWxsPT09cmopcmV0dXJuITE7dmFyIGE9cmo7cmo9bnVsbDtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgzMzEpKTt2YXIgYj1XO1d8PWdqO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpIaSg1LGMpLElpKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKHUoMzMwKSk7RWkoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO2dnKCk7cmV0dXJuITB9XG5mdW5jdGlvbiBXaihhLGIsYyl7Yj1BaShjLGIpO2I9WGkoYSxiLDEwNzM3NDE4MjMpO3hnKGEsYik7YT14aihhLDEwNzM3NDE4MjMpO251bGwhPT1hJiZaKGEpfWZ1bmN0aW9uIEVpKGEsYil7aWYoMz09PWEudGFnKVdqKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7V2ooYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09YWp8fCFhai5oYXMoZCkpKXthPUFpKGIsYSk7YT0kaShjLGEsMTA3Mzc0MTgyMyk7eGcoYyxhKTtjPXhqKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gT2ooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXZpfHxTPT09dWkmJjEwNzM3NDE4MjM9PT1saiYmJGYoKS1UaTxwaj9FaihhLFUpOm9qPSEwOkFqKGEsYykmJihiPWEubGFzdFBpbmdlZFRpbWUsMCE9PWImJmI8Y3x8KGEubGFzdFBpbmdlZFRpbWU9YyxaKGEpKSl9ZnVuY3Rpb24gVmkoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1HZygpLGI9SGcoYixhLG51bGwpKTthPXhqKGEsYik7bnVsbCE9PWEmJlooYSl9dmFyIFJqO1xuUmo9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpe3ZhciBlPWIucGVuZGluZ1Byb3BzO2lmKGEubWVtb2l6ZWRQcm9wcyE9PWV8fEsuY3VycmVudClyZz0hMDtlbHNle2lmKGQ8Yyl7cmc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6aGkoYik7WGgoKTticmVhaztjYXNlIDU6ZmgoYik7aWYoYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbilyZXR1cm4gYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxudWxsO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJkdmKGIpO2JyZWFrO2Nhc2UgNDpkaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7ZT1iLnR5cGUuX2NvbnRleHQ7SShqZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7XG5pZigwIT09ZCYmZD49YylyZXR1cm4gamkoYSxiLGMpO0koTSxNLmN1cnJlbnQmMSk7Yj0kaChhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfUkoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gbWkoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0koTSxNLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiAkaChhLGIsYyl9cmc9ITF9fWVsc2Ugcmc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9Q2YoYixKLmN1cnJlbnQpO3FnKGIsYyk7ZT1vaChudWxsLFxuYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEwoZCkpe3ZhciBmPSEwO0dmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3VnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZGZyhiLGQsZyxhKTtlLnVwZGF0ZXI9Smc7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjtOZyhiLGQsYSxjKTtiPWdpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9XG5udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7b2IoZSk7aWYoMSE9PWUuX3N0YXR1cyl0aHJvdyBlLl9yZXN1bHQ7ZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1YaihlKTthPWlnKGUsYSk7c3dpdGNoKGYpe2Nhc2UgMDpiPWRpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE6Yj1maShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxMTpiPVpoKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDE0OmI9YWkobnVsbCxiLGUsaWcoZS50eXBlLGEpLGQsYyk7YnJlYWsgYX10aHJvdyBFcnJvcih1KDMwNixlLFwiXCIpKTt9cmV0dXJuIGI7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGRpKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLGZpKGEsYixkLGUsYyk7XG5jYXNlIDM6aGkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih1KDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt2ZyhhLGIpO3pnKGIsZCxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpWGgoKSxiPSRoKGEsYixjKTtlbHNle2lmKGU9Yi5zdGF0ZU5vZGUuaHlkcmF0ZSlQaD1KZChiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLE9oPWIsZT1RaD0hMDtpZihlKWZvcihjPVlnKGIsbnVsbCxkLGMpLGIuY2hpbGQ9YztjOyljLmVmZmVjdFRhZz1jLmVmZmVjdFRhZyYtM3wxMDI0LGM9Yy5zaWJsaW5nO2Vsc2UgUihhLGIsZCxjKSxYaCgpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIGZoKGIpLG51bGw9PT1hJiZVaChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOlxubnVsbCxnPWUuY2hpbGRyZW4sR2QoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkdkKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLGVpKGEsYiksYi5tb2RlJjQmJjEhPT1jJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihSKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZVaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGppKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVhnKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLFpoKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBSKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUihhLFxuYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTt2YXIgaD1iLnR5cGUuX2NvbnRleHQ7SShqZyxoLl9jdXJyZW50VmFsdWUpO2guX2N1cnJlbnRWYWx1ZT1mO2lmKG51bGwhPT1nKWlmKGg9Zy52YWx1ZSxmPSRlKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MCwwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFLLmN1cnJlbnQpe2I9JGgoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGs9aC5kZXBlbmRlbmNpZXM7aWYobnVsbCE9PVxuayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1rLmZpcnN0Q29udGV4dDtudWxsIT09bDspe2lmKGwuY29udGV4dD09PWQmJjAhPT0obC5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGw9d2coYyxudWxsKSxsLnRhZz0yLHhnKGgsbCkpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmbC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTtwZyhoLnJldHVybixjKTtrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWw9bC5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/bnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPVxuZ31SKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHFnKGIsYyksZT1zZyhlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9aWcoZSxiLnBlbmRpbmdQcm9wcyksZj1pZyhlLnR5cGUsZiksYWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGNpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTppZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEwoZCk/KGE9ITAsR2YoYikpOmE9ITEscWcoYixjKSxMZyhiLGQsZSksTmcoYixkLGUsYyksZ2kobnVsbCxcbmIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih1KDE1NixiLnRhZykpO307dmFyIFVqPW51bGwsTGk9bnVsbDtmdW5jdGlvbiBZaihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtVaj1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtMaT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFpqKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gU2goYSxiLGMsZCl7cmV0dXJuIG5ldyBaaihhLGIsYyxkKX1cbmZ1bmN0aW9uIGJpKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gWGooYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGJpKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1nYilyZXR1cm4gMTE7aWYoYT09PWpiKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFNnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9U2goYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Yi5leHBpcmF0aW9uVGltZSxcbmZpcnN0Q29udGV4dDpiLmZpcnN0Q29udGV4dCxyZXNwb25kZXJzOmIucmVzcG9uZGVyc307Yy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBVZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpYmkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuIFdnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgZmI6Zz04O2V8PTc7YnJlYWs7Y2FzZSBiYjpnPTg7ZXw9MTticmVhaztjYXNlIGNiOnJldHVybiBhPVNoKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9Y2IsYS50eXBlPWNiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaGI6cmV0dXJuIGE9U2goMTMsYyxiLGUpLGEudHlwZT1oYixhLmVsZW1lbnRUeXBlPWhiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgaWI6cmV0dXJuIGE9U2goMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9aWIsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGRiOmc9XG4xMDticmVhayBhO2Nhc2UgZWI6Zz05O2JyZWFrIGE7Y2FzZSBnYjpnPTExO2JyZWFrIGE7Y2FzZSBqYjpnPTE0O2JyZWFrIGE7Y2FzZSBrYjpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgbGI6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHUoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9U2goZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBXZyhhLGIsYyxkKXthPVNoKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBUZyhhLGIsYyl7YT1TaCg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBWZyhhLGIsYyl7Yj1TaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGFrKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBBaihhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lO2E9YS5sYXN0U3VzcGVuZGVkVGltZTtyZXR1cm4gMCE9PWMmJmM+PWImJmE8PWJ9ZnVuY3Rpb24geGkoYSxiKXt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZSxkPWEubGFzdFN1c3BlbmRlZFRpbWU7YzxiJiYoYS5maXJzdFN1c3BlbmRlZFRpbWU9Yik7aWYoZD5ifHwwPT09YylhLmxhc3RTdXNwZW5kZWRUaW1lPWI7Yjw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7Yjw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKX1cbmZ1bmN0aW9uIHlpKGEsYil7Yj5hLmZpcnN0UGVuZGluZ1RpbWUmJihhLmZpcnN0UGVuZGluZ1RpbWU9Yik7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7MCE9PWMmJihiPj1jP2EuZmlyc3RTdXNwZW5kZWRUaW1lPWEubGFzdFN1c3BlbmRlZFRpbWU9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9MDpiPj1hLmxhc3RTdXNwZW5kZWRUaW1lJiYoYS5sYXN0U3VzcGVuZGVkVGltZT1iKzEpLGI+YS5uZXh0S25vd25QZW5kaW5nTGV2ZWwmJihhLm5leHRLbm93blBlbmRpbmdMZXZlbD1iKSl9ZnVuY3Rpb24gQ2ooYSxiKXt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWJ9XG5mdW5jdGlvbiBiayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1HZygpLGc9RGcuc3VzcGVuc2U7Zj1IZyhmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZihkYyhjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcih1KDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEwoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih1KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihMKGspKXtjPUZmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUFmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9d2coZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTt4ZyhlLGIpO0lnKGUsZik7cmV0dXJuIGZ9ZnVuY3Rpb24gY2soYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBkayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO251bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkJiZhLnJldHJ5VGltZTxiJiYoYS5yZXRyeVRpbWU9Yil9ZnVuY3Rpb24gZWsoYSxiKXtkayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmZGsoYSxiKX1cbmZ1bmN0aW9uIGZrKGEsYixjKXtjPW51bGwhPWMmJiEwPT09Yy5oeWRyYXRlO3ZhciBkPW5ldyBhayhhLGIsYyksZT1TaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7ZC5jdXJyZW50PWU7ZS5zdGF0ZU5vZGU9ZDt1ZyhlKTthW09kXT1kLmN1cnJlbnQ7YyYmMCE9PWImJkpjKGEsOT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQpO3RoaXMuX2ludGVybmFsUm9vdD1kfWZrLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7YmsoYSx0aGlzLl9pbnRlcm5hbFJvb3QsbnVsbCxudWxsKX07ZmsucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9pbnRlcm5hbFJvb3QsYj1hLmNvbnRhaW5lckluZm87YmsobnVsbCxhLG51bGwsZnVuY3Rpb24oKXtiW09kXT1udWxsfSl9O1xuZnVuY3Rpb24gZ2soYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfWZ1bmN0aW9uIGhrKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgZmsoYSwwLGI/e2h5ZHJhdGU6ITB9OnZvaWQgMCl9XG5mdW5jdGlvbiBpayhhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2guY2FsbChhKX19YmsoYixnLGEsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1oayhjLGQpO2c9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1jayhnKTtrLmNhbGwoYSl9fU5qKGZ1bmN0aW9uKCl7YmsoYixnLGEsZSl9KX1yZXR1cm4gY2soZyl9ZnVuY3Rpb24gamsoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbndjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWhnKEdnKCksMTUwLDEwMCk7SWcoYSxiKTtlayhhLGIpfX07eGM9ZnVuY3Rpb24oYSl7MTM9PT1hLnRhZyYmKElnKGEsMyksZWsoYSwzKSl9O3ljPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUdnKCk7Yj1IZyhiLGEsbnVsbCk7SWcoYSxiKTtlayhhLGIpfX07XG56YT1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOkNiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1RZChkKTtpZighZSl0aHJvdyBFcnJvcih1KDkwKSk7eWIoZCk7Q2IoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOktiKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZIYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0ZhPU1qO1xuR2E9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1XO1d8PTQ7dHJ5e3JldHVybiBjZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtXPWYsVz09PVYmJmdnKCl9fTtIYT1mdW5jdGlvbigpeyhXJigxfGZqfGdqKSk9PT1WJiYoTGooKSxEaigpKX07SWE9ZnVuY3Rpb24oYSxiKXt2YXIgYz1XO1d8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7Vz1jLFc9PT1WJiZnZygpfX07ZnVuY3Rpb24ga2soYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gamsoYSxiLG51bGwsYyl9dmFyIGxrPXtFdmVudHM6W05jLFBkLFFkLHhhLHRhLFhkLGZ1bmN0aW9uKGEpe2pjKGEsV2QpfSxEYSxFYSxpZCxtYyxEaix7Y3VycmVudDohMX1dfTtcbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBZaihuKHt9LGEse292ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6V2EuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9LGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dGMsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi4xMy4xXCIsXG5yZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWxrO2V4cG9ydHMuY3JlYXRlUG9ydGFsPWtrO2V4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHUoMTg4KSk7dGhyb3cgRXJyb3IodSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1oYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O1xuZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXtpZigoVyYoZmp8Z2opKSE9PVYpdGhyb3cgRXJyb3IodSgxODcpKTt2YXIgYz1XO1d8PTE7dHJ5e3JldHVybiBjZyg5OSxhLmJpbmQobnVsbCxiKSl9ZmluYWxseXtXPWMsZ2coKX19O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCEwLGMpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIWdrKGIpKXRocm93IEVycm9yKHUoMjAwKSk7cmV0dXJuIGlrKG51bGwsYSxiLCExLGMpfTtcbmV4cG9ydHMudW5tb3VudENvbXBvbmVudEF0Tm9kZT1mdW5jdGlvbihhKXtpZighZ2soYSkpdGhyb3cgRXJyb3IodSg0MCkpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KE5qKGZ1bmN0aW9uKCl7aWsobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbDthW09kXT1udWxsfSl9KSwhMCk6ITF9O2V4cG9ydHMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM9TWo7ZXhwb3J0cy51bnN0YWJsZV9jcmVhdGVQb3J0YWw9ZnVuY3Rpb24oYSxiKXtyZXR1cm4ga2soYSxiLDI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsKX07XG5leHBvcnRzLnVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjLGQpe2lmKCFnayhjKSl0aHJvdyBFcnJvcih1KDIwMCkpO2lmKG51bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcil0aHJvdyBFcnJvcih1KDM4KSk7cmV0dXJuIGlrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xMy4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjE5LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsayxsO1xuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHA9bnVsbCxxPW51bGwsdD1mdW5jdGlvbigpe2lmKG51bGwhPT1wKXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3AoITAsYSk7cD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodCwwKSxiO319LHU9RGF0ZS5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLXV9O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXA/c2V0VGltZW91dChmLDAsYSk6KHA9YSxzZXRUaW1lb3V0KHQsMCkpfTtnPWZ1bmN0aW9uKGEsYil7cT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQocSl9O2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX07bD1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB3PXdpbmRvdy5wZXJmb3JtYW5jZSx4PXdpbmRvdy5EYXRlLFxueT13aW5kb3cuc2V0VGltZW91dCx6PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgQT13aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKX1pZihcIm9iamVjdFwiPT09XG50eXBlb2YgdyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHcubm93KWV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHcubm93KCl9O2Vsc2V7dmFyIEI9eC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpLUJ9fXZhciBDPSExLEQ9bnVsbCxFPS0xLEY9NSxHPTA7az1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1HfTtsPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3QgdW5zdXBwb3J0ZWRcIik6Rj0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEg9bmV3IE1lc3NhZ2VDaGFubmVsLEk9SC5wb3J0MjtILnBvcnQxLm9ubWVzc2FnZT1cbmZ1bmN0aW9uKCl7aWYobnVsbCE9PUQpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7Rz1hK0Y7dHJ5e0QoITAsYSk/SS5wb3N0TWVzc2FnZShudWxsKTooQz0hMSxEPW51bGwpfWNhdGNoKGIpe3Rocm93IEkucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQz0hMX07Zj1mdW5jdGlvbihhKXtEPWE7Q3x8KEM9ITAsSS5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtFPXkoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3ooRSk7RT0tMX19ZnVuY3Rpb24gSihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxLKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBMKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBNKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPksobixjKSl2b2lkIDAhPT1yJiYwPksocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPksocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEsoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIE49W10sTz1bXSxQPTEsUT1udWxsLFI9MyxTPSExLFQ9ITEsVT0hMTtcbmZ1bmN0aW9uIFYoYSl7Zm9yKHZhciBiPUwoTyk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylNKE8pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpTShPKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEooTixiKTtlbHNlIGJyZWFrO2I9TChPKX19ZnVuY3Rpb24gVyhhKXtVPSExO1YoYSk7aWYoIVQpaWYobnVsbCE9PUwoTikpVD0hMCxmKFgpO2Vsc2V7dmFyIGI9TChPKTtudWxsIT09YiYmZyhXLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFgoYSxiKXtUPSExO1UmJihVPSExLGgoKSk7Uz0hMDt2YXIgYz1SO3RyeXtWKGIpO2ZvcihRPUwoTik7bnVsbCE9PVEmJighKFEuZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFrKCkpOyl7dmFyIGQ9US5jYWxsYmFjaztpZihudWxsIT09ZCl7US5jYWxsYmFjaz1udWxsO1I9US5wcmlvcml0eUxldmVsO3ZhciBlPWQoUS5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP1EuY2FsbGJhY2s9ZTpRPT09TChOKSYmTShOKTtWKGIpfWVsc2UgTShOKTtRPUwoTil9aWYobnVsbCE9PVEpdmFyIG09ITA7ZWxzZXt2YXIgbj1MKE8pO251bGwhPT1uJiZnKFcsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e1E9bnVsbCxSPWMsUz0hMX19XG5mdW5jdGlvbiBZKGEpe3N3aXRjaChhKXtjYXNlIDE6cmV0dXJuLTE7Y2FzZSAyOnJldHVybiAyNTA7Y2FzZSA1OnJldHVybiAxMDczNzQxODIzO2Nhc2UgNDpyZXR1cm4gMUU0O2RlZmF1bHQ6cmV0dXJuIDVFM319dmFyIFo9bDtleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7VHx8U3x8KFQ9ITAsZihYKSl9O1xuZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBSfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEwoTil9O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUil7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Un12YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1I9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVo7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1SO1I9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1I9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpZKGEpfWVsc2UgYz1ZKGEpLGU9ZDtjPWUrYzthPXtpZDpQKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSxKKE8sYSksbnVsbD09PUwoTikmJmE9PT1MKE8pJiYoVT9oKCk6VT0hMCxnKFcsZS1kKSkpOihhLnNvcnRJbmRleD1jLEooTixhKSxUfHxTfHwoVD0hMCxmKFgpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7VihhKTt2YXIgYj1MKE4pO3JldHVybiBiIT09USYmbnVsbCE9PVEmJm51bGwhPT1iJiZudWxsIT09Yi5jYWxsYmFjayYmYi5zdGFydFRpbWU8PWEmJmIuZXhwaXJhdGlvblRpbWU8US5leHBpcmF0aW9uVGltZXx8aygpfTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1SO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtSPWN9fX07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYm9keU9wZW5DbGFzc05hbWUgPSBleHBvcnRzLnBvcnRhbENsYXNzTmFtZSA9IHVuZGVmaW5lZDtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcmVhY3REb20gPSByZXF1aXJlKFwicmVhY3QtZG9tXCIpO1xuXG52YXIgX3JlYWN0RG9tMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0RG9tKTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKFwicHJvcC10eXBlc1wiKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9Nb2RhbFBvcnRhbCA9IHJlcXVpcmUoXCIuL01vZGFsUG9ydGFsXCIpO1xuXG52YXIgX01vZGFsUG9ydGFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX01vZGFsUG9ydGFsKTtcblxudmFyIF9hcmlhQXBwSGlkZXIgPSByZXF1aXJlKFwiLi4vaGVscGVycy9hcmlhQXBwSGlkZXJcIik7XG5cbnZhciBhcmlhQXBwSGlkZXIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfYXJpYUFwcEhpZGVyKTtcblxudmFyIF9zYWZlSFRNTEVsZW1lbnQgPSByZXF1aXJlKFwiLi4vaGVscGVycy9zYWZlSFRNTEVsZW1lbnRcIik7XG5cbnZhciBfc2FmZUhUTUxFbGVtZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NhZmVIVE1MRWxlbWVudCk7XG5cbnZhciBfcmVhY3RMaWZlY3ljbGVzQ29tcGF0ID0gcmVxdWlyZShcInJlYWN0LWxpZmVjeWNsZXMtY29tcGF0XCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IHJldHVybiBuZXdPYmo7IH0gfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBwb3J0YWxDbGFzc05hbWUgPSBleHBvcnRzLnBvcnRhbENsYXNzTmFtZSA9IFwiUmVhY3RNb2RhbFBvcnRhbFwiO1xudmFyIGJvZHlPcGVuQ2xhc3NOYW1lID0gZXhwb3J0cy5ib2R5T3BlbkNsYXNzTmFtZSA9IFwiUmVhY3RNb2RhbF9fQm9keS0tb3BlblwiO1xuXG52YXIgaXNSZWFjdDE2ID0gX3JlYWN0RG9tMi5kZWZhdWx0LmNyZWF0ZVBvcnRhbCAhPT0gdW5kZWZpbmVkO1xuXG52YXIgZ2V0Q3JlYXRlUG9ydGFsID0gZnVuY3Rpb24gZ2V0Q3JlYXRlUG9ydGFsKCkge1xuICByZXR1cm4gaXNSZWFjdDE2ID8gX3JlYWN0RG9tMi5kZWZhdWx0LmNyZWF0ZVBvcnRhbCA6IF9yZWFjdERvbTIuZGVmYXVsdC51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjtcbn07XG5cbmZ1bmN0aW9uIGdldFBhcmVudEVsZW1lbnQocGFyZW50U2VsZWN0b3IpIHtcbiAgcmV0dXJuIHBhcmVudFNlbGVjdG9yKCk7XG59XG5cbnZhciBNb2RhbCA9IGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNb2RhbCwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTW9kYWwoKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1vZGFsKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9yZWYgPSBNb2RhbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKE1vZGFsKSkuY2FsbC5hcHBseShfcmVmLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMucmVtb3ZlUG9ydGFsID0gZnVuY3Rpb24gKCkge1xuICAgICAgIWlzUmVhY3QxNiAmJiBfcmVhY3REb20yLmRlZmF1bHQudW5tb3VudENvbXBvbmVudEF0Tm9kZShfdGhpcy5ub2RlKTtcbiAgICAgIHZhciBwYXJlbnQgPSBnZXRQYXJlbnRFbGVtZW50KF90aGlzLnByb3BzLnBhcmVudFNlbGVjdG9yKTtcbiAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgcGFyZW50LnJlbW92ZUNoaWxkKF90aGlzLm5vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgY29uc29sZS53YXJuKCdSZWFjdC1Nb2RhbDogXCJwYXJlbnRTZWxlY3RvclwiIHByb3AgZGlkIG5vdCByZXR1cm5lZCBhbnkgRE9NICcgKyBcImVsZW1lbnQuIE1ha2Ugc3VyZSB0aGF0IHRoZSBwYXJlbnQgZWxlbWVudCBpcyB1bm1vdW50ZWQgdG8gXCIgKyBcImF2b2lkIGFueSBtZW1vcnkgbGVha3MuXCIpO1xuICAgICAgfVxuICAgIH0sIF90aGlzLnBvcnRhbFJlZiA9IGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLnBvcnRhbCA9IHJlZjtcbiAgICB9LCBfdGhpcy5yZW5kZXJQb3J0YWwgPSBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgIHZhciBjcmVhdGVQb3J0YWwgPSBnZXRDcmVhdGVQb3J0YWwoKTtcbiAgICAgIHZhciBwb3J0YWwgPSBjcmVhdGVQb3J0YWwoX3RoaXMsIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9Nb2RhbFBvcnRhbDIuZGVmYXVsdCwgX2V4dGVuZHMoeyBkZWZhdWx0U3R5bGVzOiBNb2RhbC5kZWZhdWx0U3R5bGVzIH0sIHByb3BzKSksIF90aGlzLm5vZGUpO1xuICAgICAgX3RoaXMucG9ydGFsUmVmKHBvcnRhbCk7XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTW9kYWwsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKCFfc2FmZUhUTUxFbGVtZW50LmNhblVzZURPTSkgcmV0dXJuO1xuXG4gICAgICBpZiAoIWlzUmVhY3QxNikge1xuICAgICAgICB0aGlzLm5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgfVxuICAgICAgdGhpcy5ub2RlLmNsYXNzTmFtZSA9IHRoaXMucHJvcHMucG9ydGFsQ2xhc3NOYW1lO1xuXG4gICAgICB2YXIgcGFyZW50ID0gZ2V0UGFyZW50RWxlbWVudCh0aGlzLnByb3BzLnBhcmVudFNlbGVjdG9yKTtcbiAgICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0aGlzLm5vZGUpO1xuXG4gICAgICAhaXNSZWFjdDE2ICYmIHRoaXMucmVuZGVyUG9ydGFsKHRoaXMucHJvcHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIHZhciBwcmV2UGFyZW50ID0gZ2V0UGFyZW50RWxlbWVudChwcmV2UHJvcHMucGFyZW50U2VsZWN0b3IpO1xuICAgICAgdmFyIG5leHRQYXJlbnQgPSBnZXRQYXJlbnRFbGVtZW50KHRoaXMucHJvcHMucGFyZW50U2VsZWN0b3IpO1xuICAgICAgcmV0dXJuIHsgcHJldlBhcmVudDogcHJldlBhcmVudCwgbmV4dFBhcmVudDogbmV4dFBhcmVudCB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnREaWRVcGRhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcywgXywgc25hcHNob3QpIHtcbiAgICAgIGlmICghX3NhZmVIVE1MRWxlbWVudC5jYW5Vc2VET00pIHJldHVybjtcbiAgICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGlzT3BlbiA9IF9wcm9wcy5pc09wZW4sXG4gICAgICAgICAgcG9ydGFsQ2xhc3NOYW1lID0gX3Byb3BzLnBvcnRhbENsYXNzTmFtZTtcblxuXG4gICAgICBpZiAocHJldlByb3BzLnBvcnRhbENsYXNzTmFtZSAhPT0gcG9ydGFsQ2xhc3NOYW1lKSB7XG4gICAgICAgIHRoaXMubm9kZS5jbGFzc05hbWUgPSBwb3J0YWxDbGFzc05hbWU7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2UGFyZW50ID0gc25hcHNob3QucHJldlBhcmVudCxcbiAgICAgICAgICBuZXh0UGFyZW50ID0gc25hcHNob3QubmV4dFBhcmVudDtcblxuICAgICAgaWYgKG5leHRQYXJlbnQgIT09IHByZXZQYXJlbnQpIHtcbiAgICAgICAgcHJldlBhcmVudC5yZW1vdmVDaGlsZCh0aGlzLm5vZGUpO1xuICAgICAgICBuZXh0UGFyZW50LmFwcGVuZENoaWxkKHRoaXMubm9kZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIFN0b3AgdW5uZWNlc3NhcnkgcmVuZGVycyBpZiBtb2RhbCBpcyByZW1haW5pbmcgY2xvc2VkXG4gICAgICBpZiAoIXByZXZQcm9wcy5pc09wZW4gJiYgIWlzT3BlbikgcmV0dXJuO1xuXG4gICAgICAhaXNSZWFjdDE2ICYmIHRoaXMucmVuZGVyUG9ydGFsKHRoaXMucHJvcHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICghX3NhZmVIVE1MRWxlbWVudC5jYW5Vc2VET00gfHwgIXRoaXMubm9kZSB8fCAhdGhpcy5wb3J0YWwpIHJldHVybjtcblxuICAgICAgdmFyIHN0YXRlID0gdGhpcy5wb3J0YWwuc3RhdGU7XG4gICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIHZhciBjbG9zZXNBdCA9IHN0YXRlLmlzT3BlbiAmJiB0aGlzLnByb3BzLmNsb3NlVGltZW91dE1TICYmIChzdGF0ZS5jbG9zZXNBdCB8fCBub3cgKyB0aGlzLnByb3BzLmNsb3NlVGltZW91dE1TKTtcblxuICAgICAgaWYgKGNsb3Nlc0F0KSB7XG4gICAgICAgIGlmICghc3RhdGUuYmVmb3JlQ2xvc2UpIHtcbiAgICAgICAgICB0aGlzLnBvcnRhbC5jbG9zZVdpdGhUaW1lb3V0KCk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRUaW1lb3V0KHRoaXMucmVtb3ZlUG9ydGFsLCBjbG9zZXNBdCAtIG5vdyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnJlbW92ZVBvcnRhbCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgaWYgKCFfc2FmZUhUTUxFbGVtZW50LmNhblVzZURPTSB8fCAhaXNSZWFjdDE2KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMubm9kZSAmJiBpc1JlYWN0MTYpIHtcbiAgICAgICAgdGhpcy5ub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIH1cblxuICAgICAgdmFyIGNyZWF0ZVBvcnRhbCA9IGdldENyZWF0ZVBvcnRhbCgpO1xuICAgICAgcmV0dXJuIGNyZWF0ZVBvcnRhbChfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfTW9kYWxQb3J0YWwyLmRlZmF1bHQsIF9leHRlbmRzKHtcbiAgICAgICAgcmVmOiB0aGlzLnBvcnRhbFJlZixcbiAgICAgICAgZGVmYXVsdFN0eWxlczogTW9kYWwuZGVmYXVsdFN0eWxlc1xuICAgICAgfSwgdGhpcy5wcm9wcykpLCB0aGlzLm5vZGUpO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiBcInNldEFwcEVsZW1lbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0QXBwRWxlbWVudChlbGVtZW50KSB7XG4gICAgICBhcmlhQXBwSGlkZXIuc2V0RWxlbWVudChlbGVtZW50KTtcbiAgICB9XG5cbiAgICAvKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9uby11bnVzZWQtcHJvcC10eXBlcyAqL1xuXG4gICAgLyogZXNsaW50LWVuYWJsZSByZWFjdC9uby11bnVzZWQtcHJvcC10eXBlcyAqL1xuXG4gIH1dKTtcblxuICByZXR1cm4gTW9kYWw7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG5Nb2RhbC5wcm9wVHlwZXMgPSB7XG4gIGlzT3BlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLmlzUmVxdWlyZWQsXG4gIHN0eWxlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnNoYXBlKHtcbiAgICBjb250ZW50OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgICBvdmVybGF5OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdFxuICB9KSxcbiAgcG9ydGFsQ2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYm9keU9wZW5DbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBodG1sT3BlbkNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0LnNoYXBlKHtcbiAgICBiYXNlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGFmdGVyT3BlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBiZWZvcmVDbG9zZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcuaXNSZXF1aXJlZFxuICB9KV0pLFxuICBvdmVybGF5Q2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQuc2hhcGUoe1xuICAgIGJhc2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgYWZ0ZXJPcGVuOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIGJlZm9yZUNsb3NlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZy5pc1JlcXVpcmVkXG4gIH0pXSksXG4gIGFwcEVsZW1lbnQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQuaW5zdGFuY2VPZihfc2FmZUhUTUxFbGVtZW50Mi5kZWZhdWx0KSxcbiAgb25BZnRlck9wZW46IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgb25SZXF1ZXN0Q2xvc2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgY2xvc2VUaW1lb3V0TVM6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBhcmlhSGlkZUFwcDogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICBzaG91bGRGb2N1c0FmdGVyUmVuZGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHNob3VsZENsb3NlT25PdmVybGF5Q2xpY2s6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgc2hvdWxkUmV0dXJuRm9jdXNBZnRlckNsb3NlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHBhcmVudFNlbGVjdG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gIGFyaWE6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxuICBkYXRhOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgcm9sZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGNvbnRlbnRMYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIHNob3VsZENsb3NlT25Fc2M6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgb3ZlcmxheVJlZjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBjb250ZW50UmVmOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmNcbn07XG5Nb2RhbC5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzT3BlbjogZmFsc2UsXG4gIHBvcnRhbENsYXNzTmFtZTogcG9ydGFsQ2xhc3NOYW1lLFxuICBib2R5T3BlbkNsYXNzTmFtZTogYm9keU9wZW5DbGFzc05hbWUsXG4gIHJvbGU6IFwiZGlhbG9nXCIsXG4gIGFyaWFIaWRlQXBwOiB0cnVlLFxuICBjbG9zZVRpbWVvdXRNUzogMCxcbiAgc2hvdWxkRm9jdXNBZnRlclJlbmRlcjogdHJ1ZSxcbiAgc2hvdWxkQ2xvc2VPbkVzYzogdHJ1ZSxcbiAgc2hvdWxkQ2xvc2VPbk92ZXJsYXlDbGljazogdHJ1ZSxcbiAgc2hvdWxkUmV0dXJuRm9jdXNBZnRlckNsb3NlOiB0cnVlLFxuICBwYXJlbnRTZWxlY3RvcjogZnVuY3Rpb24gcGFyZW50U2VsZWN0b3IoKSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmJvZHk7XG4gIH1cbn07XG5Nb2RhbC5kZWZhdWx0U3R5bGVzID0ge1xuICBvdmVybGF5OiB7XG4gICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcInJnYmEoMjU1LCAyNTUsIDI1NSwgMC43NSlcIlxuICB9LFxuICBjb250ZW50OiB7XG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICB0b3A6IFwiNDBweFwiLFxuICAgIGxlZnQ6IFwiNDBweFwiLFxuICAgIHJpZ2h0OiBcIjQwcHhcIixcbiAgICBib3R0b206IFwiNDBweFwiLFxuICAgIGJvcmRlcjogXCIxcHggc29saWQgI2NjY1wiLFxuICAgIGJhY2tncm91bmQ6IFwiI2ZmZlwiLFxuICAgIG92ZXJmbG93OiBcImF1dG9cIixcbiAgICBXZWJraXRPdmVyZmxvd1Njcm9sbGluZzogXCJ0b3VjaFwiLFxuICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgICBwYWRkaW5nOiBcIjIwcHhcIlxuICB9XG59O1xuXG5cbigwLCBfcmVhY3RMaWZlY3ljbGVzQ29tcGF0LnBvbHlmaWxsKShNb2RhbCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IE1vZGFsOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZShcInJlYWN0XCIpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKFwicHJvcC10eXBlc1wiKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxudmFyIF9mb2N1c01hbmFnZXIgPSByZXF1aXJlKFwiLi4vaGVscGVycy9mb2N1c01hbmFnZXJcIik7XG5cbnZhciBmb2N1c01hbmFnZXIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfZm9jdXNNYW5hZ2VyKTtcblxudmFyIF9zY29wZVRhYiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3Njb3BlVGFiXCIpO1xuXG52YXIgX3Njb3BlVGFiMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Njb3BlVGFiKTtcblxudmFyIF9hcmlhQXBwSGlkZXIgPSByZXF1aXJlKFwiLi4vaGVscGVycy9hcmlhQXBwSGlkZXJcIik7XG5cbnZhciBhcmlhQXBwSGlkZXIgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfYXJpYUFwcEhpZGVyKTtcblxudmFyIF9jbGFzc0xpc3QgPSByZXF1aXJlKFwiLi4vaGVscGVycy9jbGFzc0xpc3RcIik7XG5cbnZhciBjbGFzc0xpc3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfY2xhc3NMaXN0KTtcblxudmFyIF9zYWZlSFRNTEVsZW1lbnQgPSByZXF1aXJlKFwiLi4vaGVscGVycy9zYWZlSFRNTEVsZW1lbnRcIik7XG5cbnZhciBfc2FmZUhUTUxFbGVtZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NhZmVIVE1MRWxlbWVudCk7XG5cbnZhciBfcG9ydGFsT3Blbkluc3RhbmNlcyA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3BvcnRhbE9wZW5JbnN0YW5jZXNcIik7XG5cbnZhciBfcG9ydGFsT3Blbkluc3RhbmNlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3J0YWxPcGVuSW5zdGFuY2VzKTtcblxucmVxdWlyZShcIi4uL2hlbHBlcnMvYm9keVRyYXBcIik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLy8gc28gdGhhdCBvdXIgQ1NTIGlzIHN0YXRpY2FsbHkgYW5hbHl6YWJsZVxudmFyIENMQVNTX05BTUVTID0ge1xuICBvdmVybGF5OiBcIlJlYWN0TW9kYWxfX092ZXJsYXlcIixcbiAgY29udGVudDogXCJSZWFjdE1vZGFsX19Db250ZW50XCJcbn07XG5cbnZhciBUQUJfS0VZID0gOTtcbnZhciBFU0NfS0VZID0gMjc7XG5cbnZhciBhcmlhSGlkZGVuSW5zdGFuY2VzID0gMDtcblxudmFyIE1vZGFsUG9ydGFsID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE1vZGFsUG9ydGFsLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNb2RhbFBvcnRhbChwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNb2RhbFBvcnRhbCk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTW9kYWxQb3J0YWwuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihNb2RhbFBvcnRhbCkpLmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLnNldE92ZXJsYXlSZWYgPSBmdW5jdGlvbiAob3ZlcmxheSkge1xuICAgICAgX3RoaXMub3ZlcmxheSA9IG92ZXJsYXk7XG4gICAgICBfdGhpcy5wcm9wcy5vdmVybGF5UmVmICYmIF90aGlzLnByb3BzLm92ZXJsYXlSZWYob3ZlcmxheSk7XG4gICAgfTtcblxuICAgIF90aGlzLnNldENvbnRlbnRSZWYgPSBmdW5jdGlvbiAoY29udGVudCkge1xuICAgICAgX3RoaXMuY29udGVudCA9IGNvbnRlbnQ7XG4gICAgICBfdGhpcy5wcm9wcy5jb250ZW50UmVmICYmIF90aGlzLnByb3BzLmNvbnRlbnRSZWYoY29udGVudCk7XG4gICAgfTtcblxuICAgIF90aGlzLmFmdGVyQ2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBhcHBFbGVtZW50ID0gX3RoaXMkcHJvcHMuYXBwRWxlbWVudCxcbiAgICAgICAgICBhcmlhSGlkZUFwcCA9IF90aGlzJHByb3BzLmFyaWFIaWRlQXBwLFxuICAgICAgICAgIGh0bWxPcGVuQ2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuaHRtbE9wZW5DbGFzc05hbWUsXG4gICAgICAgICAgYm9keU9wZW5DbGFzc05hbWUgPSBfdGhpcyRwcm9wcy5ib2R5T3BlbkNsYXNzTmFtZTtcblxuICAgICAgLy8gUmVtb3ZlIGNsYXNzZXMuXG5cbiAgICAgIGJvZHlPcGVuQ2xhc3NOYW1lICYmIGNsYXNzTGlzdC5yZW1vdmUoZG9jdW1lbnQuYm9keSwgYm9keU9wZW5DbGFzc05hbWUpO1xuXG4gICAgICBodG1sT3BlbkNsYXNzTmFtZSAmJiBjbGFzc0xpc3QucmVtb3ZlKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaHRtbFwiKVswXSwgaHRtbE9wZW5DbGFzc05hbWUpO1xuXG4gICAgICAvLyBSZXNldCBhcmlhLWhpZGRlbiBhdHRyaWJ1dGUgaWYgYWxsIG1vZGFscyBoYXZlIGJlZW4gcmVtb3ZlZFxuICAgICAgaWYgKGFyaWFIaWRlQXBwICYmIGFyaWFIaWRkZW5JbnN0YW5jZXMgPiAwKSB7XG4gICAgICAgIGFyaWFIaWRkZW5JbnN0YW5jZXMgLT0gMTtcblxuICAgICAgICBpZiAoYXJpYUhpZGRlbkluc3RhbmNlcyA9PT0gMCkge1xuICAgICAgICAgIGFyaWFBcHBIaWRlci5zaG93KGFwcEVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG91bGRGb2N1c0FmdGVyUmVuZGVyKSB7XG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG91bGRSZXR1cm5Gb2N1c0FmdGVyQ2xvc2UpIHtcbiAgICAgICAgICBmb2N1c01hbmFnZXIucmV0dXJuRm9jdXMoKTtcbiAgICAgICAgICBmb2N1c01hbmFnZXIudGVhcmRvd25TY29wZWRGb2N1cygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZvY3VzTWFuYWdlci5wb3BXaXRob3V0Rm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoX3RoaXMucHJvcHMub25BZnRlckNsb3NlKSB7XG4gICAgICAgIF90aGlzLnByb3BzLm9uQWZ0ZXJDbG9zZSgpO1xuICAgICAgfVxuXG4gICAgICBfcG9ydGFsT3Blbkluc3RhbmNlczIuZGVmYXVsdC5kZXJlZ2lzdGVyKF90aGlzKTtcbiAgICB9O1xuXG4gICAgX3RoaXMub3BlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmJlZm9yZU9wZW4oKTtcbiAgICAgIGlmIChfdGhpcy5zdGF0ZS5hZnRlck9wZW4gJiYgX3RoaXMuc3RhdGUuYmVmb3JlQ2xvc2UpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KF90aGlzLmNsb3NlVGltZXIpO1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGJlZm9yZUNsb3NlOiBmYWxzZSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy5zaG91bGRGb2N1c0FmdGVyUmVuZGVyKSB7XG4gICAgICAgICAgZm9jdXNNYW5hZ2VyLnNldHVwU2NvcGVkRm9jdXMoX3RoaXMubm9kZSk7XG4gICAgICAgICAgZm9jdXNNYW5hZ2VyLm1hcmtGb3JGb2N1c0xhdGVyKCk7XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7IGlzT3BlbjogdHJ1ZSB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoeyBhZnRlck9wZW46IHRydWUgfSk7XG5cbiAgICAgICAgICBpZiAoX3RoaXMucHJvcHMuaXNPcGVuICYmIF90aGlzLnByb3BzLm9uQWZ0ZXJPcGVuKSB7XG4gICAgICAgICAgICBfdGhpcy5wcm9wcy5vbkFmdGVyT3Blbih7XG4gICAgICAgICAgICAgIG92ZXJsYXlFbDogX3RoaXMub3ZlcmxheSxcbiAgICAgICAgICAgICAgY29udGVudEVsOiBfdGhpcy5jb250ZW50XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfdGhpcy5wcm9wcy5jbG9zZVRpbWVvdXRNUyA+IDApIHtcbiAgICAgICAgX3RoaXMuY2xvc2VXaXRoVGltZW91dCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuY2xvc2VXaXRob3V0VGltZW91dCgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5mb2N1c0NvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXMuY29udGVudCAmJiAhX3RoaXMuY29udGVudEhhc0ZvY3VzKCkgJiYgX3RoaXMuY29udGVudC5mb2N1cygpO1xuICAgIH07XG5cbiAgICBfdGhpcy5jbG9zZVdpdGhUaW1lb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGNsb3Nlc0F0ID0gRGF0ZS5ub3coKSArIF90aGlzLnByb3BzLmNsb3NlVGltZW91dE1TO1xuICAgICAgX3RoaXMuc2V0U3RhdGUoeyBiZWZvcmVDbG9zZTogdHJ1ZSwgY2xvc2VzQXQ6IGNsb3Nlc0F0IH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMuY2xvc2VUaW1lciA9IHNldFRpbWVvdXQoX3RoaXMuY2xvc2VXaXRob3V0VGltZW91dCwgX3RoaXMuc3RhdGUuY2xvc2VzQXQgLSBEYXRlLm5vdygpKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5jbG9zZVdpdGhvdXRUaW1lb3V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBiZWZvcmVDbG9zZTogZmFsc2UsXG4gICAgICAgIGlzT3BlbjogZmFsc2UsXG4gICAgICAgIGFmdGVyT3BlbjogZmFsc2UsXG4gICAgICAgIGNsb3Nlc0F0OiBudWxsXG4gICAgICB9LCBfdGhpcy5hZnRlckNsb3NlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlS2V5RG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IFRBQl9LRVkpIHtcbiAgICAgICAgKDAsIF9zY29wZVRhYjIuZGVmYXVsdCkoX3RoaXMuY29udGVudCwgZXZlbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoX3RoaXMucHJvcHMuc2hvdWxkQ2xvc2VPbkVzYyAmJiBldmVudC5rZXlDb2RlID09PSBFU0NfS0VZKSB7XG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBfdGhpcy5yZXF1ZXN0Q2xvc2UoZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVPdmVybGF5T25DbGljayA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgaWYgKF90aGlzLnNob3VsZENsb3NlID09PSBudWxsKSB7XG4gICAgICAgIF90aGlzLnNob3VsZENsb3NlID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKF90aGlzLnNob3VsZENsb3NlICYmIF90aGlzLnByb3BzLnNob3VsZENsb3NlT25PdmVybGF5Q2xpY2spIHtcbiAgICAgICAgaWYgKF90aGlzLm93bmVySGFuZGxlc0Nsb3NlKCkpIHtcbiAgICAgICAgICBfdGhpcy5yZXF1ZXN0Q2xvc2UoZXZlbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzLmZvY3VzQ29udGVudCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBfdGhpcy5zaG91bGRDbG9zZSA9IG51bGw7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUNvbnRlbnRPbk1vdXNlVXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5zaG91bGRDbG9zZSA9IGZhbHNlO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVPdmVybGF5T25Nb3VzZURvd24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICghX3RoaXMucHJvcHMuc2hvdWxkQ2xvc2VPbk92ZXJsYXlDbGljayAmJiBldmVudC50YXJnZXQgPT0gX3RoaXMub3ZlcmxheSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVDb250ZW50T25DbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNob3VsZENsb3NlID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUNvbnRlbnRPbk1vdXNlRG93biA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNob3VsZENsb3NlID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLnJlcXVlc3RDbG9zZSA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgcmV0dXJuIF90aGlzLm93bmVySGFuZGxlc0Nsb3NlKCkgJiYgX3RoaXMucHJvcHMub25SZXF1ZXN0Q2xvc2UoZXZlbnQpO1xuICAgIH07XG5cbiAgICBfdGhpcy5vd25lckhhbmRsZXNDbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdGhpcy5wcm9wcy5vblJlcXVlc3RDbG9zZTtcbiAgICB9O1xuXG4gICAgX3RoaXMuc2hvdWxkQmVDbG9zZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gIV90aGlzLnN0YXRlLmlzT3BlbiAmJiAhX3RoaXMuc3RhdGUuYmVmb3JlQ2xvc2U7XG4gICAgfTtcblxuICAgIF90aGlzLmNvbnRlbnRIYXNGb2N1cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBfdGhpcy5jb250ZW50IHx8IF90aGlzLmNvbnRlbnQuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCk7XG4gICAgfTtcblxuICAgIF90aGlzLmJ1aWxkQ2xhc3NOYW1lID0gZnVuY3Rpb24gKHdoaWNoLCBhZGRpdGlvbmFsKSB7XG4gICAgICB2YXIgY2xhc3NOYW1lcyA9ICh0eXBlb2YgYWRkaXRpb25hbCA9PT0gXCJ1bmRlZmluZWRcIiA/IFwidW5kZWZpbmVkXCIgOiBfdHlwZW9mKGFkZGl0aW9uYWwpKSA9PT0gXCJvYmplY3RcIiA/IGFkZGl0aW9uYWwgOiB7XG4gICAgICAgIGJhc2U6IENMQVNTX05BTUVTW3doaWNoXSxcbiAgICAgICAgYWZ0ZXJPcGVuOiBDTEFTU19OQU1FU1t3aGljaF0gKyBcIi0tYWZ0ZXItb3BlblwiLFxuICAgICAgICBiZWZvcmVDbG9zZTogQ0xBU1NfTkFNRVNbd2hpY2hdICsgXCItLWJlZm9yZS1jbG9zZVwiXG4gICAgICB9O1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXMuYmFzZTtcbiAgICAgIGlmIChfdGhpcy5zdGF0ZS5hZnRlck9wZW4pIHtcbiAgICAgICAgY2xhc3NOYW1lID0gY2xhc3NOYW1lICsgXCIgXCIgKyBjbGFzc05hbWVzLmFmdGVyT3BlbjtcbiAgICAgIH1cbiAgICAgIGlmIChfdGhpcy5zdGF0ZS5iZWZvcmVDbG9zZSkge1xuICAgICAgICBjbGFzc05hbWUgPSBjbGFzc05hbWUgKyBcIiBcIiArIGNsYXNzTmFtZXMuYmVmb3JlQ2xvc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gdHlwZW9mIGFkZGl0aW9uYWwgPT09IFwic3RyaW5nXCIgJiYgYWRkaXRpb25hbCA/IGNsYXNzTmFtZSArIFwiIFwiICsgYWRkaXRpb25hbCA6IGNsYXNzTmFtZTtcbiAgICB9O1xuXG4gICAgX3RoaXMuYXR0cmlidXRlc0Zyb21PYmplY3QgPSBmdW5jdGlvbiAocHJlZml4LCBpdGVtcykge1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGl0ZW1zKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgbmFtZSkge1xuICAgICAgICBhY2NbcHJlZml4ICsgXCItXCIgKyBuYW1lXSA9IGl0ZW1zW25hbWVdO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgfSwge30pO1xuICAgIH07XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGFmdGVyT3BlbjogZmFsc2UsXG4gICAgICBiZWZvcmVDbG9zZTogZmFsc2VcbiAgICB9O1xuXG4gICAgX3RoaXMuc2hvdWxkQ2xvc2UgPSBudWxsO1xuICAgIF90aGlzLm1vdmVGcm9tQ29udGVudFRvT3ZlcmxheSA9IG51bGw7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE1vZGFsUG9ydGFsLCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmlzT3Blbikge1xuICAgICAgICB0aGlzLm9wZW4oKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICBpZiAocHJldlByb3BzLmJvZHlPcGVuQ2xhc3NOYW1lICE9PSB0aGlzLnByb3BzLmJvZHlPcGVuQ2xhc3NOYW1lKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICBjb25zb2xlLndhcm4oJ1JlYWN0LU1vZGFsOiBcImJvZHlPcGVuQ2xhc3NOYW1lXCIgcHJvcCBoYXMgYmVlbiBtb2RpZmllZC4gJyArIFwiVGhpcyBtYXkgY2F1c2UgdW5leHBlY3RlZCBiZWhhdmlvciB3aGVuIG11bHRpcGxlIG1vZGFscyBhcmUgb3Blbi5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByZXZQcm9wcy5odG1sT3BlbkNsYXNzTmFtZSAhPT0gdGhpcy5wcm9wcy5odG1sT3BlbkNsYXNzTmFtZSkge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgY29uc29sZS53YXJuKCdSZWFjdC1Nb2RhbDogXCJodG1sT3BlbkNsYXNzTmFtZVwiIHByb3AgaGFzIGJlZW4gbW9kaWZpZWQuICcgKyBcIlRoaXMgbWF5IGNhdXNlIHVuZXhwZWN0ZWQgYmVoYXZpb3Igd2hlbiBtdWx0aXBsZSBtb2RhbHMgYXJlIG9wZW4uXCIpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmlzT3BlbiAmJiAhcHJldlByb3BzLmlzT3Blbikge1xuICAgICAgICB0aGlzLm9wZW4oKTtcbiAgICAgIH0gZWxzZSBpZiAoIXRoaXMucHJvcHMuaXNPcGVuICYmIHByZXZQcm9wcy5pc09wZW4pIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuXG4gICAgICAvLyBGb2N1cyBvbmx5IG5lZWRzIHRvIGJlIHNldCBvbmNlIHdoZW4gdGhlIG1vZGFsIGlzIGJlaW5nIG9wZW5lZFxuICAgICAgaWYgKHRoaXMucHJvcHMuc2hvdWxkRm9jdXNBZnRlclJlbmRlciAmJiB0aGlzLnN0YXRlLmlzT3BlbiAmJiAhcHJldlN0YXRlLmlzT3Blbikge1xuICAgICAgICB0aGlzLmZvY3VzQ29udGVudCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLmlzT3Blbikge1xuICAgICAgICB0aGlzLmFmdGVyQ2xvc2UoKTtcbiAgICAgIH1cbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLmNsb3NlVGltZXIpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJiZWZvcmVPcGVuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJlZm9yZU9wZW4oKSB7XG4gICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBhcHBFbGVtZW50ID0gX3Byb3BzLmFwcEVsZW1lbnQsXG4gICAgICAgICAgYXJpYUhpZGVBcHAgPSBfcHJvcHMuYXJpYUhpZGVBcHAsXG4gICAgICAgICAgaHRtbE9wZW5DbGFzc05hbWUgPSBfcHJvcHMuaHRtbE9wZW5DbGFzc05hbWUsXG4gICAgICAgICAgYm9keU9wZW5DbGFzc05hbWUgPSBfcHJvcHMuYm9keU9wZW5DbGFzc05hbWU7XG5cbiAgICAgIC8vIEFkZCBjbGFzc2VzLlxuXG4gICAgICBib2R5T3BlbkNsYXNzTmFtZSAmJiBjbGFzc0xpc3QuYWRkKGRvY3VtZW50LmJvZHksIGJvZHlPcGVuQ2xhc3NOYW1lKTtcblxuICAgICAgaHRtbE9wZW5DbGFzc05hbWUgJiYgY2xhc3NMaXN0LmFkZChkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImh0bWxcIilbMF0sIGh0bWxPcGVuQ2xhc3NOYW1lKTtcblxuICAgICAgaWYgKGFyaWFIaWRlQXBwKSB7XG4gICAgICAgIGFyaWFIaWRkZW5JbnN0YW5jZXMgKz0gMTtcbiAgICAgICAgYXJpYUFwcEhpZGVyLmhpZGUoYXBwRWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIF9wb3J0YWxPcGVuSW5zdGFuY2VzMi5kZWZhdWx0LnJlZ2lzdGVyKHRoaXMpO1xuICAgIH1cblxuICAgIC8vIERvbid0IHN0ZWFsIGZvY3VzIGZyb20gaW5uZXIgZWxlbWVudHNcblxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3Byb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgaWQgPSBfcHJvcHMyLmlkLFxuICAgICAgICAgIGNsYXNzTmFtZSA9IF9wcm9wczIuY2xhc3NOYW1lLFxuICAgICAgICAgIG92ZXJsYXlDbGFzc05hbWUgPSBfcHJvcHMyLm92ZXJsYXlDbGFzc05hbWUsXG4gICAgICAgICAgZGVmYXVsdFN0eWxlcyA9IF9wcm9wczIuZGVmYXVsdFN0eWxlcztcblxuICAgICAgdmFyIGNvbnRlbnRTdHlsZXMgPSBjbGFzc05hbWUgPyB7fSA6IGRlZmF1bHRTdHlsZXMuY29udGVudDtcbiAgICAgIHZhciBvdmVybGF5U3R5bGVzID0gb3ZlcmxheUNsYXNzTmFtZSA/IHt9IDogZGVmYXVsdFN0eWxlcy5vdmVybGF5O1xuXG4gICAgICByZXR1cm4gdGhpcy5zaG91bGRCZUNsb3NlZCgpID8gbnVsbCA6IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7XG4gICAgICAgICAgcmVmOiB0aGlzLnNldE92ZXJsYXlSZWYsXG4gICAgICAgICAgY2xhc3NOYW1lOiB0aGlzLmJ1aWxkQ2xhc3NOYW1lKFwib3ZlcmxheVwiLCBvdmVybGF5Q2xhc3NOYW1lKSxcbiAgICAgICAgICBzdHlsZTogX2V4dGVuZHMoe30sIG92ZXJsYXlTdHlsZXMsIHRoaXMucHJvcHMuc3R5bGUub3ZlcmxheSksXG4gICAgICAgICAgb25DbGljazogdGhpcy5oYW5kbGVPdmVybGF5T25DbGljayxcbiAgICAgICAgICBvbk1vdXNlRG93bjogdGhpcy5oYW5kbGVPdmVybGF5T25Nb3VzZURvd25cbiAgICAgICAgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICBfZXh0ZW5kcyh7XG4gICAgICAgICAgICBpZDogaWQsXG4gICAgICAgICAgICByZWY6IHRoaXMuc2V0Q29udGVudFJlZixcbiAgICAgICAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7fSwgY29udGVudFN0eWxlcywgdGhpcy5wcm9wcy5zdHlsZS5jb250ZW50KSxcbiAgICAgICAgICAgIGNsYXNzTmFtZTogdGhpcy5idWlsZENsYXNzTmFtZShcImNvbnRlbnRcIiwgY2xhc3NOYW1lKSxcbiAgICAgICAgICAgIHRhYkluZGV4OiBcIi0xXCIsXG4gICAgICAgICAgICBvbktleURvd246IHRoaXMuaGFuZGxlS2V5RG93bixcbiAgICAgICAgICAgIG9uTW91c2VEb3duOiB0aGlzLmhhbmRsZUNvbnRlbnRPbk1vdXNlRG93bixcbiAgICAgICAgICAgIG9uTW91c2VVcDogdGhpcy5oYW5kbGVDb250ZW50T25Nb3VzZVVwLFxuICAgICAgICAgICAgb25DbGljazogdGhpcy5oYW5kbGVDb250ZW50T25DbGljayxcbiAgICAgICAgICAgIHJvbGU6IHRoaXMucHJvcHMucm9sZSxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLnByb3BzLmNvbnRlbnRMYWJlbFxuICAgICAgICAgIH0sIHRoaXMuYXR0cmlidXRlc0Zyb21PYmplY3QoXCJhcmlhXCIsIHRoaXMucHJvcHMuYXJpYSB8fCB7fSksIHRoaXMuYXR0cmlidXRlc0Zyb21PYmplY3QoXCJkYXRhXCIsIHRoaXMucHJvcHMuZGF0YSB8fCB7fSksIHtcbiAgICAgICAgICAgIFwiZGF0YS10ZXN0aWRcIjogdGhpcy5wcm9wcy50ZXN0SWRcbiAgICAgICAgICB9KSxcbiAgICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIE1vZGFsUG9ydGFsO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuTW9kYWxQb3J0YWwuZGVmYXVsdFByb3BzID0ge1xuICBzdHlsZToge1xuICAgIG92ZXJsYXk6IHt9LFxuICAgIGNvbnRlbnQ6IHt9XG4gIH0sXG4gIGRlZmF1bHRTdHlsZXM6IHt9XG59O1xuTW9kYWxQb3J0YWwucHJvcFR5cGVzID0ge1xuICBpc09wZW46IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbC5pc1JlcXVpcmVkLFxuICBkZWZhdWx0U3R5bGVzOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnNoYXBlKHtcbiAgICBjb250ZW50OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgICBvdmVybGF5OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdFxuICB9KSxcbiAgc3R5bGU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc2hhcGUoe1xuICAgIGNvbnRlbnQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LFxuICAgIG92ZXJsYXk6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0XG4gIH0pLFxuICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3RdKSxcbiAgb3ZlcmxheUNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdF0pLFxuICBib2R5T3BlbkNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGh0bWxPcGVuQ2xhc3NOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYXJpYUhpZGVBcHA6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgYXBwRWxlbWVudDogX3Byb3BUeXBlczIuZGVmYXVsdC5pbnN0YW5jZU9mKF9zYWZlSFRNTEVsZW1lbnQyLmRlZmF1bHQpLFxuICBvbkFmdGVyT3BlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBvbkFmdGVyQ2xvc2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgb25SZXF1ZXN0Q2xvc2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgY2xvc2VUaW1lb3V0TVM6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICBzaG91bGRGb2N1c0FmdGVyUmVuZGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHNob3VsZENsb3NlT25PdmVybGF5Q2xpY2s6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgc2hvdWxkUmV0dXJuRm9jdXNBZnRlckNsb3NlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHJvbGU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBjb250ZW50TGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBhcmlhOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgZGF0YTogX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3QsXG4gIGNoaWxkcmVuOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm5vZGUsXG4gIHNob3VsZENsb3NlT25Fc2M6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgb3ZlcmxheVJlZjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBjb250ZW50UmVmOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gIGlkOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgdGVzdElkOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IE1vZGFsUG9ydGFsO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTsiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaGFuZGxlQmx1ciA9IGhhbmRsZUJsdXI7XG5leHBvcnRzLmhhbmRsZUZvY3VzID0gaGFuZGxlRm9jdXM7XG5leHBvcnRzLm1hcmtGb3JGb2N1c0xhdGVyID0gbWFya0ZvckZvY3VzTGF0ZXI7XG5leHBvcnRzLnJldHVybkZvY3VzID0gcmV0dXJuRm9jdXM7XG5leHBvcnRzLnBvcFdpdGhvdXRGb2N1cyA9IHBvcFdpdGhvdXRGb2N1cztcbmV4cG9ydHMuc2V0dXBTY29wZWRGb2N1cyA9IHNldHVwU2NvcGVkRm9jdXM7XG5leHBvcnRzLnRlYXJkb3duU2NvcGVkRm9jdXMgPSB0ZWFyZG93blNjb3BlZEZvY3VzO1xuXG52YXIgX3RhYmJhYmxlID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvdGFiYmFibGVcIik7XG5cbnZhciBfdGFiYmFibGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGFiYmFibGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgZm9jdXNMYXRlckVsZW1lbnRzID0gW107XG52YXIgbW9kYWxFbGVtZW50ID0gbnVsbDtcbnZhciBuZWVkVG9Gb2N1cyA9IGZhbHNlO1xuXG5mdW5jdGlvbiBoYW5kbGVCbHVyKCkge1xuICBuZWVkVG9Gb2N1cyA9IHRydWU7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUZvY3VzKCkge1xuICBpZiAobmVlZFRvRm9jdXMpIHtcbiAgICBuZWVkVG9Gb2N1cyA9IGZhbHNlO1xuICAgIGlmICghbW9kYWxFbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIG5lZWQgdG8gc2VlIGhvdyBqUXVlcnkgc2hpbXMgZG9jdW1lbnQub24oJ2ZvY3VzaW4nKSBzbyB3ZSBkb24ndCBuZWVkIHRoZVxuICAgIC8vIHNldFRpbWVvdXQsIGZpcmVmb3ggZG9lc24ndCBzdXBwb3J0IGZvY3VzaW4sIGlmIGl0IGRpZCwgd2UgY291bGQgZm9jdXNcbiAgICAvLyB0aGUgZWxlbWVudCBvdXRzaWRlIG9mIGEgc2V0VGltZW91dC4gU2lkZS1lZmZlY3Qgb2YgdGhpcyBpbXBsZW1lbnRhdGlvblxuICAgIC8vIGlzIHRoYXQgdGhlIGRvY3VtZW50LmJvZHkgZ2V0cyBmb2N1cywgYW5kIHRoZW4gd2UgZm9jdXMgb3VyIGVsZW1lbnQgcmlnaHRcbiAgICAvLyBhZnRlciwgc2VlbXMgZmluZS5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChtb2RhbEVsZW1lbnQuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIGVsID0gKDAsIF90YWJiYWJsZTIuZGVmYXVsdCkobW9kYWxFbGVtZW50KVswXSB8fCBtb2RhbEVsZW1lbnQ7XG4gICAgICBlbC5mb2N1cygpO1xuICAgIH0sIDApO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1hcmtGb3JGb2N1c0xhdGVyKCkge1xuICBmb2N1c0xhdGVyRWxlbWVudHMucHVzaChkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcbn1cblxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuZnVuY3Rpb24gcmV0dXJuRm9jdXMoKSB7XG4gIHZhciB0b0ZvY3VzID0gbnVsbDtcbiAgdHJ5IHtcbiAgICBpZiAoZm9jdXNMYXRlckVsZW1lbnRzLmxlbmd0aCAhPT0gMCkge1xuICAgICAgdG9Gb2N1cyA9IGZvY3VzTGF0ZXJFbGVtZW50cy5wb3AoKTtcbiAgICAgIHRvRm9jdXMuZm9jdXMoKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS53YXJuKFtcIllvdSB0cmllZCB0byByZXR1cm4gZm9jdXMgdG9cIiwgdG9Gb2N1cywgXCJidXQgaXQgaXMgbm90IGluIHRoZSBET00gYW55bW9yZVwiXS5qb2luKFwiIFwiKSk7XG4gIH1cbn1cbi8qIGVzbGludC1lbmFibGUgbm8tY29uc29sZSAqL1xuXG5mdW5jdGlvbiBwb3BXaXRob3V0Rm9jdXMoKSB7XG4gIGZvY3VzTGF0ZXJFbGVtZW50cy5sZW5ndGggPiAwICYmIGZvY3VzTGF0ZXJFbGVtZW50cy5wb3AoKTtcbn1cblxuZnVuY3Rpb24gc2V0dXBTY29wZWRGb2N1cyhlbGVtZW50KSB7XG4gIG1vZGFsRWxlbWVudCA9IGVsZW1lbnQ7XG5cbiAgaWYgKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsIGhhbmRsZUJsdXIsIGZhbHNlKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgaGFuZGxlRm9jdXMsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5hdHRhY2hFdmVudChcIm9uQmx1clwiLCBoYW5kbGVCbHVyKTtcbiAgICBkb2N1bWVudC5hdHRhY2hFdmVudChcIm9uRm9jdXNcIiwgaGFuZGxlRm9jdXMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRlYXJkb3duU2NvcGVkRm9jdXMoKSB7XG4gIG1vZGFsRWxlbWVudCA9IG51bGw7XG5cbiAgaWYgKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJibHVyXCIsIGhhbmRsZUJsdXIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBoYW5kbGVGb2N1cyk7XG4gIH0gZWxzZSB7XG4gICAgd2luZG93LmRldGFjaEV2ZW50KFwib25CbHVyXCIsIGhhbmRsZUJsdXIpO1xuICAgIGRvY3VtZW50LmRldGFjaEV2ZW50KFwib25Gb2N1c1wiLCBoYW5kbGVGb2N1cyk7XG4gIH1cbn0iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNjb3BlVGFiO1xuXG52YXIgX3RhYmJhYmxlID0gcmVxdWlyZShcIi4vdGFiYmFibGVcIik7XG5cbnZhciBfdGFiYmFibGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGFiYmFibGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBzY29wZVRhYihub2RlLCBldmVudCkge1xuICB2YXIgdGFiYmFibGUgPSAoMCwgX3RhYmJhYmxlMi5kZWZhdWx0KShub2RlKTtcblxuICBpZiAoIXRhYmJhYmxlLmxlbmd0aCkge1xuICAgIC8vIERvIG5vdGhpbmcsIHNpbmNlIHRoZXJlIGFyZSBubyBlbGVtZW50cyB0aGF0IGNhbiByZWNlaXZlIGZvY3VzLlxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHRhcmdldCA9IHZvaWQgMDtcblxuICB2YXIgc2hpZnRLZXkgPSBldmVudC5zaGlmdEtleTtcbiAgdmFyIGhlYWQgPSB0YWJiYWJsZVswXTtcbiAgdmFyIHRhaWwgPSB0YWJiYWJsZVt0YWJiYWJsZS5sZW5ndGggLSAxXTtcblxuICAvLyBwcm9jZWVkIHdpdGggZGVmYXVsdCBicm93c2VyIGJlaGF2aW9yIG9uIHRhYi5cbiAgLy8gRm9jdXMgb24gbGFzdCBlbGVtZW50IG9uIHNoaWZ0ICsgdGFiLlxuICBpZiAobm9kZSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkge1xuICAgIGlmICghc2hpZnRLZXkpIHJldHVybjtcbiAgICB0YXJnZXQgPSB0YWlsO1xuICB9XG5cbiAgaWYgKHRhaWwgPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgIXNoaWZ0S2V5KSB7XG4gICAgdGFyZ2V0ID0gaGVhZDtcbiAgfVxuXG4gIGlmIChoZWFkID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmIHNoaWZ0S2V5KSB7XG4gICAgdGFyZ2V0ID0gdGFpbDtcbiAgfVxuXG4gIGlmICh0YXJnZXQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRhcmdldC5mb2N1cygpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFNhZmFyaSByYWRpbyBpc3N1ZS5cbiAgLy9cbiAgLy8gU2FmYXJpIGRvZXMgbm90IG1vdmUgdGhlIGZvY3VzIHRvIHRoZSByYWRpbyBidXR0b24sXG4gIC8vIHNvIHdlIG5lZWQgdG8gZm9yY2UgaXQgdG8gcmVhbGx5IHdhbGsgdGhyb3VnaCBhbGwgZWxlbWVudHMuXG4gIC8vXG4gIC8vIFRoaXMgaXMgdmVyeSBlcnJvciBwcm9uZSwgc2luY2Ugd2UgYXJlIHRyeWluZyB0byBndWVzc1xuICAvLyBpZiBpdCBpcyBhIHNhZmFyaSBicm93c2VyIGZyb20gdGhlIGZpcnN0IG9jY3VyZW5jZSBiZXR3ZWVuXG4gIC8vIGNocm9tZSBvciBzYWZhcmkuXG4gIC8vXG4gIC8vIFRoZSBjaHJvbWUgdXNlciBhZ2VudCBjb250YWlucyB0aGUgZmlyc3Qgb2N1cnJlbmNlXG4gIC8vIGFzIHRoZSAnY2hyb21lL3ZlcnNpb24nIGFuZCBsYXRlciB0aGUgJ3NhZmFyaS92ZXJzaW9uJy5cbiAgdmFyIGNoZWNrU2FmYXJpID0gLyhcXGJDaHJvbWVcXGJ8XFxiU2FmYXJpXFxiKVxcLy8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgdmFyIGlzU2FmYXJpRGVza3RvcCA9IGNoZWNrU2FmYXJpICE9IG51bGwgJiYgY2hlY2tTYWZhcmlbMV0gIT0gXCJDaHJvbWVcIiAmJiAvXFxiaVBvZFxcYnxcXGJpUGFkXFxiL2cuZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50KSA9PSBudWxsO1xuXG4gIC8vIElmIHdlIGFyZSBub3QgaW4gc2FmYXJpIGRlc2t0b3AsIGxldCB0aGUgYnJvd3NlciBjb250cm9sXG4gIC8vIHRoZSBmb2N1c1xuICBpZiAoIWlzU2FmYXJpRGVza3RvcCkgcmV0dXJuO1xuXG4gIHZhciB4ID0gdGFiYmFibGUuaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcblxuICBpZiAoeCA+IC0xKSB7XG4gICAgeCArPSBzaGlmdEtleSA/IC0xIDogMTtcbiAgfVxuXG4gIHRhcmdldCA9IHRhYmJhYmxlW3hdO1xuXG4gIC8vIElmIHRoZSB0YWJiYWJsZSBlbGVtZW50IGRvZXMgbm90IGV4aXN0LFxuICAvLyBmb2N1cyBoZWFkL3RhaWwgYmFzZWQgb24gc2hpZnRLZXlcbiAgaWYgKHR5cGVvZiB0YXJnZXQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRhcmdldCA9IHNoaWZ0S2V5ID8gdGFpbCA6IGhlYWQ7XG4gICAgdGFyZ2V0LmZvY3VzKCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICB0YXJnZXQuZm9jdXMoKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciBfX0RFVl9fID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAoX19ERVZfXykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMSA/IGxlbiAtIDEgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAxOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDFdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSk7XG4gICAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgIC8vIC0tLSBXZWxjb21lIHRvIGRlYnVnZ2luZyBSZWFjdCAtLS1cbiAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfSBjYXRjaCAoeCkge31cbiAgfVxuXG4gIHdhcm5pbmcgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYXJncykge1xuICAgIHZhciBsZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGFyZ3MgPSBuZXcgQXJyYXkobGVuID4gMiA/IGxlbiAtIDIgOiAwKTtcbiAgICBmb3IgKHZhciBrZXkgPSAyOyBrZXkgPCBsZW47IGtleSsrKSB7XG4gICAgICBhcmdzW2tleSAtIDJdID0gYXJndW1lbnRzW2tleV07XG4gICAgfVxuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBwcmludFdhcm5pbmcuYXBwbHkobnVsbCwgW2Zvcm1hdF0uY29uY2F0KGFyZ3MpKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTUgSmVkIFdhdHNvbi5cbiAgQmFzZWQgb24gY29kZSB0aGF0IGlzIENvcHlyaWdodCAyMDEzLTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGNhblVzZURPTSA9ICEhKFxuXHRcdHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG5cdFx0d2luZG93LmRvY3VtZW50ICYmXG5cdFx0d2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnRcblx0KTtcblxuXHR2YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cblx0XHRjYW5Vc2VET006IGNhblVzZURPTSxcblxuXHRcdGNhblVzZVdvcmtlcnM6IHR5cGVvZiBXb3JrZXIgIT09ICd1bmRlZmluZWQnLFxuXG5cdFx0Y2FuVXNlRXZlbnRMaXN0ZW5lcnM6XG5cdFx0XHRjYW5Vc2VET00gJiYgISEod2luZG93LmFkZEV2ZW50TGlzdGVuZXIgfHwgd2luZG93LmF0dGFjaEV2ZW50KSxcblxuXHRcdGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuXG5cblx0fTtcblxuXHRpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdGRlZmluZShmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gRXhlY3V0aW9uRW52aXJvbm1lbnQ7XG5cdFx0fSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5FeGVjdXRpb25FbnZpcm9ubWVudCA9IEV4ZWN1dGlvbkVudmlyb25tZW50O1xuXHR9XG5cbn0oKSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZHVtcENsYXNzTGlzdHMgPSBkdW1wQ2xhc3NMaXN0cztcbnZhciBodG1sQ2xhc3NMaXN0ID0ge307XG52YXIgZG9jQm9keUNsYXNzTGlzdCA9IHt9O1xuXG5mdW5jdGlvbiBkdW1wQ2xhc3NMaXN0cygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIHZhciBjbGFzc2VzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJodG1sXCIpWzBdLmNsYXNzTmFtZTtcbiAgICB2YXIgYnVmZmVyID0gXCJTaG93IHRyYWNrZWQgY2xhc3NlczpcXG5cXG5cIjtcblxuICAgIGJ1ZmZlciArPSBcIjxodG1sIC8+IChcIiArIGNsYXNzZXMgKyBcIik6XFxuXCI7XG4gICAgZm9yICh2YXIgeCBpbiBodG1sQ2xhc3NMaXN0KSB7XG4gICAgICBidWZmZXIgKz0gXCIgIFwiICsgeCArIFwiIFwiICsgaHRtbENsYXNzTGlzdFt4XSArIFwiXFxuXCI7XG4gICAgfVxuXG4gICAgY2xhc3NlcyA9IGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW5cbiAgICBidWZmZXIgKz0gXCJcXG5cXG5kb2MuYm9keSAoXCIgKyBjbGFzc2VzICsgXCIpOlxcblwiO1xuICAgIGZvciAodmFyIF94IGluIGRvY0JvZHlDbGFzc0xpc3QpIHtcbiAgICAgIGJ1ZmZlciArPSBcIiAgXCIgKyBfeCArIFwiIFwiICsgZG9jQm9keUNsYXNzTGlzdFtfeF0gKyBcIlxcblwiO1xuICAgIH1cblxuICAgIGJ1ZmZlciArPSBcIlxcblwiO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmxvZyhidWZmZXIpO1xuICB9XG59XG5cbi8qKlxuICogVHJhY2sgdGhlIG51bWJlciBvZiByZWZlcmVuY2Ugb2YgYSBjbGFzcy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBwb2xsIFRoZSBwb2xsIHRvIHJlY2VpdmUgdGhlIHJlZmVyZW5jZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjbGFzc05hbWUgVGhlIGNsYXNzIG5hbWUuXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbnZhciBpbmNyZW1lbnRSZWZlcmVuY2UgPSBmdW5jdGlvbiBpbmNyZW1lbnRSZWZlcmVuY2UocG9sbCwgY2xhc3NOYW1lKSB7XG4gIGlmICghcG9sbFtjbGFzc05hbWVdKSB7XG4gICAgcG9sbFtjbGFzc05hbWVdID0gMDtcbiAgfVxuICBwb2xsW2NsYXNzTmFtZV0gKz0gMTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qKlxuICogRHJvcCB0aGUgcmVmZXJlbmNlIG9mIGEgY2xhc3MuXG4gKiBAcGFyYW0ge29iamVjdH0gcG9sbCBUaGUgcG9sbCB0byByZWNlaXZlIHRoZSByZWZlcmVuY2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lIFRoZSBjbGFzcyBuYW1lLlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG52YXIgZGVjcmVtZW50UmVmZXJlbmNlID0gZnVuY3Rpb24gZGVjcmVtZW50UmVmZXJlbmNlKHBvbGwsIGNsYXNzTmFtZSkge1xuICBpZiAocG9sbFtjbGFzc05hbWVdKSB7XG4gICAgcG9sbFtjbGFzc05hbWVdIC09IDE7XG4gIH1cbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qKlxuICogVHJhY2sgYSBjbGFzcyBhbmQgYWRkIHRvIHRoZSBnaXZlbiBjbGFzcyBsaXN0LlxuICogQHBhcmFtIHtPYmplY3R9IGNsYXNzTGlzdFJlZiBBIGNsYXNzIGxpc3Qgb2YgYW4gZWxlbWVudC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBwb2xsICAgICAgICAgVGhlIHBvbGwgdG8gYmUgdXNlZC5cbiAqIEBwYXJhbSB7QXJyYXl9ICBjbGFzc2VzICAgICAgVGhlIGxpc3Qgb2YgY2xhc3NlcyB0byBiZSB0cmFja2VkLlxuICovXG52YXIgdHJhY2tDbGFzcyA9IGZ1bmN0aW9uIHRyYWNrQ2xhc3MoY2xhc3NMaXN0UmVmLCBwb2xsLCBjbGFzc2VzKSB7XG4gIGNsYXNzZXMuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgaW5jcmVtZW50UmVmZXJlbmNlKHBvbGwsIGNsYXNzTmFtZSk7XG4gICAgY2xhc3NMaXN0UmVmLmFkZChjbGFzc05hbWUpO1xuICB9KTtcbn07XG5cbi8qKlxuICogVW50cmFjayBhIGNsYXNzIGFuZCByZW1vdmUgZnJvbSB0aGUgZ2l2ZW4gY2xhc3MgbGlzdCBpZiB0aGUgcmVmZXJlbmNlXG4gKiByZWFjaGVzIDAuXG4gKiBAcGFyYW0ge09iamVjdH0gY2xhc3NMaXN0UmVmIEEgY2xhc3MgbGlzdCBvZiBhbiBlbGVtZW50LlxuICogQHBhcmFtIHtPYmplY3R9IHBvbGwgICAgICAgICBUaGUgcG9sbCB0byBiZSB1c2VkLlxuICogQHBhcmFtIHtBcnJheX0gIGNsYXNzZXMgICAgICBUaGUgbGlzdCBvZiBjbGFzc2VzIHRvIGJlIHVudHJhY2tlZC5cbiAqL1xudmFyIHVudHJhY2tDbGFzcyA9IGZ1bmN0aW9uIHVudHJhY2tDbGFzcyhjbGFzc0xpc3RSZWYsIHBvbGwsIGNsYXNzZXMpIHtcbiAgY2xhc3Nlcy5mb3JFYWNoKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBkZWNyZW1lbnRSZWZlcmVuY2UocG9sbCwgY2xhc3NOYW1lKTtcbiAgICBwb2xsW2NsYXNzTmFtZV0gPT09IDAgJiYgY2xhc3NMaXN0UmVmLnJlbW92ZShjbGFzc05hbWUpO1xuICB9KTtcbn07XG5cbi8qKlxuICogUHVibGljIGluZmVyZmFjZSB0byBhZGQgY2xhc3NlcyB0byB0aGUgZG9jdW1lbnQuYm9keS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBib2R5Q2xhc3MgVGhlIGNsYXNzIHN0cmluZyB0byBiZSBhZGRlZC5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgSXQgbWF5IGNvbnRhaW4gbW9yZSB0aGVuIG9uZSBjbGFzc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoICcgJyBhcyBzZXBhcmF0b3IuXG4gKi9cbnZhciBhZGQgPSBleHBvcnRzLmFkZCA9IGZ1bmN0aW9uIGFkZChlbGVtZW50LCBjbGFzc1N0cmluZykge1xuICByZXR1cm4gdHJhY2tDbGFzcyhlbGVtZW50LmNsYXNzTGlzdCwgZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09IFwiaHRtbFwiID8gaHRtbENsYXNzTGlzdCA6IGRvY0JvZHlDbGFzc0xpc3QsIGNsYXNzU3RyaW5nLnNwbGl0KFwiIFwiKSk7XG59O1xuXG4vKipcbiAqIFB1YmxpYyBpbmZlcmZhY2UgdG8gcmVtb3ZlIGNsYXNzZXMgZnJvbSB0aGUgZG9jdW1lbnQuYm9keS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBib2R5Q2xhc3MgVGhlIGNsYXNzIHN0cmluZyB0byBiZSBhZGRlZC5cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgSXQgbWF5IGNvbnRhaW4gbW9yZSB0aGVuIG9uZSBjbGFzc1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoICcgJyBhcyBzZXBhcmF0b3IuXG4gKi9cbnZhciByZW1vdmUgPSBleHBvcnRzLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShlbGVtZW50LCBjbGFzc1N0cmluZykge1xuICByZXR1cm4gdW50cmFja0NsYXNzKGVsZW1lbnQuY2xhc3NMaXN0LCBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT0gXCJodG1sXCIgPyBodG1sQ2xhc3NMaXN0IDogZG9jQm9keUNsYXNzTGlzdCwgY2xhc3NTdHJpbmcuc3BsaXQoXCIgXCIpKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfcG9ydGFsT3Blbkluc3RhbmNlcyA9IHJlcXVpcmUoXCIuL3BvcnRhbE9wZW5JbnN0YW5jZXNcIik7XG5cbnZhciBfcG9ydGFsT3Blbkluc3RhbmNlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wb3J0YWxPcGVuSW5zdGFuY2VzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gQm9keSBmb2N1cyB0cmFwIHNlZSBJc3N1ZSAjNzQyXG5cbnZhciBiZWZvcmUgPSB2b2lkIDAsXG4gICAgYWZ0ZXIgPSB2b2lkIDAsXG4gICAgaW5zdGFuY2VzID0gW107XG5cbmZ1bmN0aW9uIGZvY3VzQ29udGVudCgpIHtcbiAgaWYgKGluc3RhbmNlcy5sZW5ndGggPT09IDApIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgY29uc29sZS53YXJuKFwiUmVhY3QtTW9kYWw6IE9wZW4gaW5zdGFuY2VzID4gMCBleHBlY3RlZFwiKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG4gIGluc3RhbmNlc1tpbnN0YW5jZXMubGVuZ3RoIC0gMV0uZm9jdXNDb250ZW50KCk7XG59XG5cbmZ1bmN0aW9uIGJvZHlUcmFwKGV2ZW50VHlwZSwgb3Blbkluc3RhbmNlcykge1xuICBpZiAoIWJlZm9yZSB8fCAhYWZ0ZXIpIHtcbiAgICBiZWZvcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGJlZm9yZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0LW1vZGFsLWJvZHktdHJhcFwiLCBcIlwiKTtcbiAgICBiZWZvcmUuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG4gICAgYmVmb3JlLnN0eWxlLm9wYWNpdHkgPSBcIjBcIjtcbiAgICBiZWZvcmUuc2V0QXR0cmlidXRlKFwidGFiaW5kZXhcIiwgXCIwXCIpO1xuICAgIGJlZm9yZS5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgZm9jdXNDb250ZW50KTtcbiAgICBhZnRlciA9IGJlZm9yZS5jbG9uZU5vZGUoKTtcbiAgICBhZnRlci5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgZm9jdXNDb250ZW50KTtcbiAgfVxuXG4gIGluc3RhbmNlcyA9IG9wZW5JbnN0YW5jZXM7XG5cbiAgaWYgKGluc3RhbmNlcy5sZW5ndGggPiAwKSB7XG4gICAgLy8gQWRkIGZvY3VzIHRyYXBcbiAgICBpZiAoZG9jdW1lbnQuYm9keS5maXJzdENoaWxkICE9PSBiZWZvcmUpIHtcbiAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGJlZm9yZSwgZG9jdW1lbnQuYm9keS5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgaWYgKGRvY3VtZW50LmJvZHkubGFzdENoaWxkICE9PSBhZnRlcikge1xuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhZnRlcik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFJlbW92ZSBmb2N1cyB0cmFwXG4gICAgaWYgKGJlZm9yZS5wYXJlbnRFbGVtZW50KSB7XG4gICAgICBiZWZvcmUucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChiZWZvcmUpO1xuICAgIH1cbiAgICBpZiAoYWZ0ZXIucGFyZW50RWxlbWVudCkge1xuICAgICAgYWZ0ZXIucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChhZnRlcik7XG4gICAgfVxuICB9XG59XG5cbl9wb3J0YWxPcGVuSW5zdGFuY2VzMi5kZWZhdWx0LnN1YnNjcmliZShib2R5VHJhcCk7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gIC8vIENhbGwgdGhpcy5jb25zdHJ1Y3Rvci5nRFNGUCB0byBzdXBwb3J0IHN1Yi1jbGFzc2VzLlxuICB2YXIgc3RhdGUgPSB0aGlzLmNvbnN0cnVjdG9yLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyh0aGlzLnByb3BzLCB0aGlzLnN0YXRlKTtcbiAgaWYgKHN0YXRlICE9PSBudWxsICYmIHN0YXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAvLyBDYWxsIHRoaXMuY29uc3RydWN0b3IuZ0RTRlAgdG8gc3VwcG9ydCBzdWItY2xhc3Nlcy5cbiAgLy8gVXNlIHRoZSBzZXRTdGF0ZSgpIHVwZGF0ZXIgdG8gZW5zdXJlIHN0YXRlIGlzbid0IHN0YWxlIGluIGNlcnRhaW4gZWRnZSBjYXNlcy5cbiAgZnVuY3Rpb24gdXBkYXRlcihwcmV2U3RhdGUpIHtcbiAgICB2YXIgc3RhdGUgPSB0aGlzLmNvbnN0cnVjdG9yLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHByZXZTdGF0ZSk7XG4gICAgcmV0dXJuIHN0YXRlICE9PSBudWxsICYmIHN0YXRlICE9PSB1bmRlZmluZWQgPyBzdGF0ZSA6IG51bGw7XG4gIH1cbiAgLy8gQmluZGluZyBcInRoaXNcIiBpcyBpbXBvcnRhbnQgZm9yIHNoYWxsb3cgcmVuZGVyZXIgc3VwcG9ydC5cbiAgdGhpcy5zZXRTdGF0ZSh1cGRhdGVyLmJpbmQodGhpcykpO1xufVxuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsVXBkYXRlKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gIHRyeSB7XG4gICAgdmFyIHByZXZQcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgdmFyIHByZXZTdGF0ZSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5wcm9wcyA9IG5leHRQcm9wcztcbiAgICB0aGlzLnN0YXRlID0gbmV4dFN0YXRlO1xuICAgIHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RGbGFnID0gdHJ1ZTtcbiAgICB0aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90ID0gdGhpcy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShcbiAgICAgIHByZXZQcm9wcyxcbiAgICAgIHByZXZTdGF0ZVxuICAgICk7XG4gIH0gZmluYWxseSB7XG4gICAgdGhpcy5wcm9wcyA9IHByZXZQcm9wcztcbiAgICB0aGlzLnN0YXRlID0gcHJldlN0YXRlO1xuICB9XG59XG5cbi8vIFJlYWN0IG1heSB3YXJuIGFib3V0IGNXTS9jV1JQL2NXVSBtZXRob2RzIGJlaW5nIGRlcHJlY2F0ZWQuXG4vLyBBZGQgYSBmbGFnIHRvIHN1cHByZXNzIHRoZXNlIHdhcm5pbmdzIGZvciB0aGlzIHNwZWNpYWwgY2FzZS5cbmNvbXBvbmVudFdpbGxNb3VudC5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nID0gdHJ1ZTtcbmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyA9IHRydWU7XG5jb21wb25lbnRXaWxsVXBkYXRlLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmcgPSB0cnVlO1xuXG5mdW5jdGlvbiBwb2x5ZmlsbChDb21wb25lbnQpIHtcbiAgdmFyIHByb3RvdHlwZSA9IENvbXBvbmVudC5wcm90b3R5cGU7XG5cbiAgaWYgKCFwcm90b3R5cGUgfHwgIXByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gb25seSBwb2x5ZmlsbCBjbGFzcyBjb21wb25lbnRzJyk7XG4gIH1cblxuICBpZiAoXG4gICAgdHlwZW9mIENvbXBvbmVudC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgIT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgcHJvdG90eXBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybiBDb21wb25lbnQ7XG4gIH1cblxuICAvLyBJZiBuZXcgY29tcG9uZW50IEFQSXMgYXJlIGRlZmluZWQsIFwidW5zYWZlXCIgbGlmZWN5Y2xlcyB3b24ndCBiZSBjYWxsZWQuXG4gIC8vIEVycm9yIGlmIGFueSBvZiB0aGVzZSBsaWZlY3ljbGVzIGFyZSBwcmVzZW50LFxuICAvLyBCZWNhdXNlIHRoZXkgd291bGQgd29yayBkaWZmZXJlbnRseSBiZXR3ZWVuIG9sZGVyIGFuZCBuZXdlciAoMTYuMyspIHZlcnNpb25zIG9mIFJlYWN0LlxuICB2YXIgZm91bmRXaWxsTW91bnROYW1lID0gbnVsbDtcbiAgdmFyIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUgPSBudWxsO1xuICB2YXIgZm91bmRXaWxsVXBkYXRlTmFtZSA9IG51bGw7XG4gIGlmICh0eXBlb2YgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbE1vdW50TmFtZSA9ICdjb21wb25lbnRXaWxsTW91bnQnO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm90b3R5cGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbE1vdW50TmFtZSA9ICdVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JztcbiAgfVxuICBpZiAodHlwZW9mIHByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSA9ICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJztcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvdG90eXBlLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSA9ICdVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyc7XG4gIH1cbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFVwZGF0ZU5hbWUgPSAnY29tcG9uZW50V2lsbFVwZGF0ZSc7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFVwZGF0ZU5hbWUgPSAnVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUnO1xuICB9XG4gIGlmIChcbiAgICBmb3VuZFdpbGxNb3VudE5hbWUgIT09IG51bGwgfHxcbiAgICBmb3VuZFdpbGxSZWNlaXZlUHJvcHNOYW1lICE9PSBudWxsIHx8XG4gICAgZm91bmRXaWxsVXBkYXRlTmFtZSAhPT0gbnVsbFxuICApIHtcbiAgICB2YXIgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZTtcbiAgICB2YXIgbmV3QXBpTmFtZSA9XG4gICAgICB0eXBlb2YgQ29tcG9uZW50LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/ICdnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMoKSdcbiAgICAgICAgOiAnZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKSc7XG5cbiAgICB0aHJvdyBFcnJvcihcbiAgICAgICdVbnNhZmUgbGVnYWN5IGxpZmVjeWNsZXMgd2lsbCBub3QgYmUgY2FsbGVkIGZvciBjb21wb25lbnRzIHVzaW5nIG5ldyBjb21wb25lbnQgQVBJcy5cXG5cXG4nICtcbiAgICAgICAgY29tcG9uZW50TmFtZSArXG4gICAgICAgICcgdXNlcyAnICtcbiAgICAgICAgbmV3QXBpTmFtZSArXG4gICAgICAgICcgYnV0IGFsc28gY29udGFpbnMgdGhlIGZvbGxvd2luZyBsZWdhY3kgbGlmZWN5Y2xlczonICtcbiAgICAgICAgKGZvdW5kV2lsbE1vdW50TmFtZSAhPT0gbnVsbCA/ICdcXG4gICcgKyBmb3VuZFdpbGxNb3VudE5hbWUgOiAnJykgK1xuICAgICAgICAoZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSAhPT0gbnVsbFxuICAgICAgICAgID8gJ1xcbiAgJyArIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWVcbiAgICAgICAgICA6ICcnKSArXG4gICAgICAgIChmb3VuZFdpbGxVcGRhdGVOYW1lICE9PSBudWxsID8gJ1xcbiAgJyArIGZvdW5kV2lsbFVwZGF0ZU5hbWUgOiAnJykgK1xuICAgICAgICAnXFxuXFxuVGhlIGFib3ZlIGxpZmVjeWNsZXMgc2hvdWxkIGJlIHJlbW92ZWQuIExlYXJuIG1vcmUgYWJvdXQgdGhpcyB3YXJuaW5nIGhlcmU6XFxuJyArXG4gICAgICAgICdodHRwczovL2ZiLm1lL3JlYWN0LWFzeW5jLWNvbXBvbmVudC1saWZlY3ljbGUtaG9va3MnXG4gICAgKTtcbiAgfVxuXG4gIC8vIFJlYWN0IDw9IDE2LjIgZG9lcyBub3Qgc3VwcG9ydCBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLlxuICAvLyBBcyBhIHdvcmthcm91bmQsIHVzZSBjV00gYW5kIGNXUlAgdG8gaW52b2tlIHRoZSBuZXcgc3RhdGljIGxpZmVjeWNsZS5cbiAgLy8gTmV3ZXIgdmVyc2lvbnMgb2YgUmVhY3Qgd2lsbCBpZ25vcmUgdGhlc2UgbGlmZWN5Y2xlcyBpZiBnRFNGUCBleGlzdHMuXG4gIGlmICh0eXBlb2YgQ29tcG9uZW50LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBjb21wb25lbnRXaWxsTW91bnQ7XG4gICAgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzO1xuICB9XG5cbiAgLy8gUmVhY3QgPD0gMTYuMiBkb2VzIG5vdCBzdXBwb3J0IGdldFNuYXBzaG90QmVmb3JlVXBkYXRlLlxuICAvLyBBcyBhIHdvcmthcm91bmQsIHVzZSBjV1UgdG8gaW52b2tlIHRoZSBuZXcgbGlmZWN5Y2xlLlxuICAvLyBOZXdlciB2ZXJzaW9ucyBvZiBSZWFjdCB3aWxsIGlnbm9yZSB0aGF0IGxpZmVjeWNsZSBpZiBnU0JVIGV4aXN0cy5cbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpZiAodHlwZW9mIHByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0Nhbm5vdCBwb2x5ZmlsbCBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSgpIGZvciBjb21wb25lbnRzIHRoYXQgZG8gbm90IGRlZmluZSBjb21wb25lbnREaWRVcGRhdGUoKSBvbiB0aGUgcHJvdG90eXBlJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBwcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9IGNvbXBvbmVudFdpbGxVcGRhdGU7XG5cbiAgICB2YXIgY29tcG9uZW50RGlkVXBkYXRlID0gcHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZTtcblxuICAgIHByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGVQb2x5ZmlsbChcbiAgICAgIHByZXZQcm9wcyxcbiAgICAgIHByZXZTdGF0ZSxcbiAgICAgIG1heWJlU25hcHNob3RcbiAgICApIHtcbiAgICAgIC8vIDE2LjMrIHdpbGwgbm90IGV4ZWN1dGUgb3VyIHdpbGwtdXBkYXRlIG1ldGhvZDtcbiAgICAgIC8vIEl0IHdpbGwgcGFzcyBhIHNuYXBzaG90IHZhbHVlIHRvIGRpZC11cGRhdGUgdGhvdWdoLlxuICAgICAgLy8gT2xkZXIgdmVyc2lvbnMgd2lsbCByZXF1aXJlIG91ciBwb2x5ZmlsbGVkIHdpbGwtdXBkYXRlIHZhbHVlLlxuICAgICAgLy8gV2UgbmVlZCB0byBoYW5kbGUgYm90aCBjYXNlcywgYnV0IGNhbid0IGp1c3QgY2hlY2sgZm9yIHRoZSBwcmVzZW5jZSBvZiBcIm1heWJlU25hcHNob3RcIixcbiAgICAgIC8vIEJlY2F1c2UgZm9yIDw9IDE1LnggdmVyc2lvbnMgdGhpcyBtaWdodCBiZSBhIFwicHJldkNvbnRleHRcIiBvYmplY3QuXG4gICAgICAvLyBXZSBhbHNvIGNhbid0IGp1c3QgY2hlY2sgXCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdFwiLFxuICAgICAgLy8gQmVjYXVzZSBnZXQtc25hcHNob3QgbWlnaHQgcmV0dXJuIGEgZmFsc3kgdmFsdWUuXG4gICAgICAvLyBTbyBjaGVjayBmb3IgdGhlIGV4cGxpY2l0IF9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyBmbGFnIHRvIGRldGVybWluZSBiZWhhdmlvci5cbiAgICAgIHZhciBzbmFwc2hvdCA9IHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RGbGFnXG4gICAgICAgID8gdGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdFxuICAgICAgICA6IG1heWJlU25hcHNob3Q7XG5cbiAgICAgIGNvbXBvbmVudERpZFVwZGF0ZS5jYWxsKHRoaXMsIHByZXZQcm9wcywgcHJldlN0YXRlLCBzbmFwc2hvdCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBDb21wb25lbnQ7XG59XG5cbmV4cG9ydCB7IHBvbHlmaWxsIH07XG4iLCIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE3IEplZCBXYXRzb24uXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG4gIGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcyAoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpICYmIGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxudmFyIGV4cG9ydGVkID0gY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHt9O1xuXG5cblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlZDsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuRHJvcGRvd24tcm9vdCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5Ecm9wZG93bi1jb250cm9sIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICBib3JkZXItcmFkaXVzOiAycHg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgY29sb3I6ICMzMzM7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgcGFkZGluZzogOHB4IDUycHggOHB4IDEwcHg7XFxuICB0cmFuc2l0aW9uOiBhbGwgMjAwbXMgZWFzZTtcXG4gIGhlaWdodDogNDBweFxcbn1cXG5cXG4uRHJvcGRvd24tY29udHJvbDpob3ZlciB7XFxuICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4wNik7XFxufVxcblxcbi5Ecm9wZG93bi1hcnJvdyB7XFxuICBib3JkZXItY29sb3I6ICM5OTkgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLXdpZHRoOiA1cHggNXB4IDA7XFxuICBjb250ZW50OiAnICc7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIGhlaWdodDogMDtcXG4gIG1hcmdpbi10b3A6IC1jZWlsKDIuNSk7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMTBweDtcXG4gIHRvcDogMTRweDtcXG4gIHdpZHRoOiAwXFxufVxcblxcbi5pcy1vcGVuIC5Ecm9wZG93bi1hcnJvdyB7XFxuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICM5OTk7XFxuICBib3JkZXItd2lkdGg6IDAgNXB4IDVweDtcXG59XFxuXFxuLkRyb3Bkb3duLW1lbnUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgYm94LXNoYWRvdzogMCAxcHggMCByZ2JhKDAsIDAsIDAsIDAuMDYpO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIG1hcmdpbi10b3A6IC0xcHg7XFxuICBtYXgtaGVpZ2h0OiAyMDBweDtcXG4gIG92ZXJmbG93LXk6IGF1dG87XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIHotaW5kZXg6IDEwMDA7XFxuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XFxufVxcblxcbi5Ecm9wZG93bi1tZW51IC5Ecm9wZG93bi1ncm91cCA+IC5Ecm9wZG93bi10aXRsZXtcXG4gIHBhZGRpbmc6IDhweCAxMHB4O1xcbiAgY29sb3I6IHJnYmEoNTEsIDUxLCA1MSwgMSk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xcbn1cXG5cXG4uRHJvcGRvd24tb3B0aW9uIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBjb2xvcjogcmdiYSg1MSwgNTEsIDUxLCAwLjgpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwYWRkaW5nOiA4cHggMTBweDtcXG59XFxuXFxuLkRyb3Bkb3duLW9wdGlvbjpsYXN0LWNoaWxkIHtcXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAycHg7XFxuICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMnB4O1xcbn1cXG5cXG4uRHJvcGRvd24tb3B0aW9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmY5ZmM7XFxuICBjb2xvcjogIzMzMztcXG59XFxuXFxuLkRyb3Bkb3duLW9wdGlvbi5pcy1zZWxlY3RlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmOWZjO1xcbiAgY29sb3I6ICMzMzM7XFxufVxcblxcbi5Ecm9wZG93bi1ub3Jlc3VsdHMge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGNvbG9yOiAjY2NjO1xcbiAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwYWRkaW5nOiA4cHggMTBweDtcXG59XFxuXCIsIFwiXCJdKTtcbi8vIEV4cG9ydHNcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSIsImZ1bmN0aW9uIGFyZUlucHV0c0VxdWFsKG5ld0lucHV0cywgbGFzdElucHV0cykge1xuICAgIGlmIChuZXdJbnB1dHMubGVuZ3RoICE9PSBsYXN0SW5wdXRzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3SW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChuZXdJbnB1dHNbaV0gIT09IGxhc3RJbnB1dHNbaV0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gbWVtb2l6ZU9uZShyZXN1bHRGbiwgaXNFcXVhbCkge1xuICAgIGlmIChpc0VxdWFsID09PSB2b2lkIDApIHsgaXNFcXVhbCA9IGFyZUlucHV0c0VxdWFsOyB9XG4gICAgdmFyIGxhc3RUaGlzO1xuICAgIHZhciBsYXN0QXJncyA9IFtdO1xuICAgIHZhciBsYXN0UmVzdWx0O1xuICAgIHZhciBjYWxsZWRPbmNlID0gZmFsc2U7XG4gICAgZnVuY3Rpb24gbWVtb2l6ZWQoKSB7XG4gICAgICAgIHZhciBuZXdBcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBuZXdBcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNhbGxlZE9uY2UgJiYgbGFzdFRoaXMgPT09IHRoaXMgJiYgaXNFcXVhbChuZXdBcmdzLCBsYXN0QXJncykpIHtcbiAgICAgICAgICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIGxhc3RSZXN1bHQgPSByZXN1bHRGbi5hcHBseSh0aGlzLCBuZXdBcmdzKTtcbiAgICAgICAgY2FsbGVkT25jZSA9IHRydWU7XG4gICAgICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICAgICAgbGFzdEFyZ3MgPSBuZXdBcmdzO1xuICAgICAgICByZXR1cm4gbGFzdFJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIG1lbW9pemVkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplT25lO1xuIiwiLypcblxuQmFzZWQgb2ZmIGdsYW1vcidzIFN0eWxlU2hlZXQsIHRoYW5rcyBTdW5pbCDinaTvuI9cblxuaGlnaCBwZXJmb3JtYW5jZSBTdHlsZVNoZWV0IGZvciBjc3MtaW4tanMgc3lzdGVtc1xuXG4tIHVzZXMgbXVsdGlwbGUgc3R5bGUgdGFncyBiZWhpbmQgdGhlIHNjZW5lcyBmb3IgbWlsbGlvbnMgb2YgcnVsZXNcbi0gdXNlcyBgaW5zZXJ0UnVsZWAgZm9yIGFwcGVuZGluZyBpbiBwcm9kdWN0aW9uIGZvciAqbXVjaCogZmFzdGVyIHBlcmZvcm1hbmNlXG5cbi8vIHVzYWdlXG5cbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCdcblxubGV0IHN0eWxlU2hlZXQgPSBuZXcgU3R5bGVTaGVldCh7IGtleTogJycsIGNvbnRhaW5lcjogZG9jdW1lbnQuaGVhZCB9KVxuXG5zdHlsZVNoZWV0Lmluc2VydCgnI2JveCB7IGJvcmRlcjogMXB4IHNvbGlkIHJlZDsgfScpXG4tIGFwcGVuZHMgYSBjc3MgcnVsZSBpbnRvIHRoZSBzdHlsZXNoZWV0XG5cbnN0eWxlU2hlZXQuZmx1c2goKVxuLSBlbXB0aWVzIHRoZSBzdHlsZXNoZWV0IG9mIGFsbCBpdHMgY29udGVudHNcblxuKi9cbi8vICRGbG93Rml4TWVcbmZ1bmN0aW9uIHNoZWV0Rm9yVGFnKHRhZykge1xuICBpZiAodGFnLnNoZWV0KSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIHJldHVybiB0YWcuc2hlZXQ7XG4gIH0gLy8gdGhpcyB3ZWlyZG5lc3MgYnJvdWdodCB0byB5b3UgYnkgZmlyZWZveFxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRvY3VtZW50LnN0eWxlU2hlZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGRvY3VtZW50LnN0eWxlU2hlZXRzW2ldLm93bmVyTm9kZSA9PT0gdGFnKSB7XG4gICAgICAvLyAkRmxvd0ZpeE1lXG4gICAgICByZXR1cm4gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWVtb3Rpb24nLCBvcHRpb25zLmtleSk7XG5cbiAgaWYgKG9wdGlvbnMubm9uY2UgIT09IHVuZGVmaW5lZCkge1xuICAgIHRhZy5zZXRBdHRyaWJ1dGUoJ25vbmNlJywgb3B0aW9ucy5ub25jZSk7XG4gIH1cblxuICB0YWcuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpKTtcbiAgcmV0dXJuIHRhZztcbn1cblxudmFyIFN0eWxlU2hlZXQgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdHlsZVNoZWV0KG9wdGlvbnMpIHtcbiAgICB0aGlzLmlzU3BlZWR5ID0gb3B0aW9ucy5zcGVlZHkgPT09IHVuZGVmaW5lZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgOiBvcHRpb25zLnNwZWVkeTtcbiAgICB0aGlzLnRhZ3MgPSBbXTtcbiAgICB0aGlzLmN0ciA9IDA7XG4gICAgdGhpcy5ub25jZSA9IG9wdGlvbnMubm9uY2U7IC8vIGtleSBpcyB0aGUgdmFsdWUgb2YgdGhlIGRhdGEtZW1vdGlvbiBhdHRyaWJ1dGUsIGl0J3MgdXNlZCB0byBpZGVudGlmeSBkaWZmZXJlbnQgc2hlZXRzXG5cbiAgICB0aGlzLmtleSA9IG9wdGlvbnMua2V5O1xuICAgIHRoaXMuY29udGFpbmVyID0gb3B0aW9ucy5jb250YWluZXI7XG4gICAgdGhpcy5iZWZvcmUgPSBudWxsO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN0eWxlU2hlZXQucHJvdG90eXBlO1xuXG4gIF9wcm90by5pbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQocnVsZSkge1xuICAgIC8vIHRoZSBtYXggbGVuZ3RoIGlzIGhvdyBtYW55IHJ1bGVzIHdlIGhhdmUgcGVyIHN0eWxlIHRhZywgaXQncyA2NTAwMCBpbiBzcGVlZHkgbW9kZVxuICAgIC8vIGl0J3MgMSBpbiBkZXYgYmVjYXVzZSB3ZSBpbnNlcnQgc291cmNlIG1hcHMgdGhhdCBtYXAgYSBzaW5nbGUgcnVsZSB0byBhIGxvY2F0aW9uXG4gICAgLy8gYW5kIHlvdSBjYW4gb25seSBoYXZlIG9uZSBzb3VyY2UgbWFwIHBlciBzdHlsZSB0YWdcbiAgICBpZiAodGhpcy5jdHIgJSAodGhpcy5pc1NwZWVkeSA/IDY1MDAwIDogMSkgPT09IDApIHtcbiAgICAgIHZhciBfdGFnID0gY3JlYXRlU3R5bGVFbGVtZW50KHRoaXMpO1xuXG4gICAgICB2YXIgYmVmb3JlO1xuXG4gICAgICBpZiAodGhpcy50YWdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBiZWZvcmUgPSB0aGlzLmJlZm9yZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJlZm9yZSA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV0ubmV4dFNpYmxpbmc7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29udGFpbmVyLmluc2VydEJlZm9yZShfdGFnLCBiZWZvcmUpO1xuICAgICAgdGhpcy50YWdzLnB1c2goX3RhZyk7XG4gICAgfVxuXG4gICAgdmFyIHRhZyA9IHRoaXMudGFnc1t0aGlzLnRhZ3MubGVuZ3RoIC0gMV07XG5cbiAgICBpZiAodGhpcy5pc1NwZWVkeSkge1xuICAgICAgdmFyIHNoZWV0ID0gc2hlZXRGb3JUYWcodGFnKTtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdGhpcyBpcyBhIHJlYWxseSBob3QgcGF0aFxuICAgICAgICAvLyB3ZSBjaGVjayB0aGUgc2Vjb25kIGNoYXJhY3RlciBmaXJzdCBiZWNhdXNlIGhhdmluZyBcImlcIlxuICAgICAgICAvLyBhcyB0aGUgc2Vjb25kIGNoYXJhY3RlciB3aWxsIGhhcHBlbiBsZXNzIG9mdGVuIHRoYW5cbiAgICAgICAgLy8gaGF2aW5nIFwiQFwiIGFzIHRoZSBmaXJzdCBjaGFyYWN0ZXJcbiAgICAgICAgdmFyIGlzSW1wb3J0UnVsZSA9IHJ1bGUuY2hhckNvZGVBdCgxKSA9PT0gMTA1ICYmIHJ1bGUuY2hhckNvZGVBdCgwKSA9PT0gNjQ7IC8vIHRoaXMgaXMgdGhlIHVsdHJhZmFzdCB2ZXJzaW9uLCB3b3JrcyBhY3Jvc3MgYnJvd3NlcnNcbiAgICAgICAgLy8gdGhlIGJpZyBkcmF3YmFjayBpcyB0aGF0IHRoZSBjc3Mgd29uJ3QgYmUgZWRpdGFibGUgaW4gZGV2dG9vbHNcblxuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIC8vIHdlIG5lZWQgdG8gaW5zZXJ0IEBpbXBvcnQgcnVsZXMgYmVmb3JlIGFueXRoaW5nIGVsc2VcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHRoZXJlIHdpbGwgYmUgYW4gZXJyb3JcbiAgICAgICAgLy8gdGVjaG5pY2FsbHkgdGhpcyBtZWFucyB0aGF0IHRoZSBAaW1wb3J0IHJ1bGVzIHdpbGxcbiAgICAgICAgLy8gX3VzdWFsbHlfKG5vdCBhbHdheXMgc2luY2UgdGhlcmUgY291bGQgYmUgbXVsdGlwbGUgc3R5bGUgdGFncylcbiAgICAgICAgLy8gYmUgdGhlIGZpcnN0IG9uZXMgaW4gcHJvZCBhbmQgZ2VuZXJhbGx5IGxhdGVyIGluIGRldlxuICAgICAgICAvLyB0aGlzIHNob3VsZG4ndCByZWFsbHkgbWF0dGVyIGluIHRoZSByZWFsIHdvcmxkIHRob3VnaFxuICAgICAgICAvLyBAaW1wb3J0IGlzIGdlbmVyYWxseSBvbmx5IHVzZWQgZm9yIGZvbnQgZmFjZXMgZnJvbSBnb29nbGUgZm9udHMgYW5kIGV0Yy5cbiAgICAgICAgLy8gc28gd2hpbGUgdGhpcyBjb3VsZCBiZSB0ZWNobmljYWxseSBjb3JyZWN0IHRoZW4gaXQgd291bGQgYmUgc2xvd2VyIGFuZCBsYXJnZXJcbiAgICAgICAgLy8gZm9yIGEgdGlueSBiaXQgb2YgY29ycmVjdG5lc3MgdGhhdCB3b24ndCBtYXR0ZXIgaW4gdGhlIHJlYWwgd29ybGRcbiAgICAgICAgaXNJbXBvcnRSdWxlID8gMCA6IHNoZWV0LmNzc1J1bGVzLmxlbmd0aCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiVGhlcmUgd2FzIGEgcHJvYmxlbSBpbnNlcnRpbmcgdGhlIGZvbGxvd2luZyBydWxlOiBcXFwiXCIgKyBydWxlICsgXCJcXFwiXCIsIGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRhZy5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlKSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdHIrKztcbiAgfTtcblxuICBfcHJvdG8uZmx1c2ggPSBmdW5jdGlvbiBmbHVzaCgpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgdGhpcy50YWdzLmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuICAgICAgcmV0dXJuIHRhZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRhZyk7XG4gICAgfSk7XG4gICAgdGhpcy50YWdzID0gW107XG4gICAgdGhpcy5jdHIgPSAwO1xuICB9O1xuXG4gIHJldHVybiBTdHlsZVNoZWV0O1xufSgpO1xuXG5leHBvcnQgeyBTdHlsZVNoZWV0IH07XG4iLCJmdW5jdGlvbiBzdHlsaXNfbWluIChXKSB7XG4gIGZ1bmN0aW9uIE0oZCwgYywgZSwgaCwgYSkge1xuICAgIGZvciAodmFyIG0gPSAwLCBiID0gMCwgdiA9IDAsIG4gPSAwLCBxLCBnLCB4ID0gMCwgSyA9IDAsIGssIHUgPSBrID0gcSA9IDAsIGwgPSAwLCByID0gMCwgSSA9IDAsIHQgPSAwLCBCID0gZS5sZW5ndGgsIEogPSBCIC0gMSwgeSwgZiA9ICcnLCBwID0gJycsIEYgPSAnJywgRyA9ICcnLCBDOyBsIDwgQjspIHtcbiAgICAgIGcgPSBlLmNoYXJDb2RlQXQobCk7XG4gICAgICBsID09PSBKICYmIDAgIT09IGIgKyBuICsgdiArIG0gJiYgKDAgIT09IGIgJiYgKGcgPSA0NyA9PT0gYiA/IDEwIDogNDcpLCBuID0gdiA9IG0gPSAwLCBCKyssIEorKyk7XG5cbiAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgIGlmIChsID09PSBKICYmICgwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpLCAwIDwgZi50cmltKCkubGVuZ3RoKSkge1xuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgIGYgKz0gZS5jaGFyQXQobCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZyA9IDU5O1xuICAgICAgICB9XG5cbiAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICBmID0gZi50cmltKCk7XG4gICAgICAgICAgICBxID0gZi5jaGFyQ29kZUF0KDApO1xuICAgICAgICAgICAgayA9IDE7XG5cbiAgICAgICAgICAgIGZvciAodCA9ICsrbDsgbCA8IEI7KSB7XG4gICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgICAgICAgaysrO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICAgICAgICAgIGstLTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZyA9IGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICBhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHUgPSBsICsgMTsgdSA8IEo7ICsrdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKGUuY2hhckNvZGVBdCh1KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDIgPT09IGcgJiYgNDIgPT09IGUuY2hhckNvZGVBdCh1IC0gMSkgJiYgbCArIDIgIT09IHUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoNDcgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHUgKyAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhayBhO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgbCA9IHU7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgICAgICBmb3IgKDsgbCsrIDwgSiAmJiBlLmNoYXJDb2RlQXQobCkgIT09IGc7KSB7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICgwID09PSBrKSBicmVhaztcbiAgICAgICAgICAgICAgbCsrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBrID0gZS5zdWJzdHJpbmcodCwgbCk7XG4gICAgICAgICAgICAwID09PSBxICYmIChxID0gKGYgPSBmLnJlcGxhY2UoY2EsICcnKS50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgICAgICAgICBzd2l0Y2ggKHEpIHtcbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICAwIDwgciAmJiAoZiA9IGYucmVwbGFjZShOLCAnJykpO1xuICAgICAgICAgICAgICAgIGcgPSBmLmNoYXJDb2RlQXQoMSk7XG5cbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBjO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgciA9IE87XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgayA9IE0oYywgciwgaywgZywgYSArIDEpO1xuICAgICAgICAgICAgICAgIHQgPSBrLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAwIDwgQSAmJiAociA9IFgoTywgZiwgSSksIEMgPSBIKDMsIGssIHIsIGMsIEQsIHosIHQsIGcsIGEsIGgpLCBmID0gci5qb2luKCcnKSwgdm9pZCAwICE9PSBDICYmIDAgPT09ICh0ID0gKGsgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZyA9IDAsIGsgPSAnJykpO1xuICAgICAgICAgICAgICAgIGlmICgwIDwgdCkgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShkYSwgZWEpO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDc6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZmEsICckMSAkMicpO1xuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGsgPSAxID09PSB3IHx8IDIgPT09IHcgJiYgTCgnQCcgKyBrLCAzKSA/ICdALXdlYmtpdC0nICsgayArICdAJyArIGsgOiAnQCcgKyBrO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyBrLCAxMTIgPT09IGggJiYgKGsgPSAocCArPSBrLCAnJykpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBrID0gJyc7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBrID0gTShjLCBYKGMsIGYsIEkpLCBrLCBoLCBhICsgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIEYgKz0gaztcbiAgICAgICAgICAgIGsgPSBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGYgPSAoMCA8IHIgPyBmLnJlcGxhY2UoTiwgJycpIDogZikudHJpbSgpO1xuICAgICAgICAgICAgaWYgKDEgPCAodCA9IGYubGVuZ3RoKSkgc3dpdGNoICgwID09PSB1ICYmIChxID0gZi5jaGFyQ29kZUF0KDApLCA0NSA9PT0gcSB8fCA5NiA8IHEgJiYgMTIzID4gcSkgJiYgKHQgPSAoZiA9IGYucmVwbGFjZSgnICcsICc6JykpLmxlbmd0aCksIDAgPCBBICYmIHZvaWQgMCAhPT0gKEMgPSBIKDEsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKSkgJiYgMCA9PT0gKHQgPSAoZiA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChmID0gJ1xceDAwXFx4MDAnKSwgcSA9IGYuY2hhckNvZGVBdCgwKSwgZyA9IGYuY2hhckNvZGVBdCgxKSwgcSkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgICBpZiAoMTA1ID09PSBnIHx8IDk5ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICBHICs9IGYgKyBlLmNoYXJBdChsKTtcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIDU4ICE9PSBmLmNoYXJDb2RlQXQodCAtIDEpICYmIChwICs9IFAoZiwgcSwgZywgZi5jaGFyQ29kZUF0KDIpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBJID0gciA9IHUgPSBxID0gMDtcbiAgICAgICAgICAgIGYgPSAnJztcbiAgICAgICAgICAgIGcgPSBlLmNoYXJDb2RlQXQoKytsKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICA0NyA9PT0gYiA/IGIgPSAwIDogMCA9PT0gMSArIHEgJiYgMTA3ICE9PSBoICYmIDAgPCBmLmxlbmd0aCAmJiAociA9IDEsIGYgKz0gJ1xceDAwJyk7XG4gICAgICAgICAgMCA8IEEgKiBZICYmIEgoMCwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpO1xuICAgICAgICAgIHogPSAxO1xuICAgICAgICAgIEQrKztcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDU5OlxuICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICAgICAgeisrO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeisrO1xuICAgICAgICAgIHkgPSBlLmNoYXJBdChsKTtcblxuICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBtICsgYikgc3dpdGNoICh4KSB7XG4gICAgICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICAgICAgeSA9ICcnO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgMzIgIT09IGcgJiYgKHkgPSAnICcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXDAnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcZic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFx2JztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAociA9IEkgPSAxLCB5ID0gJ1xcZicgKyB5KTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTA4OlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtICsgRSAmJiAwIDwgdSkgc3dpdGNoIChsIC0gdSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgIDExMiA9PT0geCAmJiA1OCA9PT0gZS5jaGFyQ29kZUF0KGwgLSAzKSAmJiAoRSA9IHgpO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgICAgMTExID09PSBLICYmIChFID0gSyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiAodSA9IGwpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSAmJiAociA9IDEsIHkgKz0gJ1xccicpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgIGNhc2UgMzk6XG4gICAgICAgICAgICAgIDAgPT09IGIgJiYgKG4gPSBuID09PSBnID8gMCA6IDAgPT09IG4gPyBnIDogbik7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbSsrO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MzpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0tLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgbSAmJiB2LS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIGIgKyBtKSB7XG4gICAgICAgICAgICAgICAgaWYgKDAgPT09IHEpIHN3aXRjaCAoMiAqIHggKyAzICogSykge1xuICAgICAgICAgICAgICAgICAgY2FzZSA1MzM6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBxID0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdisrO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gKyB1ICsgayAmJiAoayA9IDEpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgIGlmICghKDAgPCBuICsgbSArIHYpKSBzd2l0Y2ggKGIpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKDIgKiBnICsgMyAqIGUuY2hhckNvZGVBdChsICsgMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMzU6XG4gICAgICAgICAgICAgICAgICAgICAgYiA9IDQ3O1xuICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgICAgICAgICAgIHQgPSBsLCBiID0gNDI7XG4gICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MjpcbiAgICAgICAgICAgICAgICAgIDQ3ID09PSBnICYmIDQyID09PSB4ICYmIHQgKyAyICE9PSBsICYmICgzMyA9PT0gZS5jaGFyQ29kZUF0KHQgKyAyKSAmJiAocCArPSBlLnN1YnN0cmluZyh0LCBsICsgMSkpLCB5ID0gJycsIGIgPSAwKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIDAgPT09IGIgJiYgKGYgKz0geSk7XG4gICAgICB9XG5cbiAgICAgIEsgPSB4O1xuICAgICAgeCA9IGc7XG4gICAgICBsKys7XG4gICAgfVxuXG4gICAgdCA9IHAubGVuZ3RoO1xuXG4gICAgaWYgKDAgPCB0KSB7XG4gICAgICByID0gYztcbiAgICAgIGlmICgwIDwgQSAmJiAoQyA9IEgoMiwgcCwgciwgZCwgRCwgeiwgdCwgaCwgYSwgaCksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAocCA9IEMpLmxlbmd0aCkpIHJldHVybiBHICsgcCArIEY7XG4gICAgICBwID0gci5qb2luKCcsJykgKyAneycgKyBwICsgJ30nO1xuXG4gICAgICBpZiAoMCAhPT0gdyAqIEUpIHtcbiAgICAgICAgMiAhPT0gdyB8fCBMKHAsIDIpIHx8IChFID0gMCk7XG5cbiAgICAgICAgc3dpdGNoIChFKSB7XG4gICAgICAgICAgY2FzZSAxMTE6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKGhhLCAnOi1tb3otJDEnKSArIHA7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShRLCAnOjotd2Via2l0LWlucHV0LSQxJykgKyBwLnJlcGxhY2UoUSwgJzo6LW1vei0kMScpICsgcC5yZXBsYWNlKFEsICc6LW1zLWlucHV0LSQxJykgKyBwO1xuICAgICAgICB9XG5cbiAgICAgICAgRSA9IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIEcgKyBwICsgRjtcbiAgfVxuXG4gIGZ1bmN0aW9uIFgoZCwgYywgZSkge1xuICAgIHZhciBoID0gYy50cmltKCkuc3BsaXQoaWEpO1xuICAgIGMgPSBoO1xuICAgIHZhciBhID0gaC5sZW5ndGgsXG4gICAgICAgIG0gPSBkLmxlbmd0aDtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAwOlxuICAgICAgY2FzZSAxOlxuICAgICAgICB2YXIgYiA9IDA7XG5cbiAgICAgICAgZm9yIChkID0gMCA9PT0gbSA/ICcnIDogZFswXSArICcgJzsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGNbYl0gPSBaKGQsIGNbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICB2YXIgdiA9IGIgPSAwO1xuXG4gICAgICAgIGZvciAoYyA9IFtdOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgZm9yICh2YXIgbiA9IDA7IG4gPCBtOyArK24pIHtcbiAgICAgICAgICAgIGNbdisrXSA9IFooZFtuXSArICcgJywgaFtiXSwgZSkudHJpbSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcmV0dXJuIGM7XG4gIH1cblxuICBmdW5jdGlvbiBaKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMuY2hhckNvZGVBdCgwKTtcbiAgICAzMyA+IGggJiYgKGggPSAoYyA9IGMudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgIHN3aXRjaCAoaCkge1xuICAgICAgY2FzZSAzODpcbiAgICAgICAgcmV0dXJuIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBjYXNlIDU4OlxuICAgICAgICByZXR1cm4gZC50cmltKCkgKyBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKDAgPCAxICogZSAmJiAwIDwgYy5pbmRleE9mKCdcXGYnKSkgcmV0dXJuIGMucmVwbGFjZShGLCAoNTggPT09IGQuY2hhckNvZGVBdCgwKSA/ICcnIDogJyQxJykgKyBkLnRyaW0oKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGQgKyBjO1xuICB9XG5cbiAgZnVuY3Rpb24gUChkLCBjLCBlLCBoKSB7XG4gICAgdmFyIGEgPSBkICsgJzsnLFxuICAgICAgICBtID0gMiAqIGMgKyAzICogZSArIDQgKiBoO1xuXG4gICAgaWYgKDk0NCA9PT0gbSkge1xuICAgICAgZCA9IGEuaW5kZXhPZignOicsIDkpICsgMTtcbiAgICAgIHZhciBiID0gYS5zdWJzdHJpbmcoZCwgYS5sZW5ndGggLSAxKS50cmltKCk7XG4gICAgICBiID0gYS5zdWJzdHJpbmcoMCwgZCkudHJpbSgpICsgYiArICc7JztcbiAgICAgIHJldHVybiAxID09PSB3IHx8IDIgPT09IHcgJiYgTChiLCAxKSA/ICctd2Via2l0LScgKyBiICsgYiA6IGI7XG4gICAgfVxuXG4gICAgaWYgKDAgPT09IHcgfHwgMiA9PT0gdyAmJiAhTChhLCAxKSkgcmV0dXJuIGE7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMTAxNTpcbiAgICAgICAgcmV0dXJuIDk3ID09PSBhLmNoYXJDb2RlQXQoMTApID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NTE6XG4gICAgICAgIHJldHVybiAxMTYgPT09IGEuY2hhckNvZGVBdCgzKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTYzOlxuICAgICAgICByZXR1cm4gMTEwID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDEwMDk6XG4gICAgICAgIGlmICgxMDAgIT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTY5OlxuICAgICAgY2FzZSA5NDI6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTc4OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAxOTpcbiAgICAgIGNhc2UgOTgzOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1vei0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDg4MzpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoOCkpIHJldHVybiAnLXdlYmtpdC0nICsgYSArIGE7XG4gICAgICAgIGlmICgwIDwgYS5pbmRleE9mKCdpbWFnZS1zZXQoJywgMTEpKSByZXR1cm4gYS5yZXBsYWNlKGphLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5MzI6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDQpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg1KSkge1xuICAgICAgICAgIGNhc2UgMTAzOlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC0nICsgYS5yZXBsYWNlKCctZ3JvdycsICcnKSArICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdncm93JywgJ3Bvc2l0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ3NocmluaycsICduZWdhdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgOTg6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2Jhc2lzJywgJ3ByZWZlcnJlZC1zaXplJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk2NDpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDIzOlxuICAgICAgICBpZiAoOTkgIT09IGEuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZyhhLmluZGV4T2YoJzonLCAxNSkpLnJlcGxhY2UoJ2ZsZXgtJywgJycpLnJlcGxhY2UoJ3NwYWNlLWJldHdlZW4nLCAnanVzdGlmeScpO1xuICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LXBhY2snICsgYiArICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LXBhY2snICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAwNTpcbiAgICAgICAgcmV0dXJuIGthLnRlc3QoYSkgPyBhLnJlcGxhY2UoYWEsICc6LXdlYmtpdC0nKSArIGEucmVwbGFjZShhYSwgJzotbW96LScpICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMWUzOlxuICAgICAgICBiID0gYS5zdWJzdHJpbmcoMTMpLnRyaW0oKTtcbiAgICAgICAgYyA9IGIuaW5kZXhPZignLScpICsgMTtcblxuICAgICAgICBzd2l0Y2ggKGIuY2hhckNvZGVBdCgwKSArIGIuY2hhckNvZGVBdChjKSkge1xuICAgICAgICAgIGNhc2UgMjI2OlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMzI6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0Yi1ybCcpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ2xyJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMTc6XG4gICAgICAgIGlmICgtMSA9PT0gYS5pbmRleE9mKCdzdGlja3knLCA5KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTc1OlxuICAgICAgICBjID0gKGEgPSBkKS5sZW5ndGggLSAxMDtcbiAgICAgICAgYiA9ICgzMyA9PT0gYS5jaGFyQ29kZUF0KGMpID8gYS5zdWJzdHJpbmcoMCwgYykgOiBhKS5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JywgNykgKyAxKS50cmltKCk7XG5cbiAgICAgICAgc3dpdGNoIChtID0gYi5jaGFyQ29kZUF0KDApICsgKGIuY2hhckNvZGVBdCg3KSB8IDApKSB7XG4gICAgICAgICAgY2FzZSAyMDM6XG4gICAgICAgICAgICBpZiAoMTExID4gYi5jaGFyQ29kZUF0KDgpKSBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIwNzpcbiAgICAgICAgICBjYXNlIDEwMjpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArICgxMDIgPCBtID8gJ2lubGluZS0nIDogJycpICsgJ2JveCcpICsgJzsnICsgYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGEucmVwbGFjZShiLCAnLW1zLScgKyBiICsgJ2JveCcpICsgJzsnICsgYTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhICsgJzsnO1xuXG4gICAgICBjYXNlIDkzODpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNSkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDYpKSB7XG4gICAgICAgICAgY2FzZSAxMDU6XG4gICAgICAgICAgICByZXR1cm4gYiA9IGEucmVwbGFjZSgnLWl0ZW1zJywgJycpLCAnLXdlYmtpdC0nICsgYSArICctd2Via2l0LWJveC0nICsgYiArICctbXMtZmxleC0nICsgYiArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1pdGVtLScgKyBhLnJlcGxhY2UoYmEsICcnKSArIGE7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWxpbmUtcGFjaycgKyBhLnJlcGxhY2UoJ2FsaWduLWNvbnRlbnQnLCAnJykucmVwbGFjZShiYSwgJycpICsgYTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NzM6XG4gICAgICBjYXNlIDk4OTpcbiAgICAgICAgaWYgKDQ1ICE9PSBhLmNoYXJDb2RlQXQoMykgfHwgMTIyID09PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMTpcbiAgICAgIGNhc2UgOTUzOlxuICAgICAgICBpZiAoITAgPT09IGxhLnRlc3QoZCkpIHJldHVybiAxMTUgPT09IChiID0gZC5zdWJzdHJpbmcoZC5pbmRleE9mKCc6JykgKyAxKSkuY2hhckNvZGVBdCgwKSA/IFAoZC5yZXBsYWNlKCdzdHJldGNoJywgJ2ZpbGwtYXZhaWxhYmxlJyksIGMsIGUsIGgpLnJlcGxhY2UoJzpmaWxsLWF2YWlsYWJsZScsICc6c3RyZXRjaCcpIDogYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArIGEucmVwbGFjZShiLCAnLW1vei0nICsgYi5yZXBsYWNlKCdmaWxsLScsICcnKSkgKyBhO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSA5NjI6XG4gICAgICAgIGlmIChhID0gJy13ZWJraXQtJyArIGEgKyAoMTAyID09PSBhLmNoYXJDb2RlQXQoNSkgPyAnLW1zLScgKyBhIDogJycpICsgYSwgMjExID09PSBlICsgaCAmJiAxMDUgPT09IGEuY2hhckNvZGVBdCgxMykgJiYgMCA8IGEuaW5kZXhPZigndHJhbnNmb3JtJywgMTApKSByZXR1cm4gYS5zdWJzdHJpbmcoMCwgYS5pbmRleE9mKCc7JywgMjcpICsgMSkucmVwbGFjZShtYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICB9XG5cbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEwoZCwgYykge1xuICAgIHZhciBlID0gZC5pbmRleE9mKDEgPT09IGMgPyAnOicgOiAneycpLFxuICAgICAgICBoID0gZC5zdWJzdHJpbmcoMCwgMyAhPT0gYyA/IGUgOiAxMCk7XG4gICAgZSA9IGQuc3Vic3RyaW5nKGUgKyAxLCBkLmxlbmd0aCAtIDEpO1xuICAgIHJldHVybiBSKDIgIT09IGMgPyBoIDogaC5yZXBsYWNlKG5hLCAnJDEnKSwgZSwgYyk7XG4gIH1cblxuICBmdW5jdGlvbiBlYShkLCBjKSB7XG4gICAgdmFyIGUgPSBQKGMsIGMuY2hhckNvZGVBdCgwKSwgYy5jaGFyQ29kZUF0KDEpLCBjLmNoYXJDb2RlQXQoMikpO1xuICAgIHJldHVybiBlICE9PSBjICsgJzsnID8gZS5yZXBsYWNlKG9hLCAnIG9yICgkMSknKS5zdWJzdHJpbmcoNCkgOiAnKCcgKyBjICsgJyknO1xuICB9XG5cbiAgZnVuY3Rpb24gSChkLCBjLCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSB7XG4gICAgZm9yICh2YXIgZyA9IDAsIHggPSBjLCB3OyBnIDwgQTsgKytnKSB7XG4gICAgICBzd2l0Y2ggKHcgPSBTW2ddLmNhbGwoQiwgZCwgeCwgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkpIHtcbiAgICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICAgIGNhc2UgITE6XG4gICAgICAgIGNhc2UgITA6XG4gICAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHggPSB3O1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh4ICE9PSBjKSByZXR1cm4geDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFQoZCkge1xuICAgIHN3aXRjaCAoZCkge1xuICAgICAgY2FzZSB2b2lkIDA6XG4gICAgICBjYXNlIG51bGw6XG4gICAgICAgIEEgPSBTLmxlbmd0aCA9IDA7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGQpIFNbQSsrXSA9IGQ7ZWxzZSBpZiAoJ29iamVjdCcgPT09IHR5cGVvZiBkKSBmb3IgKHZhciBjID0gMCwgZSA9IGQubGVuZ3RoOyBjIDwgZTsgKytjKSB7XG4gICAgICAgICAgVChkW2NdKTtcbiAgICAgICAgfSBlbHNlIFkgPSAhIWQgfCAwO1xuICAgIH1cblxuICAgIHJldHVybiBUO1xuICB9XG5cbiAgZnVuY3Rpb24gVShkKSB7XG4gICAgZCA9IGQucHJlZml4O1xuICAgIHZvaWQgMCAhPT0gZCAmJiAoUiA9IG51bGwsIGQgPyAnZnVuY3Rpb24nICE9PSB0eXBlb2YgZCA/IHcgPSAxIDogKHcgPSAyLCBSID0gZCkgOiB3ID0gMCk7XG4gICAgcmV0dXJuIFU7XG4gIH1cblxuICBmdW5jdGlvbiBCKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQ7XG4gICAgMzMgPiBlLmNoYXJDb2RlQXQoMCkgJiYgKGUgPSBlLnRyaW0oKSk7XG4gICAgViA9IGU7XG4gICAgZSA9IFtWXTtcblxuICAgIGlmICgwIDwgQSkge1xuICAgICAgdmFyIGggPSBIKC0xLCBjLCBlLCBlLCBELCB6LCAwLCAwLCAwLCAwKTtcbiAgICAgIHZvaWQgMCAhPT0gaCAmJiAnc3RyaW5nJyA9PT0gdHlwZW9mIGggJiYgKGMgPSBoKTtcbiAgICB9XG5cbiAgICB2YXIgYSA9IE0oTywgZSwgYywgMCwgMCk7XG4gICAgMCA8IEEgJiYgKGggPSBIKC0yLCBhLCBlLCBlLCBELCB6LCBhLmxlbmd0aCwgMCwgMCwgMCksIHZvaWQgMCAhPT0gaCAmJiAoYSA9IGgpKTtcbiAgICBWID0gJyc7XG4gICAgRSA9IDA7XG4gICAgeiA9IEQgPSAxO1xuICAgIHJldHVybiBhO1xuICB9XG5cbiAgdmFyIGNhID0gL15cXDArL2csXG4gICAgICBOID0gL1tcXDBcXHJcXGZdL2csXG4gICAgICBhYSA9IC86ICovZyxcbiAgICAgIGthID0gL3pvb3xncmEvLFxuICAgICAgbWEgPSAvKFssOiBdKSh0cmFuc2Zvcm0pL2csXG4gICAgICBpYSA9IC8sXFxyKz8vZyxcbiAgICAgIEYgPSAvKFtcXHRcXHJcXG4gXSkqXFxmPyYvZyxcbiAgICAgIGZhID0gL0Aoa1xcdyspXFxzKihcXFMqKVxccyovLFxuICAgICAgUSA9IC86OihwbGFjZSkvZyxcbiAgICAgIGhhID0gLzoocmVhZC1vbmx5KS9nLFxuICAgICAgRyA9IC9bc3ZoXVxcdystW3RibHJdezJ9LyxcbiAgICAgIGRhID0gL1xcKFxccyooLiopXFxzKlxcKS9nLFxuICAgICAgb2EgPSAvKFtcXHNcXFNdKj8pOy9nLFxuICAgICAgYmEgPSAvLXNlbGZ8ZmxleC0vZyxcbiAgICAgIG5hID0gL1teXSo/KDpbcnBdW2VsXWFbXFx3LV0rKVteXSovLFxuICAgICAgbGEgPSAvc3RyZXRjaHw6XFxzKlxcdytcXC0oPzpjb250ZXxhdmFpbCkvLFxuICAgICAgamEgPSAvKFteLV0pKGltYWdlLXNldFxcKCkvLFxuICAgICAgeiA9IDEsXG4gICAgICBEID0gMSxcbiAgICAgIEUgPSAwLFxuICAgICAgdyA9IDEsXG4gICAgICBPID0gW10sXG4gICAgICBTID0gW10sXG4gICAgICBBID0gMCxcbiAgICAgIFIgPSBudWxsLFxuICAgICAgWSA9IDAsXG4gICAgICBWID0gJyc7XG4gIEIudXNlID0gVDtcbiAgQi5zZXQgPSBVO1xuICB2b2lkIDAgIT09IFcgJiYgVShXKTtcbiAgcmV0dXJuIEI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxpc19taW47XG4iLCJpbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSAnQGVtb3Rpb24vc2hlZXQnO1xuaW1wb3J0IFN0eWxpcyBmcm9tICdAZW1vdGlvbi9zdHlsaXMnO1xuaW1wb3J0ICdAZW1vdGlvbi93ZWFrLW1lbW9pemUnO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGh5c3VsdGFuL3N0eWxpcy5qcy90cmVlL21hc3Rlci9wbHVnaW5zL3J1bGUtc2hlZXRcbi8vIGlubGluZWQgdG8gYXZvaWQgdW1kIHdyYXBwZXIgYW5kIHBlZXJEZXAgd2FybmluZ3MvaW5zdGFsbGluZyBzdHlsaXNcbi8vIHNpbmNlIHdlIHVzZSBzdHlsaXMgYWZ0ZXIgY2xvc3VyZSBjb21waWxlclxudmFyIGRlbGltaXRlciA9ICcvKnwqLyc7XG52YXIgbmVlZGxlID0gZGVsaW1pdGVyICsgJ30nO1xuXG5mdW5jdGlvbiB0b1NoZWV0KGJsb2NrKSB7XG4gIGlmIChibG9jaykge1xuICAgIFNoZWV0LmN1cnJlbnQuaW5zZXJ0KGJsb2NrICsgJ30nKTtcbiAgfVxufVxuXG52YXIgU2hlZXQgPSB7XG4gIGN1cnJlbnQ6IG51bGxcbn07XG52YXIgcnVsZVNoZWV0ID0gZnVuY3Rpb24gcnVsZVNoZWV0KGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycywgcGFyZW50cywgbGluZSwgY29sdW1uLCBsZW5ndGgsIG5zLCBkZXB0aCwgYXQpIHtcbiAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgLy8gcHJvcGVydHlcbiAgICBjYXNlIDE6XG4gICAgICB7XG4gICAgICAgIHN3aXRjaCAoY29udGVudC5jaGFyQ29kZUF0KDApKSB7XG4gICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLy8gQGltcG9ydFxuICAgICAgICAgICAgICBTaGVldC5jdXJyZW50Lmluc2VydChjb250ZW50ICsgJzsnKTtcbiAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIC8vIGNoYXJjb2RlIGZvciBsXG5cbiAgICAgICAgICBjYXNlIDEwODpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgLy8gY2hhcmNvZGUgZm9yIGJcbiAgICAgICAgICAgICAgLy8gdGhpcyBpZ25vcmVzIGxhYmVsXG4gICAgICAgICAgICAgIGlmIChjb250ZW50LmNoYXJDb2RlQXQoMikgPT09IDk4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAvLyBzZWxlY3RvclxuXG4gICAgY2FzZSAyOlxuICAgICAge1xuICAgICAgICBpZiAobnMgPT09IDApIHJldHVybiBjb250ZW50ICsgZGVsaW1pdGVyO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAvLyBhdC1ydWxlXG5cbiAgICBjYXNlIDM6XG4gICAgICB7XG4gICAgICAgIHN3aXRjaCAobnMpIHtcbiAgICAgICAgICAvLyBAZm9udC1mYWNlLCBAcGFnZVxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgIGNhc2UgMTEyOlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBTaGVldC5jdXJyZW50Lmluc2VydChzZWxlY3RvcnNbMF0gKyBjb250ZW50KTtcbiAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQgKyAoYXQgPT09IDAgPyBkZWxpbWl0ZXIgOiAnJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIGNhc2UgLTI6XG4gICAgICB7XG4gICAgICAgIGNvbnRlbnQuc3BsaXQobmVlZGxlKS5mb3JFYWNoKHRvU2hlZXQpO1xuICAgICAgfVxuICB9XG59O1xuXG52YXIgY3JlYXRlQ2FjaGUgPSBmdW5jdGlvbiBjcmVhdGVDYWNoZShvcHRpb25zKSB7XG4gIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIG9wdGlvbnMgPSB7fTtcbiAgdmFyIGtleSA9IG9wdGlvbnMua2V5IHx8ICdjc3MnO1xuICB2YXIgc3R5bGlzT3B0aW9ucztcblxuICBpZiAob3B0aW9ucy5wcmVmaXggIT09IHVuZGVmaW5lZCkge1xuICAgIHN0eWxpc09wdGlvbnMgPSB7XG4gICAgICBwcmVmaXg6IG9wdGlvbnMucHJlZml4XG4gICAgfTtcbiAgfVxuXG4gIHZhciBzdHlsaXMgPSBuZXcgU3R5bGlzKHN0eWxpc09wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZVxuICAgIGlmICgvW15hLXotXS8udGVzdChrZXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbW90aW9uIGtleSBtdXN0IG9ubHkgY29udGFpbiBsb3dlciBjYXNlIGFscGhhYmV0aWNhbCBjaGFyYWN0ZXJzIGFuZCAtIGJ1dCBcXFwiXCIgKyBrZXkgKyBcIlxcXCIgd2FzIHBhc3NlZFwiKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaW5zZXJ0ZWQgPSB7fTsgLy8gJEZsb3dGaXhNZVxuXG4gIHZhciBjb250YWluZXI7XG5cbiAge1xuICAgIGNvbnRhaW5lciA9IG9wdGlvbnMuY29udGFpbmVyIHx8IGRvY3VtZW50LmhlYWQ7XG4gICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcInN0eWxlW2RhdGEtZW1vdGlvbi1cIiArIGtleSArIFwiXVwiKTtcbiAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKG5vZGVzLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgdmFyIGF0dHJpYiA9IG5vZGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1lbW90aW9uLVwiICsga2V5KTsgLy8gJEZsb3dGaXhNZVxuXG4gICAgICBhdHRyaWIuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChpZCkge1xuICAgICAgICBpbnNlcnRlZFtpZF0gPSB0cnVlO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChub2RlLnBhcmVudE5vZGUgIT09IGNvbnRhaW5lcikge1xuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB2YXIgX2luc2VydDtcblxuICB7XG4gICAgc3R5bGlzLnVzZShvcHRpb25zLnN0eWxpc1BsdWdpbnMpKHJ1bGVTaGVldCk7XG5cbiAgICBfaW5zZXJ0ID0gZnVuY3Rpb24gaW5zZXJ0KHNlbGVjdG9yLCBzZXJpYWxpemVkLCBzaGVldCwgc2hvdWxkQ2FjaGUpIHtcbiAgICAgIHZhciBuYW1lID0gc2VyaWFsaXplZC5uYW1lO1xuICAgICAgU2hlZXQuY3VycmVudCA9IHNoZWV0O1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzZXJpYWxpemVkLm1hcCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhciBtYXAgPSBzZXJpYWxpemVkLm1hcDtcbiAgICAgICAgU2hlZXQuY3VycmVudCA9IHtcbiAgICAgICAgICBpbnNlcnQ6IGZ1bmN0aW9uIGluc2VydChydWxlKSB7XG4gICAgICAgICAgICBzaGVldC5pbnNlcnQocnVsZSArIG1hcCk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBzdHlsaXMoc2VsZWN0b3IsIHNlcmlhbGl6ZWQuc3R5bGVzKTtcblxuICAgICAgaWYgKHNob3VsZENhY2hlKSB7XG4gICAgICAgIGNhY2hlLmluc2VydGVkW25hbWVdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViZjczNzFhNGNkN2U2MDA5ZWY2MWQwYVxuICAgIHZhciBjb21tZW50U3RhcnQgPSAvXFwvXFwqL2c7XG4gICAgdmFyIGNvbW1lbnRFbmQgPSAvXFwqXFwvL2c7XG4gICAgc3R5bGlzLnVzZShmdW5jdGlvbiAoY29udGV4dCwgY29udGVudCkge1xuICAgICAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgICAgIGNhc2UgLTE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgd2hpbGUgKGNvbW1lbnRTdGFydC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICAgIGNvbW1lbnRFbmQubGFzdEluZGV4ID0gY29tbWVudFN0YXJ0Lmxhc3RJbmRleDtcblxuICAgICAgICAgICAgICBpZiAoY29tbWVudEVuZC50ZXN0KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICAgICAgY29tbWVudFN0YXJ0Lmxhc3RJbmRleCA9IGNvbW1lbnRFbmQubGFzdEluZGV4O1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3VyIHN0eWxlcyBoYXZlIGFuIHVudGVybWluYXRlZCBjb21tZW50IChcIi8qXCIgd2l0aG91dCBjb3JyZXNwb25kaW5nIFwiKi9cIikuJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbW1lbnRTdGFydC5sYXN0SW5kZXggPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIHN0eWxpcy51c2UoZnVuY3Rpb24gKGNvbnRleHQsIGNvbnRlbnQsIHNlbGVjdG9ycykge1xuICAgICAgc3dpdGNoIChjb250ZXh0KSB7XG4gICAgICAgIGNhc2UgLTE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgdmFyIGZsYWcgPSAnZW1vdGlvbi1kaXNhYmxlLXNlcnZlci1yZW5kZXJpbmctdW5zYWZlLXNlbGVjdG9yLXdhcm5pbmctcGxlYXNlLWRvLW5vdC11c2UtdGhpcy10aGUtd2FybmluZy1leGlzdHMtZm9yLWEtcmVhc29uJztcbiAgICAgICAgICAgIHZhciB1bnNhZmVQc2V1ZG9DbGFzc2VzID0gY29udGVudC5tYXRjaCgvKDpmaXJzdHw6bnRofDpudGgtbGFzdCktY2hpbGQvZyk7XG5cbiAgICAgICAgICAgIGlmICh1bnNhZmVQc2V1ZG9DbGFzc2VzICYmIGNhY2hlLmNvbXBhdCAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICB1bnNhZmVQc2V1ZG9DbGFzc2VzLmZvckVhY2goZnVuY3Rpb24gKHVuc2FmZVBzZXVkb0NsYXNzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGlnbm9yZVJlZ0V4cCA9IG5ldyBSZWdFeHAodW5zYWZlUHNldWRvQ2xhc3MgKyBcIi4qXFxcXC9cXFxcKiBcIiArIGZsYWcgKyBcIiBcXFxcKlxcXFwvXCIpO1xuICAgICAgICAgICAgICAgIHZhciBpZ25vcmUgPSBpZ25vcmVSZWdFeHAudGVzdChjb250ZW50KTtcblxuICAgICAgICAgICAgICAgIGlmICh1bnNhZmVQc2V1ZG9DbGFzcyAmJiAhaWdub3JlKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiVGhlIHBzZXVkbyBjbGFzcyBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcyArIFwiXFxcIiBpcyBwb3RlbnRpYWxseSB1bnNhZmUgd2hlbiBkb2luZyBzZXJ2ZXItc2lkZSByZW5kZXJpbmcuIFRyeSBjaGFuZ2luZyBpdCB0byBcXFwiXCIgKyB1bnNhZmVQc2V1ZG9DbGFzcy5zcGxpdCgnLWNoaWxkJylbMF0gKyBcIi1vZi10eXBlXFxcIi5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdmFyIGNhY2hlID0ge1xuICAgIGtleToga2V5LFxuICAgIHNoZWV0OiBuZXcgU3R5bGVTaGVldCh7XG4gICAgICBrZXk6IGtleSxcbiAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyLFxuICAgICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgICBzcGVlZHk6IG9wdGlvbnMuc3BlZWR5XG4gICAgfSksXG4gICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgaW5zZXJ0ZWQ6IGluc2VydGVkLFxuICAgIHJlZ2lzdGVyZWQ6IHt9LFxuICAgIGluc2VydDogX2luc2VydFxuICB9O1xuICByZXR1cm4gY2FjaGU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVDYWNoZTtcbiIsInZhciBpc0Jyb3dzZXIgPSBcIm9iamVjdFwiICE9PSAndW5kZWZpbmVkJztcbmZ1bmN0aW9uIGdldFJlZ2lzdGVyZWRTdHlsZXMocmVnaXN0ZXJlZCwgcmVnaXN0ZXJlZFN0eWxlcywgY2xhc3NOYW1lcykge1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gJyc7XG4gIGNsYXNzTmFtZXMuc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICBpZiAocmVnaXN0ZXJlZFtjbGFzc05hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlZ2lzdGVyZWRTdHlsZXMucHVzaChyZWdpc3RlcmVkW2NsYXNzTmFtZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByYXdDbGFzc05hbWUgKz0gY2xhc3NOYW1lICsgXCIgXCI7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJhd0NsYXNzTmFtZTtcbn1cbnZhciBpbnNlcnRTdHlsZXMgPSBmdW5jdGlvbiBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIGlzU3RyaW5nVGFnKSB7XG4gIHZhciBjbGFzc05hbWUgPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcblxuICBpZiAoIC8vIHdlIG9ubHkgbmVlZCB0byBhZGQgdGhlIHN0eWxlcyB0byB0aGUgcmVnaXN0ZXJlZCBjYWNoZSBpZiB0aGVcbiAgLy8gY2xhc3MgbmFtZSBjb3VsZCBiZSB1c2VkIGZ1cnRoZXIgZG93blxuICAvLyB0aGUgdHJlZSBidXQgaWYgaXQncyBhIHN0cmluZyB0YWcsIHdlIGtub3cgaXQgd29uJ3RcbiAgLy8gc28gd2UgZG9uJ3QgaGF2ZSB0byBhZGQgaXQgdG8gcmVnaXN0ZXJlZCBjYWNoZS5cbiAgLy8gdGhpcyBpbXByb3ZlcyBtZW1vcnkgdXNhZ2Ugc2luY2Ugd2UgY2FuIGF2b2lkIHN0b3JpbmcgdGhlIHdob2xlIHN0eWxlIHN0cmluZ1xuICAoaXNTdHJpbmdUYWcgPT09IGZhbHNlIHx8IC8vIHdlIG5lZWQgdG8gYWx3YXlzIHN0b3JlIGl0IGlmIHdlJ3JlIGluIGNvbXBhdCBtb2RlIGFuZFxuICAvLyBpbiBub2RlIHNpbmNlIGVtb3Rpb24tc2VydmVyIHJlbGllcyBvbiB3aGV0aGVyIGEgc3R5bGUgaXMgaW5cbiAgLy8gdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8ga25vdyB3aGV0aGVyIGEgc3R5bGUgaXMgZ2xvYmFsIG9yIG5vdFxuICAvLyBhbHNvLCBub3RlIHRoYXQgdGhpcyBjaGVjayB3aWxsIGJlIGRlYWQgY29kZSBlbGltaW5hdGVkIGluIHRoZSBicm93c2VyXG4gIGlzQnJvd3NlciA9PT0gZmFsc2UgJiYgY2FjaGUuY29tcGF0ICE9PSB1bmRlZmluZWQpICYmIGNhY2hlLnJlZ2lzdGVyZWRbY2xhc3NOYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2FjaGUucmVnaXN0ZXJlZFtjbGFzc05hbWVdID0gc2VyaWFsaXplZC5zdHlsZXM7XG4gIH1cblxuICBpZiAoY2FjaGUuaW5zZXJ0ZWRbc2VyaWFsaXplZC5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIGN1cnJlbnQgPSBzZXJpYWxpemVkO1xuXG4gICAgZG8ge1xuICAgICAgdmFyIG1heWJlU3R5bGVzID0gY2FjaGUuaW5zZXJ0KFwiLlwiICsgY2xhc3NOYW1lLCBjdXJyZW50LCBjYWNoZS5zaGVldCwgdHJ1ZSk7XG5cbiAgICAgIGN1cnJlbnQgPSBjdXJyZW50Lm5leHQ7XG4gICAgfSB3aGlsZSAoY3VycmVudCAhPT0gdW5kZWZpbmVkKTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL2dhcnljb3VydC9tdXJtdXJoYXNoLWpzXG4vLyBQb3J0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vYWFwcGxlYnkvc21oYXNoZXIvYmxvYi82MWEwNTMwZjI4Mjc3ZjJlODUwYmZjMzk2MDBjZTYxZDAyYjUxOGRlL3NyYy9NdXJtdXJIYXNoMi5jcHAjTDM3LUw4NlxuZnVuY3Rpb24gbXVybXVyMihzdHIpIHtcbiAgLy8gJ20nIGFuZCAncicgYXJlIG1peGluZyBjb25zdGFudHMgZ2VuZXJhdGVkIG9mZmxpbmUuXG4gIC8vIFRoZXkncmUgbm90IHJlYWxseSAnbWFnaWMnLCB0aGV5IGp1c3QgaGFwcGVuIHRvIHdvcmsgd2VsbC5cbiAgLy8gY29uc3QgbSA9IDB4NWJkMWU5OTU7XG4gIC8vIGNvbnN0IHIgPSAyNDtcbiAgLy8gSW5pdGlhbGl6ZSB0aGUgaGFzaFxuICB2YXIgaCA9IDA7IC8vIE1peCA0IGJ5dGVzIGF0IGEgdGltZSBpbnRvIHRoZSBoYXNoXG5cbiAgdmFyIGssXG4gICAgICBpID0gMCxcbiAgICAgIGxlbiA9IHN0ci5sZW5ndGg7XG5cbiAgZm9yICg7IGxlbiA+PSA0OyArK2ksIGxlbiAtPSA0KSB7XG4gICAgayA9IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgOCB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMTYgfCAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4ZmYpIDw8IDI0O1xuICAgIGsgPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICAgIGsgXj1cbiAgICAvKiBrID4+PiByOiAqL1xuICAgIGsgPj4+IDI0O1xuICAgIGggPVxuICAgIC8qIE1hdGguaW11bChrLCBtKTogKi9cbiAgICAoayAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChrID4+PiAxNikgKiAweGU5OTUgPDwgMTYpIF5cbiAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBIYW5kbGUgdGhlIGxhc3QgZmV3IGJ5dGVzIG9mIHRoZSBpbnB1dCBhcnJheVxuXG5cbiAgc3dpdGNoIChsZW4pIHtcbiAgICBjYXNlIDM6XG4gICAgICBoIF49IChzdHIuY2hhckNvZGVBdChpICsgMikgJiAweGZmKSA8PCAxNjtcblxuICAgIGNhc2UgMjpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAxKSAmIDB4ZmYpIDw8IDg7XG5cbiAgICBjYXNlIDE6XG4gICAgICBoIF49IHN0ci5jaGFyQ29kZUF0KGkpICYgMHhmZjtcbiAgICAgIGggPVxuICAgICAgLyogTWF0aC5pbXVsKGgsIG0pOiAqL1xuICAgICAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgfSAvLyBEbyBhIGZldyBmaW5hbCBtaXhlcyBvZiB0aGUgaGFzaCB0byBlbnN1cmUgdGhlIGxhc3QgZmV3XG4gIC8vIGJ5dGVzIGFyZSB3ZWxsLWluY29ycG9yYXRlZC5cblxuXG4gIGggXj0gaCA+Pj4gMTM7XG4gIGggPVxuICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gIChoICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGggPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gIHJldHVybiAoKGggXiBoID4+PiAxNSkgPj4+IDApLnRvU3RyaW5nKDM2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbXVybXVyMjtcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0IGhhc2hTdHJpbmcgZnJvbSAnQGVtb3Rpb24vaGFzaCc7XG5pbXBvcnQgdW5pdGxlc3MgZnJvbSAnQGVtb3Rpb24vdW5pdGxlc3MnO1xuaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciBJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUiA9IFwiWW91IGhhdmUgaWxsZWdhbCBlc2NhcGUgc2VxdWVuY2UgaW4geW91ciB0ZW1wbGF0ZSBsaXRlcmFsLCBtb3N0IGxpa2VseSBpbnNpZGUgY29udGVudCdzIHByb3BlcnR5IHZhbHVlLlxcbkJlY2F1c2UgeW91IHdyaXRlIHlvdXIgQ1NTIGluc2lkZSBhIEphdmFTY3JpcHQgc3RyaW5nIHlvdSBhY3R1YWxseSBoYXZlIHRvIGRvIGRvdWJsZSBlc2NhcGluZywgc28gZm9yIGV4YW1wbGUgXFxcImNvbnRlbnQ6ICdcXFxcMDBkNyc7XFxcIiBzaG91bGQgYmVjb21lIFxcXCJjb250ZW50OiAnXFxcXFxcXFwwMGQ3JztcXFwiLlxcbllvdSBjYW4gcmVhZCBtb3JlIGFib3V0IHRoaXMgaGVyZTpcXG5odHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9UZW1wbGF0ZV9saXRlcmFscyNFUzIwMThfcmV2aXNpb25fb2ZfaWxsZWdhbF9lc2NhcGVfc2VxdWVuY2VzXCI7XG52YXIgVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IgPSBcIllvdSBoYXZlIHBhc3NlZCBpbiBmYWxzeSB2YWx1ZSBhcyBzdHlsZSBvYmplY3QncyBrZXkgKGNhbiBoYXBwZW4gd2hlbiBpbiBleGFtcGxlIHlvdSBwYXNzIHVuZXhwb3J0ZWQgY29tcG9uZW50IGFzIGNvbXB1dGVkIGtleSkuXCI7XG52YXIgaHlwaGVuYXRlUmVnZXggPSAvW0EtWl18Xm1zL2c7XG52YXIgYW5pbWF0aW9uUmVnZXggPSAvX0VNT18oW15fXSs/KV8oW15dKj8pX0VNT18vZztcblxudmFyIGlzQ3VzdG9tUHJvcGVydHkgPSBmdW5jdGlvbiBpc0N1c3RvbVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiBwcm9wZXJ0eS5jaGFyQ29kZUF0KDEpID09PSA0NTtcbn07XG5cbnZhciBpc1Byb2Nlc3NhYmxlVmFsdWUgPSBmdW5jdGlvbiBpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbic7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlTmFtZSA9IG1lbW9pemUoZnVuY3Rpb24gKHN0eWxlTmFtZSkge1xuICByZXR1cm4gaXNDdXN0b21Qcm9wZXJ0eShzdHlsZU5hbWUpID8gc3R5bGVOYW1lIDogc3R5bGVOYW1lLnJlcGxhY2UoaHlwaGVuYXRlUmVnZXgsICctJCYnKS50b0xvd2VyQ2FzZSgpO1xufSk7XG5cbnZhciBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdhbmltYXRpb24nOlxuICAgIGNhc2UgJ2FuaW1hdGlvbk5hbWUnOlxuICAgICAge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICBuYW1lOiBwMSxcbiAgICAgICAgICAgICAgc3R5bGVzOiBwMixcbiAgICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHAxO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gIH1cblxuICBpZiAodW5pdGxlc3Nba2V5XSAhPT0gMSAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdmFsdWUgIT09IDApIHtcbiAgICByZXR1cm4gdmFsdWUgKyAncHgnO1xuICB9XG5cbiAgcmV0dXJuIHZhbHVlO1xufTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGNvbnRlbnRWYWx1ZVBhdHRlcm4gPSAvKGF0dHJ8Y2FsY3xjb3VudGVycz98dXJsKVxcKC87XG4gIHZhciBjb250ZW50VmFsdWVzID0gWydub3JtYWwnLCAnbm9uZScsICdjb3VudGVyJywgJ29wZW4tcXVvdGUnLCAnY2xvc2UtcXVvdGUnLCAnbm8tb3Blbi1xdW90ZScsICduby1jbG9zZS1xdW90ZScsICdpbml0aWFsJywgJ2luaGVyaXQnLCAndW5zZXQnXTtcbiAgdmFyIG9sZFByb2Nlc3NTdHlsZVZhbHVlID0gcHJvY2Vzc1N0eWxlVmFsdWU7XG4gIHZhciBtc1BhdHRlcm4gPSAvXi1tcy0vO1xuICB2YXIgaHlwaGVuUGF0dGVybiA9IC8tKC4pL2c7XG4gIHZhciBoeXBoZW5hdGVkQ2FjaGUgPSB7fTtcblxuICBwcm9jZXNzU3R5bGVWYWx1ZSA9IGZ1bmN0aW9uIHByb2Nlc3NTdHlsZVZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5ID09PSAnY29udGVudCcpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8IGNvbnRlbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPT09IC0xICYmICFjb250ZW50VmFsdWVQYXR0ZXJuLnRlc3QodmFsdWUpICYmICh2YWx1ZS5jaGFyQXQoMCkgIT09IHZhbHVlLmNoYXJBdCh2YWx1ZS5sZW5ndGggLSAxKSB8fCB2YWx1ZS5jaGFyQXQoMCkgIT09ICdcIicgJiYgdmFsdWUuY2hhckF0KDApICE9PSBcIidcIikpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIllvdSBzZWVtIHRvIGJlIHVzaW5nIGEgdmFsdWUgZm9yICdjb250ZW50JyB3aXRob3V0IHF1b3RlcywgdHJ5IHJlcGxhY2luZyBpdCB3aXRoIGBjb250ZW50OiAnXFxcIlwiICsgdmFsdWUgKyBcIlxcXCInYFwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJvY2Vzc2VkID0gb2xkUHJvY2Vzc1N0eWxlVmFsdWUoa2V5LCB2YWx1ZSk7XG5cbiAgICBpZiAocHJvY2Vzc2VkICE9PSAnJyAmJiAhaXNDdXN0b21Qcm9wZXJ0eShrZXkpICYmIGtleS5pbmRleE9mKCctJykgIT09IC0xICYmIGh5cGhlbmF0ZWRDYWNoZVtrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGh5cGhlbmF0ZWRDYWNoZVtrZXldID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVc2luZyBrZWJhYi1jYXNlIGZvciBjc3MgcHJvcGVydGllcyBpbiBvYmplY3RzIGlzIG5vdCBzdXBwb3J0ZWQuIERpZCB5b3UgbWVhbiBcIiArIGtleS5yZXBsYWNlKG1zUGF0dGVybiwgJ21zLScpLnJlcGxhY2UoaHlwaGVuUGF0dGVybiwgZnVuY3Rpb24gKHN0ciwgX2NoYXIpIHtcbiAgICAgICAgcmV0dXJuIF9jaGFyLnRvVXBwZXJDYXNlKCk7XG4gICAgICB9KSArIFwiP1wiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvY2Vzc2VkO1xuICB9O1xufVxuXG52YXIgc2hvdWxkV2FybkFib3V0SW50ZXJwb2xhdGluZ0NsYXNzTmFtZUZyb21Dc3MgPSB0cnVlO1xuXG5mdW5jdGlvbiBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBpbnRlcnBvbGF0aW9uLCBjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uKSB7XG4gIGlmIChpbnRlcnBvbGF0aW9uID09IG51bGwpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBpZiAoaW50ZXJwb2xhdGlvbi5fX2Vtb3Rpb25fc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBpbnRlcnBvbGF0aW9uLnRvU3RyaW5nKCkgPT09ICdOT19DT01QT05FTlRfU0VMRUNUT1InKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbXBvbmVudCBzZWxlY3RvcnMgY2FuIG9ubHkgYmUgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGJhYmVsLXBsdWdpbi1lbW90aW9uLicpO1xuICAgIH1cblxuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlb2YgaW50ZXJwb2xhdGlvbikge1xuICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9XG5cbiAgICBjYXNlICdvYmplY3QnOlxuICAgICAge1xuICAgICAgICBpZiAoaW50ZXJwb2xhdGlvbi5hbmltID09PSAxKSB7XG4gICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgbmFtZTogaW50ZXJwb2xhdGlvbi5uYW1lLFxuICAgICAgICAgICAgc3R5bGVzOiBpbnRlcnBvbGF0aW9uLnN0eWxlcyxcbiAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgIH07XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb24ubmFtZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBpbnRlcnBvbGF0aW9uLm5leHQ7XG5cbiAgICAgICAgICBpZiAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBub3QgdGhlIG1vc3QgZWZmaWNpZW50IHRoaW5nIGV2ZXIgYnV0IHRoaXMgaXMgYSBwcmV0dHkgcmFyZSBjYXNlXG4gICAgICAgICAgICAvLyBhbmQgdGhlcmUgd2lsbCBiZSB2ZXJ5IGZldyBpdGVyYXRpb25zIG9mIHRoaXMgZ2VuZXJhbGx5XG4gICAgICAgICAgICB3aGlsZSAobmV4dCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGN1cnNvciA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBuZXh0Lm5hbWUsXG4gICAgICAgICAgICAgICAgc3R5bGVzOiBuZXh0LnN0eWxlcyxcbiAgICAgICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgbmV4dCA9IG5leHQubmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc3R5bGVzID0gaW50ZXJwb2xhdGlvbi5zdHlsZXMgKyBcIjtcIjtcblxuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24ubWFwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN0eWxlcyArPSBpbnRlcnBvbGF0aW9uLm1hcDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gc3R5bGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24pO1xuICAgICAgfVxuXG4gICAgY2FzZSAnZnVuY3Rpb24nOlxuICAgICAge1xuICAgICAgICBpZiAobWVyZ2VkUHJvcHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHZhciBwcmV2aW91c0N1cnNvciA9IGN1cnNvcjtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gaW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcyk7XG4gICAgICAgICAgY3Vyc29yID0gcHJldmlvdXNDdXJzb3I7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHJlc3VsdCwgY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbik7XG4gICAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Z1bmN0aW9ucyB0aGF0IGFyZSBpbnRlcnBvbGF0ZWQgaW4gY3NzIGNhbGxzIHdpbGwgYmUgc3RyaW5naWZpZWQuXFxuJyArICdJZiB5b3Ugd2FudCB0byBoYXZlIGEgY3NzIGNhbGwgYmFzZWQgb24gcHJvcHMsIGNyZWF0ZSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIGNzcyBjYWxsIGxpa2UgdGhpc1xcbicgKyAnbGV0IGR5bmFtaWNTdHlsZSA9IChwcm9wcykgPT4gY3NzYGNvbG9yOiAke3Byb3BzLmNvbG9yfWBcXG4nICsgJ0l0IGNhbiBiZSBjYWxsZWQgZGlyZWN0bHkgd2l0aCBwcm9wcyBvciBpbnRlcnBvbGF0ZWQgaW4gYSBzdHlsZWQgY2FsbCBsaWtlIHRoaXNcXG4nICsgXCJsZXQgU29tZUNvbXBvbmVudCA9IHN0eWxlZCgnZGl2JylgJHtkeW5hbWljU3R5bGV9YFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gW107XG4gICAgICAgIHZhciByZXBsYWNlZCA9IGludGVycG9sYXRpb24ucmVwbGFjZShhbmltYXRpb25SZWdleCwgZnVuY3Rpb24gKG1hdGNoLCBwMSwgcDIpIHtcbiAgICAgICAgICB2YXIgZmFrZVZhck5hbWUgPSBcImFuaW1hdGlvblwiICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgICAgbWF0Y2hlZC5wdXNoKFwiY29uc3QgXCIgKyBmYWtlVmFyTmFtZSArIFwiID0ga2V5ZnJhbWVzYFwiICsgcDIucmVwbGFjZSgvXkBrZXlmcmFtZXMgYW5pbWF0aW9uLVxcdysvLCAnJykgKyBcImBcIik7XG4gICAgICAgICAgcmV0dXJuIFwiJHtcIiArIGZha2VWYXJOYW1lICsgXCJ9XCI7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChtYXRjaGVkLmxlbmd0aCkge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ2BrZXlmcmFtZXNgIG91dHB1dCBnb3QgaW50ZXJwb2xhdGVkIGludG8gcGxhaW4gc3RyaW5nLCBwbGVhc2Ugd3JhcCBpdCB3aXRoIGBjc3NgLlxcblxcbicgKyAnSW5zdGVhZCBvZiBkb2luZyB0aGlzOlxcblxcbicgKyBbXS5jb25jYXQobWF0Y2hlZCwgW1wiYFwiICsgcmVwbGFjZWQgKyBcImBcIl0pLmpvaW4oJ1xcbicpICsgJ1xcblxcbllvdSBzaG91bGQgd3JhcCBpdCB3aXRoIGBjc3NgIGxpa2UgdGhpczpcXG5cXG4nICsgKFwiY3NzYFwiICsgcmVwbGFjZWQgKyBcImBcIikpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGJyZWFrO1xuICB9IC8vIGZpbmFsaXplIHN0cmluZyB2YWx1ZXMgKHJlZ3VsYXIgc3RyaW5ncyBhbmQgZnVuY3Rpb25zIGludGVycG9sYXRlZCBpbnRvIGNzcyBjYWxscylcblxuXG4gIGlmIChyZWdpc3RlcmVkID09IG51bGwpIHtcbiAgICByZXR1cm4gaW50ZXJwb2xhdGlvbjtcbiAgfVxuXG4gIHZhciBjYWNoZWQgPSByZWdpc3RlcmVkW2ludGVycG9sYXRpb25dO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGNvdWxkQmVTZWxlY3RvckludGVycG9sYXRpb24gJiYgc2hvdWxkV2FybkFib3V0SW50ZXJwb2xhdGluZ0NsYXNzTmFtZUZyb21Dc3MgJiYgY2FjaGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zb2xlLmVycm9yKCdJbnRlcnBvbGF0aW5nIGEgY2xhc3NOYW1lIGZyb20gY3NzYGAgaXMgbm90IHJlY29tbWVuZGVkIGFuZCB3aWxsIGNhdXNlIHByb2JsZW1zIHdpdGggY29tcG9zaXRpb24uXFxuJyArICdJbnRlcnBvbGF0aW5nIGEgY2xhc3NOYW1lIGZyb20gY3NzYGAgd2lsbCBiZSBjb21wbGV0ZWx5IHVuc3VwcG9ydGVkIGluIGEgZnV0dXJlIG1ham9yIHZlcnNpb24gb2YgRW1vdGlvbicpO1xuICAgIHNob3VsZFdhcm5BYm91dEludGVycG9sYXRpbmdDbGFzc05hbWVGcm9tQ3NzID0gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gY2FjaGVkICE9PSB1bmRlZmluZWQgJiYgIWNvdWxkQmVTZWxlY3RvckludGVycG9sYXRpb24gPyBjYWNoZWQgOiBpbnRlcnBvbGF0aW9uO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdGcm9tT2JqZWN0KG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBvYmopIHtcbiAgdmFyIHN0cmluZyA9ICcnO1xuXG4gIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9iai5sZW5ndGg7IGkrKykge1xuICAgICAgc3RyaW5nICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9ialtpXSwgZmFsc2UpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBfa2V5IGluIG9iaikge1xuICAgICAgdmFyIHZhbHVlID0gb2JqW19rZXldO1xuXG4gICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAocmVnaXN0ZXJlZCAhPSBudWxsICYmIHJlZ2lzdGVyZWRbdmFsdWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgcmVnaXN0ZXJlZFt2YWx1ZV0gKyBcIn1cIjtcbiAgICAgICAgfSBlbHNlIGlmIChpc1Byb2Nlc3NhYmxlVmFsdWUodmFsdWUpKSB7XG4gICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlKSArIFwiO1wiO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoX2tleSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHNlbGVjdG9ycyBjYW4gb25seSBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYmFiZWwtcGx1Z2luLWVtb3Rpb24uJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdHlwZW9mIHZhbHVlWzBdID09PSAnc3RyaW5nJyAmJiAocmVnaXN0ZXJlZCA9PSBudWxsIHx8IHJlZ2lzdGVyZWRbdmFsdWVbMF1dID09PSB1bmRlZmluZWQpKSB7XG4gICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IHZhbHVlLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgaWYgKGlzUHJvY2Vzc2FibGVWYWx1ZSh2YWx1ZVtfaV0pKSB7XG4gICAgICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBwcm9jZXNzU3R5bGVWYWx1ZShfa2V5LCB2YWx1ZVtfaV0pICsgXCI7XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBpbnRlcnBvbGF0ZWQgPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCB2YWx1ZSwgZmFsc2UpO1xuXG4gICAgICAgICAgc3dpdGNoIChfa2V5KSB7XG4gICAgICAgICAgICBjYXNlICdhbmltYXRpb24nOlxuICAgICAgICAgICAgY2FzZSAnYW5pbWF0aW9uTmFtZSc6XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzdHJpbmcgKz0gcHJvY2Vzc1N0eWxlTmFtZShfa2V5KSArIFwiOlwiICsgaW50ZXJwb2xhdGVkICsgXCI7XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIF9rZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFVOREVGSU5FRF9BU19PQkpFQ1RfS0VZX0VSUk9SKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzdHJpbmcgKz0gX2tleSArIFwie1wiICsgaW50ZXJwb2xhdGVkICsgXCJ9XCI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3RyaW5nO1xufVxuXG52YXIgbGFiZWxQYXR0ZXJuID0gL2xhYmVsOlxccyooW15cXHM7XFxue10rKVxccyo7L2c7XG52YXIgc291cmNlTWFwUGF0dGVybjtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgc291cmNlTWFwUGF0dGVybiA9IC9cXC9cXCojXFxzc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uXFwvanNvbjtcXFMrXFxzK1xcKlxcLy87XG59IC8vIHRoaXMgaXMgdGhlIGN1cnNvciBmb3Iga2V5ZnJhbWVzXG4vLyBrZXlmcmFtZXMgYXJlIHN0b3JlZCBvbiB0aGUgU2VyaWFsaXplZFN0eWxlcyBvYmplY3QgYXMgYSBsaW5rZWQgbGlzdFxuXG5cbnZhciBjdXJzb3I7XG52YXIgc2VyaWFsaXplU3R5bGVzID0gZnVuY3Rpb24gc2VyaWFsaXplU3R5bGVzKGFyZ3MsIHJlZ2lzdGVyZWQsIG1lcmdlZFByb3BzKSB7XG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgYXJnc1swXSA9PT0gJ29iamVjdCcgJiYgYXJnc1swXSAhPT0gbnVsbCAmJiBhcmdzWzBdLnN0eWxlcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGFyZ3NbMF07XG4gIH1cblxuICB2YXIgc3RyaW5nTW9kZSA9IHRydWU7XG4gIHZhciBzdHlsZXMgPSAnJztcbiAgY3Vyc29yID0gdW5kZWZpbmVkO1xuICB2YXIgc3RyaW5ncyA9IGFyZ3NbMF07XG5cbiAgaWYgKHN0cmluZ3MgPT0gbnVsbCB8fCBzdHJpbmdzLnJhdyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgc3RyaW5nTW9kZSA9IGZhbHNlO1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBzdHJpbmdzLCBmYWxzZSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc3RyaW5nc1swXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SKTtcbiAgICB9XG5cbiAgICBzdHlsZXMgKz0gc3RyaW5nc1swXTtcbiAgfSAvLyB3ZSBzdGFydCBhdCAxIHNpbmNlIHdlJ3ZlIGFscmVhZHkgaGFuZGxlZCB0aGUgZmlyc3QgYXJnXG5cblxuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICBzdHlsZXMgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgYXJnc1tpXSwgc3R5bGVzLmNoYXJDb2RlQXQoc3R5bGVzLmxlbmd0aCAtIDEpID09PSA0Nik7XG5cbiAgICBpZiAoc3RyaW5nTW9kZSkge1xuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgc3RyaW5nc1tpXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgICAgfVxuXG4gICAgICBzdHlsZXMgKz0gc3RyaW5nc1tpXTtcbiAgICB9XG4gIH1cblxuICB2YXIgc291cmNlTWFwO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgc3R5bGVzID0gc3R5bGVzLnJlcGxhY2Uoc291cmNlTWFwUGF0dGVybiwgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICBzb3VyY2VNYXAgPSBtYXRjaDtcbiAgICAgIHJldHVybiAnJztcbiAgICB9KTtcbiAgfSAvLyB1c2luZyBhIGdsb2JhbCByZWdleCB3aXRoIC5leGVjIGlzIHN0YXRlZnVsIHNvIGxhc3RJbmRleCBoYXMgdG8gYmUgcmVzZXQgZWFjaCB0aW1lXG5cblxuICBsYWJlbFBhdHRlcm4ubGFzdEluZGV4ID0gMDtcbiAgdmFyIGlkZW50aWZpZXJOYW1lID0gJyc7XG4gIHZhciBtYXRjaDsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YjgwOWMyY2YyOTQ5ODAwYTBmNjFmYjVcblxuICB3aGlsZSAoKG1hdGNoID0gbGFiZWxQYXR0ZXJuLmV4ZWMoc3R5bGVzKSkgIT09IG51bGwpIHtcbiAgICBpZGVudGlmaWVyTmFtZSArPSAnLScgKyAvLyAkRmxvd0ZpeE1lIHdlIGtub3cgaXQncyBub3QgbnVsbFxuICAgIG1hdGNoWzFdO1xuICB9XG5cbiAgdmFyIG5hbWUgPSBoYXNoU3RyaW5nKHN0eWxlcykgKyBpZGVudGlmaWVyTmFtZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vICRGbG93Rml4TWUgU2VyaWFsaXplZFN0eWxlcyB0eXBlIGRvZXNuJ3QgaGF2ZSB0b1N0cmluZyBwcm9wZXJ0eSAoYW5kIHdlIGRvbid0IHdhbnQgdG8gYWRkIGl0KVxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgICBtYXA6IHNvdXJjZU1hcCxcbiAgICAgIG5leHQ6IGN1cnNvcixcbiAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIFwiWW91IGhhdmUgdHJpZWQgdG8gc3RyaW5naWZ5IG9iamVjdCByZXR1cm5lZCBmcm9tIGBjc3NgIGZ1bmN0aW9uLiBJdCBpc24ndCBzdXBwb3NlZCB0byBiZSB1c2VkIGRpcmVjdGx5IChlLmcuIGFzIHZhbHVlIG9mIHRoZSBgY2xhc3NOYW1lYCBwcm9wKSwgYnV0IHJhdGhlciBoYW5kZWQgdG8gZW1vdGlvbiBzbyBpdCBjYW4gaGFuZGxlIGl0IChlLmcuIGFzIHZhbHVlIG9mIGBjc3NgIHByb3ApLlwiO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBzdHlsZXMsXG4gICAgbmV4dDogY3Vyc29yXG4gIH07XG59O1xuXG5leHBvcnQgeyBzZXJpYWxpemVTdHlsZXMgfTtcbiIsIi8qIGVzbGludC1kaXNhYmxlICovXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vZ2FyeWNvdXJ0L211cm11cmhhc2gtanNcbi8vIFBvcnRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hYXBwbGVieS9zbWhhc2hlci9ibG9iLzYxYTA1MzBmMjgyNzdmMmU4NTBiZmMzOTYwMGNlNjFkMDJiNTE4ZGUvc3JjL011cm11ckhhc2gyLmNwcCNMMzctTDg2XG5mdW5jdGlvbiBtdXJtdXIyKHN0cikge1xuICAvLyAnbScgYW5kICdyJyBhcmUgbWl4aW5nIGNvbnN0YW50cyBnZW5lcmF0ZWQgb2ZmbGluZS5cbiAgLy8gVGhleSdyZSBub3QgcmVhbGx5ICdtYWdpYycsIHRoZXkganVzdCBoYXBwZW4gdG8gd29yayB3ZWxsLlxuICAvLyBjb25zdCBtID0gMHg1YmQxZTk5NTtcbiAgLy8gY29uc3QgciA9IDI0O1xuICAvLyBJbml0aWFsaXplIHRoZSBoYXNoXG4gIHZhciBoID0gMDsgLy8gTWl4IDQgYnl0ZXMgYXQgYSB0aW1lIGludG8gdGhlIGhhc2hcblxuICB2YXIgayxcbiAgICAgIGkgPSAwLFxuICAgICAgbGVuID0gc3RyLmxlbmd0aDtcblxuICBmb3IgKDsgbGVuID49IDQ7ICsraSwgbGVuIC09IDQpIHtcbiAgICBrID0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmIHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCA4IHwgKHN0ci5jaGFyQ29kZUF0KCsraSkgJiAweGZmKSA8PCAxNiB8IChzdHIuY2hhckNvZGVBdCgrK2kpICYgMHhmZikgPDwgMjQ7XG4gICAgayA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNik7XG4gICAgayBePVxuICAgIC8qIGsgPj4+IHI6ICovXG4gICAgayA+Pj4gMjQ7XG4gICAgaCA9XG4gICAgLyogTWF0aC5pbXVsKGssIG0pOiAqL1xuICAgIChrICYgMHhmZmZmKSAqIDB4NWJkMWU5OTUgKyAoKGsgPj4+IDE2KSAqIDB4ZTk5NSA8PCAxNikgXlxuICAgIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIEhhbmRsZSB0aGUgbGFzdCBmZXcgYnl0ZXMgb2YgdGhlIGlucHV0IGFycmF5XG5cblxuICBzd2l0Y2ggKGxlbikge1xuICAgIGNhc2UgMzpcbiAgICAgIGggXj0gKHN0ci5jaGFyQ29kZUF0KGkgKyAyKSAmIDB4ZmYpIDw8IDE2O1xuXG4gICAgY2FzZSAyOlxuICAgICAgaCBePSAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmZikgPDwgODtcblxuICAgIGNhc2UgMTpcbiAgICAgIGggXj0gc3RyLmNoYXJDb2RlQXQoaSkgJiAweGZmO1xuICAgICAgaCA9XG4gICAgICAvKiBNYXRoLmltdWwoaCwgbSk6ICovXG4gICAgICAoaCAmIDB4ZmZmZikgKiAweDViZDFlOTk1ICsgKChoID4+PiAxNikgKiAweGU5OTUgPDwgMTYpO1xuICB9IC8vIERvIGEgZmV3IGZpbmFsIG1peGVzIG9mIHRoZSBoYXNoIHRvIGVuc3VyZSB0aGUgbGFzdCBmZXdcbiAgLy8gYnl0ZXMgYXJlIHdlbGwtaW5jb3Jwb3JhdGVkLlxuXG5cbiAgaCBePSBoID4+PiAxMztcbiAgaCA9XG4gIC8qIE1hdGguaW11bChoLCBtKTogKi9cbiAgKGggJiAweGZmZmYpICogMHg1YmQxZTk5NSArICgoaCA+Pj4gMTYpICogMHhlOTk1IDw8IDE2KTtcbiAgcmV0dXJuICgoaCBeIGggPj4+IDE1KSA+Pj4gMCkudG9TdHJpbmcoMzYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBtdXJtdXIyO1xuIiwidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiIsImZ1bmN0aW9uIG1lbW9pemUoZm4pIHtcbiAgdmFyIGNhY2hlID0ge307XG4gIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgaWYgKGNhY2hlW2FyZ10gPT09IHVuZGVmaW5lZCkgY2FjaGVbYXJnXSA9IGZuKGFyZyk7XG4gICAgcmV0dXJuIGNhY2hlW2FyZ107XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemU7XG4iLCJpbXBvcnQgaGFzaFN0cmluZyBmcm9tICdAZW1vdGlvbi9oYXNoJztcbmltcG9ydCB1bml0bGVzcyBmcm9tICdAZW1vdGlvbi91bml0bGVzcyc7XG5pbXBvcnQgbWVtb2l6ZSBmcm9tICdAZW1vdGlvbi9tZW1vaXplJztcblxudmFyIElMTEVHQUxfRVNDQVBFX1NFUVVFTkNFX0VSUk9SID0gXCJZb3UgaGF2ZSBpbGxlZ2FsIGVzY2FwZSBzZXF1ZW5jZSBpbiB5b3VyIHRlbXBsYXRlIGxpdGVyYWwsIG1vc3QgbGlrZWx5IGluc2lkZSBjb250ZW50J3MgcHJvcGVydHkgdmFsdWUuXFxuQmVjYXVzZSB5b3Ugd3JpdGUgeW91ciBDU1MgaW5zaWRlIGEgSmF2YVNjcmlwdCBzdHJpbmcgeW91IGFjdHVhbGx5IGhhdmUgdG8gZG8gZG91YmxlIGVzY2FwaW5nLCBzbyBmb3IgZXhhbXBsZSBcXFwiY29udGVudDogJ1xcXFwwMGQ3JztcXFwiIHNob3VsZCBiZWNvbWUgXFxcImNvbnRlbnQ6ICdcXFxcXFxcXDAwZDcnO1xcXCIuXFxuWW91IGNhbiByZWFkIG1vcmUgYWJvdXQgdGhpcyBoZXJlOlxcbmh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL1RlbXBsYXRlX2xpdGVyYWxzI0VTMjAxOF9yZXZpc2lvbl9vZl9pbGxlZ2FsX2VzY2FwZV9zZXF1ZW5jZXNcIjtcbnZhciBVTkRFRklORURfQVNfT0JKRUNUX0tFWV9FUlJPUiA9IFwiWW91IGhhdmUgcGFzc2VkIGluIGZhbHN5IHZhbHVlIGFzIHN0eWxlIG9iamVjdCdzIGtleSAoY2FuIGhhcHBlbiB3aGVuIGluIGV4YW1wbGUgeW91IHBhc3MgdW5leHBvcnRlZCBjb21wb25lbnQgYXMgY29tcHV0ZWQga2V5KS5cIjtcbnZhciBoeXBoZW5hdGVSZWdleCA9IC9bQS1aXXxebXMvZztcbnZhciBhbmltYXRpb25SZWdleCA9IC9fRU1PXyhbXl9dKz8pXyhbXl0qPylfRU1PXy9nO1xuXG52YXIgaXNDdXN0b21Qcm9wZXJ0eSA9IGZ1bmN0aW9uIGlzQ3VzdG9tUHJvcGVydHkocHJvcGVydHkpIHtcbiAgcmV0dXJuIHByb3BlcnR5LmNoYXJDb2RlQXQoMSkgPT09IDQ1O1xufTtcblxudmFyIGlzUHJvY2Vzc2FibGVWYWx1ZSA9IGZ1bmN0aW9uIGlzUHJvY2Vzc2FibGVWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgIT09ICdib29sZWFuJztcbn07XG5cbnZhciBwcm9jZXNzU3R5bGVOYW1lID0gbWVtb2l6ZShmdW5jdGlvbiAoc3R5bGVOYW1lKSB7XG4gIHJldHVybiBpc0N1c3RvbVByb3BlcnR5KHN0eWxlTmFtZSkgPyBzdHlsZU5hbWUgOiBzdHlsZU5hbWUucmVwbGFjZShoeXBoZW5hdGVSZWdleCwgJy0kJicpLnRvTG93ZXJDYXNlKCk7XG59KTtcblxudmFyIHByb2Nlc3NTdHlsZVZhbHVlID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlVmFsdWUoa2V5LCB2YWx1ZSkge1xuICBzd2l0Y2ggKGtleSkge1xuICAgIGNhc2UgJ2FuaW1hdGlvbic6XG4gICAgY2FzZSAnYW5pbWF0aW9uTmFtZSc6XG4gICAgICB7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoYW5pbWF0aW9uUmVnZXgsIGZ1bmN0aW9uIChtYXRjaCwgcDEsIHAyKSB7XG4gICAgICAgICAgICBjdXJzb3IgPSB7XG4gICAgICAgICAgICAgIG5hbWU6IHAxLFxuICAgICAgICAgICAgICBzdHlsZXM6IHAyLFxuICAgICAgICAgICAgICBuZXh0OiBjdXJzb3JcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gcDE7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgfVxuXG4gIGlmICh1bml0bGVzc1trZXldICE9PSAxICYmICFpc0N1c3RvbVByb3BlcnR5KGtleSkgJiYgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB2YWx1ZSArICdweCc7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgY29udGVudFZhbHVlUGF0dGVybiA9IC8oYXR0cnxjYWxjfGNvdW50ZXJzP3x1cmwpXFwoLztcbiAgdmFyIGNvbnRlbnRWYWx1ZXMgPSBbJ25vcm1hbCcsICdub25lJywgJ2NvdW50ZXInLCAnb3Blbi1xdW90ZScsICdjbG9zZS1xdW90ZScsICduby1vcGVuLXF1b3RlJywgJ25vLWNsb3NlLXF1b3RlJywgJ2luaXRpYWwnLCAnaW5oZXJpdCcsICd1bnNldCddO1xuICB2YXIgb2xkUHJvY2Vzc1N0eWxlVmFsdWUgPSBwcm9jZXNzU3R5bGVWYWx1ZTtcbiAgdmFyIG1zUGF0dGVybiA9IC9eLW1zLS87XG4gIHZhciBoeXBoZW5QYXR0ZXJuID0gLy0oLikvZztcbiAgdmFyIGh5cGhlbmF0ZWRDYWNoZSA9IHt9O1xuXG4gIHByb2Nlc3NTdHlsZVZhbHVlID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlVmFsdWUoa2V5LCB2YWx1ZSkge1xuICAgIGlmIChrZXkgPT09ICdjb250ZW50Jykge1xuICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgfHwgY29udGVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA9PT0gLTEgJiYgIWNvbnRlbnRWYWx1ZVBhdHRlcm4udGVzdCh2YWx1ZSkgJiYgKHZhbHVlLmNoYXJBdCgwKSAhPT0gdmFsdWUuY2hhckF0KHZhbHVlLmxlbmd0aCAtIDEpIHx8IHZhbHVlLmNoYXJBdCgwKSAhPT0gJ1wiJyAmJiB2YWx1ZS5jaGFyQXQoMCkgIT09IFwiJ1wiKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiWW91IHNlZW0gdG8gYmUgdXNpbmcgYSB2YWx1ZSBmb3IgJ2NvbnRlbnQnIHdpdGhvdXQgcXVvdGVzLCB0cnkgcmVwbGFjaW5nIGl0IHdpdGggYGNvbnRlbnQ6ICdcXFwiXCIgKyB2YWx1ZSArIFwiXFxcIidgXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBwcm9jZXNzZWQgPSBvbGRQcm9jZXNzU3R5bGVWYWx1ZShrZXksIHZhbHVlKTtcblxuICAgIGlmIChwcm9jZXNzZWQgIT09ICcnICYmICFpc0N1c3RvbVByb3BlcnR5KGtleSkgJiYga2V5LmluZGV4T2YoJy0nKSAhPT0gLTEgJiYgaHlwaGVuYXRlZENhY2hlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgaHlwaGVuYXRlZENhY2hlW2tleV0gPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcihcIlVzaW5nIGtlYmFiLWNhc2UgZm9yIGNzcyBwcm9wZXJ0aWVzIGluIG9iamVjdHMgaXMgbm90IHN1cHBvcnRlZC4gRGlkIHlvdSBtZWFuIFwiICsga2V5LnJlcGxhY2UobXNQYXR0ZXJuLCAnbXMtJykucmVwbGFjZShoeXBoZW5QYXR0ZXJuLCBmdW5jdGlvbiAoc3RyLCBfY2hhcikge1xuICAgICAgICByZXR1cm4gX2NoYXIudG9VcHBlckNhc2UoKTtcbiAgICAgIH0pICsgXCI/XCIpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9jZXNzZWQ7XG4gIH07XG59XG5cbnZhciBzaG91bGRXYXJuQWJvdXRJbnRlcnBvbGF0aW5nQ2xhc3NOYW1lRnJvbUNzcyA9IHRydWU7XG5cbmZ1bmN0aW9uIGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIGludGVycG9sYXRpb24sIGNvdWxkQmVTZWxlY3RvckludGVycG9sYXRpb24pIHtcbiAgaWYgKGludGVycG9sYXRpb24gPT0gbnVsbCkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIGlmIChpbnRlcnBvbGF0aW9uLl9fZW1vdGlvbl9zdHlsZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGludGVycG9sYXRpb24udG9TdHJpbmcoKSA9PT0gJ05PX0NPTVBPTkVOVF9TRUxFQ1RPUicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHNlbGVjdG9ycyBjYW4gb25seSBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYmFiZWwtcGx1Z2luLWVtb3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGludGVycG9sYXRpb247XG4gIH1cblxuICBzd2l0Y2ggKHR5cGVvZiBpbnRlcnBvbGF0aW9uKSB7XG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICAgIH1cblxuICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICB7XG4gICAgICAgIGlmIChpbnRlcnBvbGF0aW9uLmFuaW0gPT09IDEpIHtcbiAgICAgICAgICBjdXJzb3IgPSB7XG4gICAgICAgICAgICBuYW1lOiBpbnRlcnBvbGF0aW9uLm5hbWUsXG4gICAgICAgICAgICBzdHlsZXM6IGludGVycG9sYXRpb24uc3R5bGVzLFxuICAgICAgICAgICAgbmV4dDogY3Vyc29yXG4gICAgICAgICAgfTtcbiAgICAgICAgICByZXR1cm4gaW50ZXJwb2xhdGlvbi5uYW1lO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGludGVycG9sYXRpb24uc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICB2YXIgbmV4dCA9IGludGVycG9sYXRpb24ubmV4dDtcblxuICAgICAgICAgIGlmIChuZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIG5vdCB0aGUgbW9zdCBlZmZpY2llbnQgdGhpbmcgZXZlciBidXQgdGhpcyBpcyBhIHByZXR0eSByYXJlIGNhc2VcbiAgICAgICAgICAgIC8vIGFuZCB0aGVyZSB3aWxsIGJlIHZlcnkgZmV3IGl0ZXJhdGlvbnMgb2YgdGhpcyBnZW5lcmFsbHlcbiAgICAgICAgICAgIHdoaWxlIChuZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgY3Vyc29yID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IG5leHQubmFtZSxcbiAgICAgICAgICAgICAgICBzdHlsZXM6IG5leHQuc3R5bGVzLFxuICAgICAgICAgICAgICAgIG5leHQ6IGN1cnNvclxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBuZXh0ID0gbmV4dC5uZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIHZhciBzdHlsZXMgPSBpbnRlcnBvbGF0aW9uLnN0eWxlcyArIFwiO1wiO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgaW50ZXJwb2xhdGlvbi5tYXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc3R5bGVzICs9IGludGVycG9sYXRpb24ubWFwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBzdHlsZXM7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY3JlYXRlU3RyaW5nRnJvbU9iamVjdChtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgaW50ZXJwb2xhdGlvbik7XG4gICAgICB9XG5cbiAgICBjYXNlICdmdW5jdGlvbic6XG4gICAgICB7XG4gICAgICAgIGlmIChtZXJnZWRQcm9wcyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdmFyIHByZXZpb3VzQ3Vyc29yID0gY3Vyc29yO1xuICAgICAgICAgIHZhciByZXN1bHQgPSBpbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzKTtcbiAgICAgICAgICBjdXJzb3IgPSBwcmV2aW91c0N1cnNvcjtcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgcmVzdWx0LCBjb3VsZEJlU2VsZWN0b3JJbnRlcnBvbGF0aW9uKTtcbiAgICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRnVuY3Rpb25zIHRoYXQgYXJlIGludGVycG9sYXRlZCBpbiBjc3MgY2FsbHMgd2lsbCBiZSBzdHJpbmdpZmllZC5cXG4nICsgJ0lmIHlvdSB3YW50IHRvIGhhdmUgYSBjc3MgY2FsbCBiYXNlZCBvbiBwcm9wcywgY3JlYXRlIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgY3NzIGNhbGwgbGlrZSB0aGlzXFxuJyArICdsZXQgZHluYW1pY1N0eWxlID0gKHByb3BzKSA9PiBjc3NgY29sb3I6ICR7cHJvcHMuY29sb3J9YFxcbicgKyAnSXQgY2FuIGJlIGNhbGxlZCBkaXJlY3RseSB3aXRoIHByb3BzIG9yIGludGVycG9sYXRlZCBpbiBhIHN0eWxlZCBjYWxsIGxpa2UgdGhpc1xcbicgKyBcImxldCBTb21lQ29tcG9uZW50ID0gc3R5bGVkKCdkaXYnKWAke2R5bmFtaWNTdHlsZX1gXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBbXTtcbiAgICAgICAgdmFyIHJlcGxhY2VkID0gaW50ZXJwb2xhdGlvbi5yZXBsYWNlKGFuaW1hdGlvblJlZ2V4LCBmdW5jdGlvbiAobWF0Y2gsIHAxLCBwMikge1xuICAgICAgICAgIHZhciBmYWtlVmFyTmFtZSA9IFwiYW5pbWF0aW9uXCIgKyBtYXRjaGVkLmxlbmd0aDtcbiAgICAgICAgICBtYXRjaGVkLnB1c2goXCJjb25zdCBcIiArIGZha2VWYXJOYW1lICsgXCIgPSBrZXlmcmFtZXNgXCIgKyBwMi5yZXBsYWNlKC9eQGtleWZyYW1lcyBhbmltYXRpb24tXFx3Ky8sICcnKSArIFwiYFwiKTtcbiAgICAgICAgICByZXR1cm4gXCIke1wiICsgZmFrZVZhck5hbWUgKyBcIn1cIjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKG1hdGNoZWQubGVuZ3RoKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignYGtleWZyYW1lc2Agb3V0cHV0IGdvdCBpbnRlcnBvbGF0ZWQgaW50byBwbGFpbiBzdHJpbmcsIHBsZWFzZSB3cmFwIGl0IHdpdGggYGNzc2AuXFxuXFxuJyArICdJbnN0ZWFkIG9mIGRvaW5nIHRoaXM6XFxuXFxuJyArIFtdLmNvbmNhdChtYXRjaGVkLCBbXCJgXCIgKyByZXBsYWNlZCArIFwiYFwiXSkuam9pbignXFxuJykgKyAnXFxuXFxuWW91IHNob3VsZCB3cmFwIGl0IHdpdGggYGNzc2AgbGlrZSB0aGlzOlxcblxcbicgKyAoXCJjc3NgXCIgKyByZXBsYWNlZCArIFwiYFwiKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG4gIH0gLy8gZmluYWxpemUgc3RyaW5nIHZhbHVlcyAocmVndWxhciBzdHJpbmdzIGFuZCBmdW5jdGlvbnMgaW50ZXJwb2xhdGVkIGludG8gY3NzIGNhbGxzKVxuXG5cbiAgaWYgKHJlZ2lzdGVyZWQgPT0gbnVsbCkge1xuICAgIHJldHVybiBpbnRlcnBvbGF0aW9uO1xuICB9XG5cbiAgdmFyIGNhY2hlZCA9IHJlZ2lzdGVyZWRbaW50ZXJwb2xhdGlvbl07XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbiAmJiBzaG91bGRXYXJuQWJvdXRJbnRlcnBvbGF0aW5nQ2xhc3NOYW1lRnJvbUNzcyAmJiBjYWNoZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0ludGVycG9sYXRpbmcgYSBjbGFzc05hbWUgZnJvbSBjc3NgYCBpcyBub3QgcmVjb21tZW5kZWQgYW5kIHdpbGwgY2F1c2UgcHJvYmxlbXMgd2l0aCBjb21wb3NpdGlvbi5cXG4nICsgJ0ludGVycG9sYXRpbmcgYSBjbGFzc05hbWUgZnJvbSBjc3NgYCB3aWxsIGJlIGNvbXBsZXRlbHkgdW5zdXBwb3J0ZWQgaW4gYSBmdXR1cmUgbWFqb3IgdmVyc2lvbiBvZiBFbW90aW9uJyk7XG4gICAgc2hvdWxkV2FybkFib3V0SW50ZXJwb2xhdGluZ0NsYXNzTmFtZUZyb21Dc3MgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBjYWNoZWQgIT09IHVuZGVmaW5lZCAmJiAhY291bGRCZVNlbGVjdG9ySW50ZXJwb2xhdGlvbiA/IGNhY2hlZCA6IGludGVycG9sYXRpb247XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0cmluZ0Zyb21PYmplY3QobWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIG9iaikge1xuICB2YXIgc3RyaW5nID0gJyc7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JqLmxlbmd0aDsgaSsrKSB7XG4gICAgICBzdHJpbmcgKz0gaGFuZGxlSW50ZXJwb2xhdGlvbihtZXJnZWRQcm9wcywgcmVnaXN0ZXJlZCwgb2JqW2ldLCBmYWxzZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZvciAodmFyIF9rZXkgaW4gb2JqKSB7XG4gICAgICB2YXIgdmFsdWUgPSBvYmpbX2tleV07XG5cbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmIChyZWdpc3RlcmVkICE9IG51bGwgJiYgcmVnaXN0ZXJlZFt2YWx1ZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHN0cmluZyArPSBfa2V5ICsgXCJ7XCIgKyByZWdpc3RlcmVkW3ZhbHVlXSArIFwifVwiO1xuICAgICAgICB9IGVsc2UgaWYgKGlzUHJvY2Vzc2FibGVWYWx1ZSh2YWx1ZSkpIHtcbiAgICAgICAgICBzdHJpbmcgKz0gcHJvY2Vzc1N0eWxlTmFtZShfa2V5KSArIFwiOlwiICsgcHJvY2Vzc1N0eWxlVmFsdWUoX2tleSwgdmFsdWUpICsgXCI7XCI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChfa2V5ID09PSAnTk9fQ09NUE9ORU5UX1NFTEVDVE9SJyAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21wb25lbnQgc2VsZWN0b3JzIGNhbiBvbmx5IGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBiYWJlbC1wbHVnaW4tZW1vdGlvbi4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB0eXBlb2YgdmFsdWVbMF0gPT09ICdzdHJpbmcnICYmIChyZWdpc3RlcmVkID09IG51bGwgfHwgcmVnaXN0ZXJlZFt2YWx1ZVswXV0gPT09IHVuZGVmaW5lZCkpIHtcbiAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgdmFsdWUubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBpZiAoaXNQcm9jZXNzYWJsZVZhbHVlKHZhbHVlW19pXSkpIHtcbiAgICAgICAgICAgICAgc3RyaW5nICs9IHByb2Nlc3NTdHlsZU5hbWUoX2tleSkgKyBcIjpcIiArIHByb2Nlc3NTdHlsZVZhbHVlKF9rZXksIHZhbHVlW19pXSkgKyBcIjtcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGludGVycG9sYXRlZCA9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHZhbHVlLCBmYWxzZSk7XG5cbiAgICAgICAgICBzd2l0Y2ggKF9rZXkpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FuaW1hdGlvbic6XG4gICAgICAgICAgICBjYXNlICdhbmltYXRpb25OYW1lJzpcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0cmluZyArPSBwcm9jZXNzU3R5bGVOYW1lKF9rZXkpICsgXCI6XCIgKyBpbnRlcnBvbGF0ZWQgKyBcIjtcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgX2tleSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoVU5ERUZJTkVEX0FTX09CSkVDVF9LRVlfRVJST1IpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHN0cmluZyArPSBfa2V5ICsgXCJ7XCIgKyBpbnRlcnBvbGF0ZWQgKyBcIn1cIjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHJpbmc7XG59XG5cbnZhciBsYWJlbFBhdHRlcm4gPSAvbGFiZWw6XFxzKihbXlxccztcXG57XSspXFxzKjsvZztcbnZhciBzb3VyY2VNYXBQYXR0ZXJuO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBzb3VyY2VNYXBQYXR0ZXJuID0gL1xcL1xcKiNcXHNzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb25cXC9qc29uO1xcUytcXHMrXFwqXFwvLztcbn0gLy8gdGhpcyBpcyB0aGUgY3Vyc29yIGZvciBrZXlmcmFtZXNcbi8vIGtleWZyYW1lcyBhcmUgc3RvcmVkIG9uIHRoZSBTZXJpYWxpemVkU3R5bGVzIG9iamVjdCBhcyBhIGxpbmtlZCBsaXN0XG5cblxudmFyIGN1cnNvcjtcbnZhciBzZXJpYWxpemVTdHlsZXMgPSBmdW5jdGlvbiBzZXJpYWxpemVTdHlsZXMoYXJncywgcmVnaXN0ZXJlZCwgbWVyZ2VkUHJvcHMpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmIHR5cGVvZiBhcmdzWzBdID09PSAnb2JqZWN0JyAmJiBhcmdzWzBdICE9PSBudWxsICYmIGFyZ3NbMF0uc3R5bGVzICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gYXJnc1swXTtcbiAgfVxuXG4gIHZhciBzdHJpbmdNb2RlID0gdHJ1ZTtcbiAgdmFyIHN0eWxlcyA9ICcnO1xuICBjdXJzb3IgPSB1bmRlZmluZWQ7XG4gIHZhciBzdHJpbmdzID0gYXJnc1swXTtcblxuICBpZiAoc3RyaW5ncyA9PSBudWxsIHx8IHN0cmluZ3MucmF3ID09PSB1bmRlZmluZWQpIHtcbiAgICBzdHJpbmdNb2RlID0gZmFsc2U7XG4gICAgc3R5bGVzICs9IGhhbmRsZUludGVycG9sYXRpb24obWVyZ2VkUHJvcHMsIHJlZ2lzdGVyZWQsIHN0cmluZ3MsIGZhbHNlKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzWzBdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoSUxMRUdBTF9FU0NBUEVfU0VRVUVOQ0VfRVJST1IpO1xuICAgIH1cblxuICAgIHN0eWxlcyArPSBzdHJpbmdzWzBdO1xuICB9IC8vIHdlIHN0YXJ0IGF0IDEgc2luY2Ugd2UndmUgYWxyZWFkeSBoYW5kbGVkIHRoZSBmaXJzdCBhcmdcblxuXG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIHN0eWxlcyArPSBoYW5kbGVJbnRlcnBvbGF0aW9uKG1lcmdlZFByb3BzLCByZWdpc3RlcmVkLCBhcmdzW2ldLCBzdHlsZXMuY2hhckNvZGVBdChzdHlsZXMubGVuZ3RoIC0gMSkgPT09IDQ2KTtcblxuICAgIGlmIChzdHJpbmdNb2RlKSB7XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBzdHJpbmdzW2ldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihJTExFR0FMX0VTQ0FQRV9TRVFVRU5DRV9FUlJPUik7XG4gICAgICB9XG5cbiAgICAgIHN0eWxlcyArPSBzdHJpbmdzW2ldO1xuICAgIH1cbiAgfVxuXG4gIHZhciBzb3VyY2VNYXA7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBzdHlsZXMgPSBzdHlsZXMucmVwbGFjZShzb3VyY2VNYXBQYXR0ZXJuLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgIHNvdXJjZU1hcCA9IG1hdGNoO1xuICAgICAgcmV0dXJuICcnO1xuICAgIH0pO1xuICB9IC8vIHVzaW5nIGEgZ2xvYmFsIHJlZ2V4IHdpdGggLmV4ZWMgaXMgc3RhdGVmdWwgc28gbGFzdEluZGV4IGhhcyB0byBiZSByZXNldCBlYWNoIHRpbWVcblxuXG4gIGxhYmVsUGF0dGVybi5sYXN0SW5kZXggPSAwO1xuICB2YXIgaWRlbnRpZmllck5hbWUgPSAnJztcbiAgdmFyIG1hdGNoOyAvLyBodHRwczovL2VzYmVuY2guY29tL2JlbmNoLzViODA5YzJjZjI5NDk4MDBhMGY2MWZiNVxuXG4gIHdoaWxlICgobWF0Y2ggPSBsYWJlbFBhdHRlcm4uZXhlYyhzdHlsZXMpKSAhPT0gbnVsbCkge1xuICAgIGlkZW50aWZpZXJOYW1lICs9ICctJyArIC8vICRGbG93Rml4TWUgd2Uga25vdyBpdCdzIG5vdCBudWxsXG4gICAgbWF0Y2hbMV07XG4gIH1cblxuICB2YXIgbmFtZSA9IGhhc2hTdHJpbmcoc3R5bGVzKSArIGlkZW50aWZpZXJOYW1lO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gJEZsb3dGaXhNZSBTZXJpYWxpemVkU3R5bGVzIHR5cGUgZG9lc24ndCBoYXZlIHRvU3RyaW5nIHByb3BlcnR5IChhbmQgd2UgZG9uJ3Qgd2FudCB0byBhZGQgaXQpXG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICAgIG1hcDogc291cmNlTWFwLFxuICAgICAgbmV4dDogY3Vyc29yLFxuICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gXCJZb3UgaGF2ZSB0cmllZCB0byBzdHJpbmdpZnkgb2JqZWN0IHJldHVybmVkIGZyb20gYGNzc2AgZnVuY3Rpb24uIEl0IGlzbid0IHN1cHBvc2VkIHRvIGJlIHVzZWQgZGlyZWN0bHkgKGUuZy4gYXMgdmFsdWUgb2YgdGhlIGBjbGFzc05hbWVgIHByb3ApLCBidXQgcmF0aGVyIGhhbmRlZCB0byBlbW90aW9uIHNvIGl0IGNhbiBoYW5kbGUgaXQgKGUuZy4gYXMgdmFsdWUgb2YgYGNzc2AgcHJvcCkuXCI7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBzdHlsZXM6IHN0eWxlcyxcbiAgICBuZXh0OiBjdXJzb3JcbiAgfTtcbn07XG5cbmV4cG9ydCB7IHNlcmlhbGl6ZVN0eWxlcyB9O1xuIiwiaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcblxuZnVuY3Rpb24gY3NzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIHNlcmlhbGl6ZVN0eWxlcyhhcmdzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3NzO1xuIiwiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCBmb3J3YXJkUmVmLCBjcmVhdGVFbGVtZW50LCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY3JlYXRlQ2FjaGUgZnJvbSAnQGVtb3Rpb24vY2FjaGUnO1xuaW1wb3J0IHsgZ2V0UmVnaXN0ZXJlZFN0eWxlcywgaW5zZXJ0U3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vdXRpbHMnO1xuaW1wb3J0IHsgc2VyaWFsaXplU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vc2VyaWFsaXplJztcbmltcG9ydCB7IFN0eWxlU2hlZXQgfSBmcm9tICdAZW1vdGlvbi9zaGVldCc7XG5pbXBvcnQgY3NzIGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGNzcyB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5cbnZhciBFbW90aW9uQ2FjaGVDb250ZXh0ID0gY3JlYXRlQ29udGV4dCggLy8gd2UncmUgZG9pbmcgdGhpcyB0byBhdm9pZCBwcmVjb25zdHJ1Y3QncyBkZWFkIGNvZGUgZWxpbWluYXRpb24gaW4gdGhpcyBvbmUgY2FzZVxuLy8gYmVjYXVzZSB0aGlzIG1vZHVsZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIHRoZSBicm93c2VyIGFuZCBub2RlXG4vLyBidXQgaXQncyBhbHNvIHJlcXVpcmVkIGluIHJlYWN0IG5hdGl2ZSBhbmQgc2ltaWxhciBlbnZpcm9ubWVudHMgc29tZXRpbWVzXG4vLyBhbmQgd2UgY291bGQgaGF2ZSBhIHNwZWNpYWwgYnVpbGQganVzdCBmb3IgdGhhdFxuLy8gYnV0IHRoaXMgaXMgbXVjaCBlYXNpZXIgYW5kIHRoZSBuYXRpdmUgcGFja2FnZXNcbi8vIG1pZ2h0IHVzZSBhIGRpZmZlcmVudCB0aGVtZSBjb250ZXh0IGluIHRoZSBmdXR1cmUgYW55d2F5XG50eXBlb2YgSFRNTEVsZW1lbnQgIT09ICd1bmRlZmluZWQnID8gY3JlYXRlQ2FjaGUoKSA6IG51bGwpO1xudmFyIFRoZW1lQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQoe30pO1xudmFyIENhY2hlUHJvdmlkZXIgPSBFbW90aW9uQ2FjaGVDb250ZXh0LlByb3ZpZGVyO1xuXG52YXIgd2l0aEVtb3Rpb25DYWNoZSA9IGZ1bmN0aW9uIHdpdGhFbW90aW9uQ2FjaGUoZnVuYykge1xuICB2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKHByb3BzLCByZWYpIHtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChFbW90aW9uQ2FjaGVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY2FjaGUpIHtcbiAgICAgIHJldHVybiBmdW5jKHByb3BzLCBjYWNoZSwgcmVmKTtcbiAgICB9KTtcbiAgfTsgLy8gJEZsb3dGaXhNZVxuXG5cbiAgcmV0dXJuIGZvcndhcmRSZWYocmVuZGVyKTtcbn07XG5cbi8vIHRodXMgd2Ugb25seSBuZWVkIHRvIHJlcGxhY2Ugd2hhdCBpcyBhIHZhbGlkIGNoYXJhY3RlciBmb3IgSlMsIGJ1dCBub3QgZm9yIENTU1xuXG52YXIgc2FuaXRpemVJZGVudGlmaWVyID0gZnVuY3Rpb24gc2FuaXRpemVJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgcmV0dXJuIGlkZW50aWZpZXIucmVwbGFjZSgvXFwkL2csICctJyk7XG59O1xuXG52YXIgdHlwZVByb3BOYW1lID0gJ19fRU1PVElPTl9UWVBFX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGxhYmVsUHJvcE5hbWUgPSAnX19FTU9USU9OX0xBQkVMX1BMRUFTRV9ET19OT1RfVVNFX18nO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcihjYWNoZSwgcHJvcHMsIHRoZW1lLCByZWYpIHtcbiAgdmFyIGNzc1Byb3AgPSB0aGVtZSA9PT0gbnVsbCA/IHByb3BzLmNzcyA6IHByb3BzLmNzcyh0aGVtZSk7IC8vIHNvIHRoYXQgdXNpbmcgYGNzc2AgZnJvbSBgZW1vdGlvbmAgYW5kIHBhc3NpbmcgdGhlIHJlc3VsdCB0byB0aGUgY3NzIHByb3Agd29ya3NcbiAgLy8gbm90IHBhc3NpbmcgdGhlIHJlZ2lzdGVyZWQgY2FjaGUgdG8gc2VyaWFsaXplU3R5bGVzIGJlY2F1c2UgaXQgd291bGRcbiAgLy8gbWFrZSBjZXJ0YWluIGJhYmVsIG9wdGltaXNhdGlvbnMgbm90IHBvc3NpYmxlXG5cbiAgaWYgKHR5cGVvZiBjc3NQcm9wID09PSAnc3RyaW5nJyAmJiBjYWNoZS5yZWdpc3RlcmVkW2Nzc1Byb3BdICE9PSB1bmRlZmluZWQpIHtcbiAgICBjc3NQcm9wID0gY2FjaGUucmVnaXN0ZXJlZFtjc3NQcm9wXTtcbiAgfVxuXG4gIHZhciB0eXBlID0gcHJvcHNbdHlwZVByb3BOYW1lXTtcbiAgdmFyIHJlZ2lzdGVyZWRTdHlsZXMgPSBbY3NzUHJvcF07XG4gIHZhciBjbGFzc05hbWUgPSAnJztcblxuICBpZiAodHlwZW9mIHByb3BzLmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBjbGFzc05hbWUgPSBnZXRSZWdpc3RlcmVkU3R5bGVzKGNhY2hlLnJlZ2lzdGVyZWQsIHJlZ2lzdGVyZWRTdHlsZXMsIHByb3BzLmNsYXNzTmFtZSk7XG4gIH0gZWxzZSBpZiAocHJvcHMuY2xhc3NOYW1lICE9IG51bGwpIHtcbiAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUgKyBcIiBcIjtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkID0gc2VyaWFsaXplU3R5bGVzKHJlZ2lzdGVyZWRTdHlsZXMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHNlcmlhbGl6ZWQubmFtZS5pbmRleE9mKCctJykgPT09IC0xKSB7XG4gICAgdmFyIGxhYmVsRnJvbVN0YWNrID0gcHJvcHNbbGFiZWxQcm9wTmFtZV07XG5cbiAgICBpZiAobGFiZWxGcm9tU3RhY2spIHtcbiAgICAgIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3NlcmlhbGl6ZWQsICdsYWJlbDonICsgbGFiZWxGcm9tU3RhY2sgKyAnOyddKTtcbiAgICB9XG4gIH1cblxuICB2YXIgcnVsZXMgPSBpbnNlcnRTdHlsZXMoY2FjaGUsIHNlcmlhbGl6ZWQsIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyk7XG4gIGNsYXNzTmFtZSArPSBjYWNoZS5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgdmFyIG5ld1Byb3BzID0ge307XG5cbiAgZm9yICh2YXIga2V5IGluIHByb3BzKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwocHJvcHMsIGtleSkgJiYga2V5ICE9PSAnY3NzJyAmJiBrZXkgIT09IHR5cGVQcm9wTmFtZSAmJiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyB8fCBrZXkgIT09IGxhYmVsUHJvcE5hbWUpKSB7XG4gICAgICBuZXdQcm9wc1trZXldID0gcHJvcHNba2V5XTtcbiAgICB9XG4gIH1cblxuICBuZXdQcm9wcy5yZWYgPSByZWY7XG4gIG5ld1Byb3BzLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTtcbiAgdmFyIGVsZSA9IGNyZWF0ZUVsZW1lbnQodHlwZSwgbmV3UHJvcHMpO1xuXG4gIHJldHVybiBlbGU7XG59O1xuXG52YXIgRW1vdGlvbiA9XG4vKiAjX19QVVJFX18gKi9cbndpdGhFbW90aW9uQ2FjaGUoZnVuY3Rpb24gKHByb3BzLCBjYWNoZSwgcmVmKSB7XG4gIC8vIHVzZSBDb250ZXh0LnJlYWQgZm9yIHRoZSB0aGVtZSB3aGVuIGl0J3Mgc3RhYmxlXG4gIGlmICh0eXBlb2YgcHJvcHMuY3NzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoVGhlbWVDb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAodGhlbWUpIHtcbiAgICAgIHJldHVybiByZW5kZXIoY2FjaGUsIHByb3BzLCB0aGVtZSwgcmVmKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiByZW5kZXIoY2FjaGUsIHByb3BzLCBudWxsLCByZWYpO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIEVtb3Rpb24uZGlzcGxheU5hbWUgPSAnRW1vdGlvbkNzc1Byb3BJbnRlcm5hbCc7XG59IC8vICRGbG93Rml4TWVcblxuXG52YXIganN4ID0gZnVuY3Rpb24ganN4KHR5cGUsIHByb3BzKSB7XG4gIHZhciBhcmdzID0gYXJndW1lbnRzO1xuXG4gIGlmIChwcm9wcyA9PSBudWxsIHx8ICFoYXNPd25Qcm9wZXJ0eS5jYWxsKHByb3BzLCAnY3NzJykpIHtcbiAgICAvLyAkRmxvd0ZpeE1lXG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTtcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGVvZiBwcm9wcy5jc3MgPT09ICdzdHJpbmcnICYmIC8vIGNoZWNrIGlmIHRoZXJlIGlzIGEgY3NzIGRlY2xhcmF0aW9uXG4gIHByb3BzLmNzcy5pbmRleE9mKCc6JykgIT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiU3RyaW5ncyBhcmUgbm90IGFsbG93ZWQgYXMgY3NzIHByb3AgdmFsdWVzLCBwbGVhc2Ugd3JhcCBpdCBpbiBhIGNzcyB0ZW1wbGF0ZSBsaXRlcmFsIGZyb20gJ0BlbW90aW9uL2NzcycgbGlrZSB0aGlzOiBjc3NgXCIgKyBwcm9wcy5jc3MgKyBcImBcIik7XG4gIH1cblxuICB2YXIgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgY3JlYXRlRWxlbWVudEFyZ0FycmF5ID0gbmV3IEFycmF5KGFyZ3NMZW5ndGgpO1xuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMF0gPSBFbW90aW9uO1xuICB2YXIgbmV3UHJvcHMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gcHJvcHMpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChwcm9wcywga2V5KSkge1xuICAgICAgbmV3UHJvcHNba2V5XSA9IHByb3BzW2tleV07XG4gICAgfVxuICB9XG5cbiAgbmV3UHJvcHNbdHlwZVByb3BOYW1lXSA9IHR5cGU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IoKTtcblxuICAgIGlmIChlcnJvci5zdGFjaykge1xuICAgICAgLy8gY2hyb21lXG4gICAgICB2YXIgbWF0Y2ggPSBlcnJvci5zdGFjay5tYXRjaCgvYXQgKD86T2JqZWN0XFwufClqc3guKlxcblxccythdCAoW0EtWl1bQS1aYS16JF0rKSAvKTtcblxuICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICAvLyBzYWZhcmkgYW5kIGZpcmVmb3hcbiAgICAgICAgbWF0Y2ggPSBlcnJvci5zdGFjay5tYXRjaCgvLipcXG4oW0EtWl1bQS1aYS16JF0rKUAvKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIG5ld1Byb3BzW2xhYmVsUHJvcE5hbWVdID0gc2FuaXRpemVJZGVudGlmaWVyKG1hdGNoWzFdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjcmVhdGVFbGVtZW50QXJnQXJyYXlbMV0gPSBuZXdQcm9wcztcblxuICBmb3IgKHZhciBpID0gMjsgaSA8IGFyZ3NMZW5ndGg7IGkrKykge1xuICAgIGNyZWF0ZUVsZW1lbnRBcmdBcnJheVtpXSA9IGFyZ3NbaV07XG4gIH0gLy8gJEZsb3dGaXhNZVxuXG5cbiAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQuYXBwbHkobnVsbCwgY3JlYXRlRWxlbWVudEFyZ0FycmF5KTtcbn07XG5cbnZhciB3YXJuZWRBYm91dENzc1Byb3BGb3JHbG9iYWwgPSBmYWxzZTtcbnZhciBHbG9iYWwgPVxuLyogI19fUFVSRV9fICovXG53aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY2FjaGUpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXdhcm5lZEFib3V0Q3NzUHJvcEZvckdsb2JhbCAmJiAoIC8vIGNoZWNrIGZvciBjbGFzc05hbWUgYXMgd2VsbCBzaW5jZSB0aGUgdXNlciBpc1xuICAvLyBwcm9iYWJseSB1c2luZyB0aGUgY3VzdG9tIGNyZWF0ZUVsZW1lbnQgd2hpY2hcbiAgLy8gbWVhbnMgaXQgd2lsbCBiZSB0dXJuZWQgaW50byBhIGNsYXNzTmFtZSBwcm9wXG4gIC8vICRGbG93Rml4TWUgSSBkb24ndCByZWFsbHkgd2FudCB0byBhZGQgaXQgdG8gdGhlIHR5cGUgc2luY2UgaXQgc2hvdWxkbid0IGJlIHVzZWRcbiAgcHJvcHMuY2xhc3NOYW1lIHx8IHByb3BzLmNzcykpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiSXQgbG9va3MgbGlrZSB5b3UncmUgdXNpbmcgdGhlIGNzcyBwcm9wIG9uIEdsb2JhbCwgZGlkIHlvdSBtZWFuIHRvIHVzZSB0aGUgc3R5bGVzIHByb3AgaW5zdGVhZD9cIik7XG4gICAgd2FybmVkQWJvdXRDc3NQcm9wRm9yR2xvYmFsID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBzdHlsZXMgPSBwcm9wcy5zdHlsZXM7XG5cbiAgaWYgKHR5cGVvZiBzdHlsZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChUaGVtZUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoW3N0eWxlcyh0aGVtZSldKTtcbiAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KElubmVyR2xvYmFsLCB7XG4gICAgICAgIHNlcmlhbGl6ZWQ6IHNlcmlhbGl6ZWQsXG4gICAgICAgIGNhY2hlOiBjYWNoZVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZCA9IHNlcmlhbGl6ZVN0eWxlcyhbc3R5bGVzXSk7XG4gIHJldHVybiBjcmVhdGVFbGVtZW50KElubmVyR2xvYmFsLCB7XG4gICAgc2VyaWFsaXplZDogc2VyaWFsaXplZCxcbiAgICBjYWNoZTogY2FjaGVcbiAgfSk7XG59KTtcblxuLy8gbWFpbnRhaW4gcGxhY2Ugb3ZlciByZXJlbmRlcnMuXG4vLyBpbml0aWFsIHJlbmRlciBmcm9tIGJyb3dzZXIsIGluc2VydEJlZm9yZSBjb250ZXh0LnNoZWV0LnRhZ3NbMF0gb3IgaWYgYSBzdHlsZSBoYXNuJ3QgYmVlbiBpbnNlcnRlZCB0aGVyZSB5ZXQsIGFwcGVuZENoaWxkXG4vLyBpbml0aWFsIGNsaWVudC1zaWRlIHJlbmRlciBmcm9tIFNTUiwgdXNlIHBsYWNlIG9mIGh5ZHJhdGluZyB0YWdcbnZhciBJbm5lckdsb2JhbCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShJbm5lckdsb2JhbCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSW5uZXJHbG9iYWwocHJvcHMsIGNvbnRleHQsIHVwZGF0ZXIpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzLCBjb250ZXh0LCB1cGRhdGVyKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IElubmVyR2xvYmFsLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnNoZWV0ID0gbmV3IFN0eWxlU2hlZXQoe1xuICAgICAga2V5OiB0aGlzLnByb3BzLmNhY2hlLmtleSArIFwiLWdsb2JhbFwiLFxuICAgICAgbm9uY2U6IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQubm9uY2UsXG4gICAgICBjb250YWluZXI6IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQuY29udGFpbmVyXG4gICAgfSk7IC8vICRGbG93Rml4TWVcblxuICAgIHZhciBub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInN0eWxlW2RhdGEtZW1vdGlvbi1cIiArIHRoaXMucHJvcHMuY2FjaGUua2V5ICsgXCI9XFxcIlwiICsgdGhpcy5wcm9wcy5zZXJpYWxpemVkLm5hbWUgKyBcIlxcXCJdXCIpO1xuXG4gICAgaWYgKG5vZGUgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuc2hlZXQudGFncy5wdXNoKG5vZGUpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnByb3BzLmNhY2hlLnNoZWV0LnRhZ3MubGVuZ3RoKSB7XG4gICAgICB0aGlzLnNoZWV0LmJlZm9yZSA9IHRoaXMucHJvcHMuY2FjaGUuc2hlZXQudGFnc1swXTtcbiAgICB9XG5cbiAgICB0aGlzLmluc2VydFN0eWxlcygpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgaWYgKHByZXZQcm9wcy5zZXJpYWxpemVkLm5hbWUgIT09IHRoaXMucHJvcHMuc2VyaWFsaXplZC5uYW1lKSB7XG4gICAgICB0aGlzLmluc2VydFN0eWxlcygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaW5zZXJ0U3R5bGVzID0gZnVuY3Rpb24gaW5zZXJ0U3R5bGVzJDEoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMuc2VyaWFsaXplZC5uZXh0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIGluc2VydCBrZXlmcmFtZXNcbiAgICAgIGluc2VydFN0eWxlcyh0aGlzLnByb3BzLmNhY2hlLCB0aGlzLnByb3BzLnNlcmlhbGl6ZWQubmV4dCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2hlZXQudGFncy5sZW5ndGgpIHtcbiAgICAgIC8vIGlmIHRoaXMgZG9lc24ndCBleGlzdCB0aGVuIGl0IHdpbGwgYmUgbnVsbCBzbyB0aGUgc3R5bGUgZWxlbWVudCB3aWxsIGJlIGFwcGVuZGVkXG4gICAgICB2YXIgZWxlbWVudCA9IHRoaXMuc2hlZXQudGFnc1t0aGlzLnNoZWV0LnRhZ3MubGVuZ3RoIC0gMV0ubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgdGhpcy5zaGVldC5iZWZvcmUgPSBlbGVtZW50O1xuICAgICAgdGhpcy5zaGVldC5mbHVzaCgpO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMuY2FjaGUuaW5zZXJ0KFwiXCIsIHRoaXMucHJvcHMuc2VyaWFsaXplZCwgdGhpcy5zaGVldCwgZmFsc2UpO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc2hlZXQuZmx1c2goKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIElubmVyR2xvYmFsO1xufShDb21wb25lbnQpO1xuXG52YXIga2V5ZnJhbWVzID0gZnVuY3Rpb24ga2V5ZnJhbWVzKCkge1xuICB2YXIgaW5zZXJ0YWJsZSA9IGNzcy5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gIHZhciBuYW1lID0gXCJhbmltYXRpb24tXCIgKyBpbnNlcnRhYmxlLm5hbWU7IC8vICRGbG93Rml4TWVcblxuICByZXR1cm4ge1xuICAgIG5hbWU6IG5hbWUsXG4gICAgc3R5bGVzOiBcIkBrZXlmcmFtZXMgXCIgKyBuYW1lICsgXCJ7XCIgKyBpbnNlcnRhYmxlLnN0eWxlcyArIFwifVwiLFxuICAgIGFuaW06IDEsXG4gICAgdG9TdHJpbmc6IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIFwiX0VNT19cIiArIHRoaXMubmFtZSArIFwiX1wiICsgdGhpcy5zdHlsZXMgKyBcIl9FTU9fXCI7XG4gICAgfVxuICB9O1xufTtcblxudmFyIGNsYXNzbmFtZXMgPSBmdW5jdGlvbiBjbGFzc25hbWVzKGFyZ3MpIHtcbiAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBjbHMgPSAnJztcblxuICBmb3IgKDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGFyZyA9IGFyZ3NbaV07XG4gICAgaWYgKGFyZyA9PSBudWxsKSBjb250aW51ZTtcbiAgICB2YXIgdG9BZGQgPSB2b2lkIDA7XG5cbiAgICBzd2l0Y2ggKHR5cGVvZiBhcmcpIHtcbiAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgICAge1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcbiAgICAgICAgICAgIHRvQWRkID0gY2xhc3NuYW1lcyhhcmcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0b0FkZCA9ICcnO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIGFyZykge1xuICAgICAgICAgICAgICBpZiAoYXJnW2tdICYmIGspIHtcbiAgICAgICAgICAgICAgICB0b0FkZCAmJiAodG9BZGQgKz0gJyAnKTtcbiAgICAgICAgICAgICAgICB0b0FkZCArPSBrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAge1xuICAgICAgICAgIHRvQWRkID0gYXJnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRvQWRkKSB7XG4gICAgICBjbHMgJiYgKGNscyArPSAnICcpO1xuICAgICAgY2xzICs9IHRvQWRkO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjbHM7XG59O1xuXG5mdW5jdGlvbiBtZXJnZShyZWdpc3RlcmVkLCBjc3MsIGNsYXNzTmFtZSkge1xuICB2YXIgcmVnaXN0ZXJlZFN0eWxlcyA9IFtdO1xuICB2YXIgcmF3Q2xhc3NOYW1lID0gZ2V0UmVnaXN0ZXJlZFN0eWxlcyhyZWdpc3RlcmVkLCByZWdpc3RlcmVkU3R5bGVzLCBjbGFzc05hbWUpO1xuXG4gIGlmIChyZWdpc3RlcmVkU3R5bGVzLmxlbmd0aCA8IDIpIHtcbiAgICByZXR1cm4gY2xhc3NOYW1lO1xuICB9XG5cbiAgcmV0dXJuIHJhd0NsYXNzTmFtZSArIGNzcyhyZWdpc3RlcmVkU3R5bGVzKTtcbn1cblxudmFyIENsYXNzTmFtZXMgPSB3aXRoRW1vdGlvbkNhY2hlKGZ1bmN0aW9uIChwcm9wcywgY29udGV4dCkge1xuICByZXR1cm4gY3JlYXRlRWxlbWVudChUaGVtZUNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uICh0aGVtZSkge1xuICAgIHZhciBoYXNSZW5kZXJlZCA9IGZhbHNlO1xuXG4gICAgdmFyIGNzcyA9IGZ1bmN0aW9uIGNzcygpIHtcbiAgICAgIGlmIChoYXNSZW5kZXJlZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY3NzIGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgdmFyIHNlcmlhbGl6ZWQgPSBzZXJpYWxpemVTdHlsZXMoYXJncywgY29udGV4dC5yZWdpc3RlcmVkKTtcblxuICAgICAge1xuICAgICAgICBpbnNlcnRTdHlsZXMoY29udGV4dCwgc2VyaWFsaXplZCwgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGV4dC5rZXkgKyBcIi1cIiArIHNlcmlhbGl6ZWQubmFtZTtcbiAgICB9O1xuXG4gICAgdmFyIGN4ID0gZnVuY3Rpb24gY3goKSB7XG4gICAgICBpZiAoaGFzUmVuZGVyZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2N4IGNhbiBvbmx5IGJlIHVzZWQgZHVyaW5nIHJlbmRlcicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbWVyZ2UoY29udGV4dC5yZWdpc3RlcmVkLCBjc3MsIGNsYXNzbmFtZXMoYXJncykpO1xuICAgIH07XG5cbiAgICB2YXIgY29udGVudCA9IHtcbiAgICAgIGNzczogY3NzLFxuICAgICAgY3g6IGN4LFxuICAgICAgdGhlbWU6IHRoZW1lXG4gICAgfTtcbiAgICB2YXIgZWxlID0gcHJvcHMuY2hpbGRyZW4oY29udGVudCk7XG4gICAgaGFzUmVuZGVyZWQgPSB0cnVlO1xuXG4gICAgcmV0dXJuIGVsZTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IHsgQ2FjaGVQcm92aWRlciwgQ2xhc3NOYW1lcywgR2xvYmFsLCBUaGVtZUNvbnRleHQsIGpzeCwga2V5ZnJhbWVzLCB3aXRoRW1vdGlvbkNhY2hlIH07XG4iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE5PIE9QXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbnZhciBub29wID0gZnVuY3Rpb24gbm9vcCgpIHt9O1xuLy8gQ2xhc3MgTmFtZSBQcmVmaXhlclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8qKlxuIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBjb21wb25lbnQgc3RhdGUgZm9yIHN0eWxpbmcgd2l0aCBjbGFzcyBuYW1lcy5cblxuIEV4cGVjdHMgYW4gYXJyYXkgb2Ygc3RyaW5ncyBPUiBhIHN0cmluZy9vYmplY3QgcGFpcjpcbiAtIGNsYXNzTmFtZShbJ2NvbXAnLCAnY29tcC1hcmcnLCAnY29tcC1hcmctMiddKVxuICAgQHJldHVybnMgJ3JlYWN0LXNlbGVjdF9fY29tcCByZWFjdC1zZWxlY3RfX2NvbXAtYXJnIHJlYWN0LXNlbGVjdF9fY29tcC1hcmctMidcbiAtIGNsYXNzTmFtZSgnY29tcCcsIHsgc29tZTogdHJ1ZSwgc3RhdGU6IGZhbHNlIH0pXG4gICBAcmV0dXJucyAncmVhY3Qtc2VsZWN0X19jb21wIHJlYWN0LXNlbGVjdF9fY29tcC0tc29tZSdcbiovXG5cbmZ1bmN0aW9uIGFwcGx5UHJlZml4VG9OYW1lKHByZWZpeCwgbmFtZSkge1xuICBpZiAoIW5hbWUpIHtcbiAgICByZXR1cm4gcHJlZml4O1xuICB9IGVsc2UgaWYgKG5hbWVbMF0gPT09ICctJykge1xuICAgIHJldHVybiBwcmVmaXggKyBuYW1lO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwcmVmaXggKyAnX18nICsgbmFtZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGFzc05hbWVzKHByZWZpeCwgc3RhdGUsIGNsYXNzTmFtZSkge1xuICB2YXIgYXJyID0gW2NsYXNzTmFtZV07XG5cbiAgaWYgKHN0YXRlICYmIHByZWZpeCkge1xuICAgIGZvciAodmFyIGtleSBpbiBzdGF0ZSkge1xuICAgICAgaWYgKHN0YXRlLmhhc093blByb3BlcnR5KGtleSkgJiYgc3RhdGVba2V5XSkge1xuICAgICAgICBhcnIucHVzaChcIlwiICsgYXBwbHlQcmVmaXhUb05hbWUocHJlZml4LCBrZXkpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXJyLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgIHJldHVybiBpO1xuICB9KS5tYXAoZnVuY3Rpb24gKGkpIHtcbiAgICByZXR1cm4gU3RyaW5nKGkpLnRyaW0oKTtcbiAgfSkuam9pbignICcpO1xufSAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENsZWFuIFZhbHVlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIGNsZWFuVmFsdWUgPSBmdW5jdGlvbiBjbGVhblZhbHVlKHZhbHVlKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuIHZhbHVlLmZpbHRlcihCb29sZWFuKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGwpIHJldHVybiBbdmFsdWVdO1xuICByZXR1cm4gW107XG59OyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIEhhbmRsZSBJbnB1dCBDaGFuZ2Vcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBoYW5kbGVJbnB1dENoYW5nZShpbnB1dFZhbHVlLCBhY3Rpb25NZXRhLCBvbklucHV0Q2hhbmdlKSB7XG4gIGlmIChvbklucHV0Q2hhbmdlKSB7XG4gICAgdmFyIG5ld1ZhbHVlID0gb25JbnB1dENoYW5nZShpbnB1dFZhbHVlLCBhY3Rpb25NZXRhKTtcbiAgICBpZiAodHlwZW9mIG5ld1ZhbHVlID09PSAnc3RyaW5nJykgcmV0dXJuIG5ld1ZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIGlucHV0VmFsdWU7XG59IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU2Nyb2xsIEhlbHBlcnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBpc0RvY3VtZW50RWxlbWVudChlbCkge1xuICByZXR1cm4gW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZG9jdW1lbnQuYm9keSwgd2luZG93XS5pbmRleE9mKGVsKSA+IC0xO1xufSAvLyBOb3JtYWxpemVkIFNjcm9sbCBUb3Bcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5mdW5jdGlvbiBnZXRTY3JvbGxUb3AoZWwpIHtcbiAgaWYgKGlzRG9jdW1lbnRFbGVtZW50KGVsKSkge1xuICAgIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQ7XG4gIH1cblxuICByZXR1cm4gZWwuc2Nyb2xsVG9wO1xufVxuZnVuY3Rpb24gc2Nyb2xsVG8oZWwsIHRvcCkge1xuICAvLyB3aXRoIGEgc2Nyb2xsIGRpc3RhbmNlLCB3ZSBwZXJmb3JtIHNjcm9sbCBvbiB0aGUgZWxlbWVudFxuICBpZiAoaXNEb2N1bWVudEVsZW1lbnQoZWwpKSB7XG4gICAgd2luZG93LnNjcm9sbFRvKDAsIHRvcCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZWwuc2Nyb2xsVG9wID0gdG9wO1xufSAvLyBHZXQgU2Nyb2xsIFBhcmVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGdldFNjcm9sbFBhcmVudChlbGVtZW50KSB7XG4gIHZhciBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG4gIHZhciBleGNsdWRlU3RhdGljUGFyZW50ID0gc3R5bGUucG9zaXRpb24gPT09ICdhYnNvbHV0ZSc7XG4gIHZhciBvdmVyZmxvd1J4ID0gLyhhdXRvfHNjcm9sbCkvO1xuICB2YXIgZG9jRWwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7IC8vIHN1Y2sgaXQsIGZsb3cuLi5cblxuICBpZiAoc3R5bGUucG9zaXRpb24gPT09ICdmaXhlZCcpIHJldHVybiBkb2NFbDtcblxuICBmb3IgKHZhciBwYXJlbnQgPSBlbGVtZW50OyBwYXJlbnQgPSBwYXJlbnQucGFyZW50RWxlbWVudDspIHtcbiAgICBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUocGFyZW50KTtcblxuICAgIGlmIChleGNsdWRlU3RhdGljUGFyZW50ICYmIHN0eWxlLnBvc2l0aW9uID09PSAnc3RhdGljJykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKG92ZXJmbG93UngudGVzdChzdHlsZS5vdmVyZmxvdyArIHN0eWxlLm92ZXJmbG93WSArIHN0eWxlLm92ZXJmbG93WCkpIHtcbiAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRvY0VsO1xufSAvLyBBbmltYXRlZCBTY3JvbGwgVG9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKipcbiAgQHBhcmFtIHQ6IHRpbWUgKGVsYXBzZWQpXG4gIEBwYXJhbSBiOiBpbml0aWFsIHZhbHVlXG4gIEBwYXJhbSBjOiBhbW91bnQgb2YgY2hhbmdlXG4gIEBwYXJhbSBkOiBkdXJhdGlvblxuKi9cblxuZnVuY3Rpb24gZWFzZU91dEN1YmljKHQsIGIsIGMsIGQpIHtcbiAgcmV0dXJuIGMgKiAoKHQgPSB0IC8gZCAtIDEpICogdCAqIHQgKyAxKSArIGI7XG59XG5cbmZ1bmN0aW9uIGFuaW1hdGVkU2Nyb2xsVG8oZWxlbWVudCwgdG8sIGR1cmF0aW9uLCBjYWxsYmFjaykge1xuICBpZiAoZHVyYXRpb24gPT09IHZvaWQgMCkge1xuICAgIGR1cmF0aW9uID0gMjAwO1xuICB9XG5cbiAgaWYgKGNhbGxiYWNrID09PSB2b2lkIDApIHtcbiAgICBjYWxsYmFjayA9IG5vb3A7XG4gIH1cblxuICB2YXIgc3RhcnQgPSBnZXRTY3JvbGxUb3AoZWxlbWVudCk7XG4gIHZhciBjaGFuZ2UgPSB0byAtIHN0YXJ0O1xuICB2YXIgaW5jcmVtZW50ID0gMTA7XG4gIHZhciBjdXJyZW50VGltZSA9IDA7XG5cbiAgZnVuY3Rpb24gYW5pbWF0ZVNjcm9sbCgpIHtcbiAgICBjdXJyZW50VGltZSArPSBpbmNyZW1lbnQ7XG4gICAgdmFyIHZhbCA9IGVhc2VPdXRDdWJpYyhjdXJyZW50VGltZSwgc3RhcnQsIGNoYW5nZSwgZHVyYXRpb24pO1xuICAgIHNjcm9sbFRvKGVsZW1lbnQsIHZhbCk7XG5cbiAgICBpZiAoY3VycmVudFRpbWUgPCBkdXJhdGlvbikge1xuICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlU2Nyb2xsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2soZWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgYW5pbWF0ZVNjcm9sbCgpO1xufSAvLyBTY3JvbGwgSW50byBWaWV3XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZnVuY3Rpb24gc2Nyb2xsSW50b1ZpZXcobWVudUVsLCBmb2N1c2VkRWwpIHtcbiAgdmFyIG1lbnVSZWN0ID0gbWVudUVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICB2YXIgZm9jdXNlZFJlY3QgPSBmb2N1c2VkRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHZhciBvdmVyU2Nyb2xsID0gZm9jdXNlZEVsLm9mZnNldEhlaWdodCAvIDM7XG5cbiAgaWYgKGZvY3VzZWRSZWN0LmJvdHRvbSArIG92ZXJTY3JvbGwgPiBtZW51UmVjdC5ib3R0b20pIHtcbiAgICBzY3JvbGxUbyhtZW51RWwsIE1hdGgubWluKGZvY3VzZWRFbC5vZmZzZXRUb3AgKyBmb2N1c2VkRWwuY2xpZW50SGVpZ2h0IC0gbWVudUVsLm9mZnNldEhlaWdodCArIG92ZXJTY3JvbGwsIG1lbnVFbC5zY3JvbGxIZWlnaHQpKTtcbiAgfSBlbHNlIGlmIChmb2N1c2VkUmVjdC50b3AgLSBvdmVyU2Nyb2xsIDwgbWVudVJlY3QudG9wKSB7XG4gICAgc2Nyb2xsVG8obWVudUVsLCBNYXRoLm1heChmb2N1c2VkRWwub2Zmc2V0VG9wIC0gb3ZlclNjcm9sbCwgMCkpO1xuICB9XG59IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gR2V0IGJvdW5kaW5nIGNsaWVudCBvYmplY3Rcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gY2Fubm90IGdldCBrZXlzIHVzaW5nIGFycmF5IG5vdGF0aW9uIHdpdGggRE9NUmVjdFxuXG5mdW5jdGlvbiBnZXRCb3VuZGluZ0NsaWVudE9iaihlbGVtZW50KSB7XG4gIHZhciByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgcmV0dXJuIHtcbiAgICBib3R0b206IHJlY3QuYm90dG9tLFxuICAgIGhlaWdodDogcmVjdC5oZWlnaHQsXG4gICAgbGVmdDogcmVjdC5sZWZ0LFxuICAgIHJpZ2h0OiByZWN0LnJpZ2h0LFxuICAgIHRvcDogcmVjdC50b3AsXG4gICAgd2lkdGg6IHJlY3Qud2lkdGhcbiAgfTtcbn1cbi8vIFRvdWNoIENhcGFiaWxpdHkgRGV0ZWN0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG5mdW5jdGlvbiBpc1RvdWNoQ2FwYWJsZSgpIHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudC5jcmVhdGVFdmVudCgnVG91Y2hFdmVudCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTW9iaWxlIERldmljZSBEZXRlY3RvclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbmZ1bmN0aW9uIGlzTW9iaWxlRGV2aWNlKCkge1xuICB0cnkge1xuICAgIHJldHVybiAvQW5kcm9pZHx3ZWJPU3xpUGhvbmV8aVBhZHxpUG9kfEJsYWNrQmVycnl8SUVNb2JpbGV8T3BlcmEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IHsgZ2V0U2Nyb2xsUGFyZW50IGFzIGEsIGdldFNjcm9sbFRvcCBhcyBiLCBhbmltYXRlZFNjcm9sbFRvIGFzIGMsIGlzTW9iaWxlRGV2aWNlIGFzIGQsIGNsZWFuVmFsdWUgYXMgZSwgc2Nyb2xsSW50b1ZpZXcgYXMgZiwgZ2V0Qm91bmRpbmdDbGllbnRPYmogYXMgZywgY2xhc3NOYW1lcyBhcyBoLCBpc1RvdWNoQ2FwYWJsZSBhcyBpLCBpc0RvY3VtZW50RWxlbWVudCBhcyBqLCBoYW5kbGVJbnB1dENoYW5nZSBhcyBrLCBub29wIGFzIG4sIHNjcm9sbFRvIGFzIHMgfTtcbiIsImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGpzeCwga2V5ZnJhbWVzLCBDbGFzc05hbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgeyBjcmVhdGVQb3J0YWwgfSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGcgYXMgZ2V0Qm91bmRpbmdDbGllbnRPYmosIGEgYXMgZ2V0U2Nyb2xsUGFyZW50LCBiIGFzIGdldFNjcm9sbFRvcCwgYyBhcyBhbmltYXRlZFNjcm9sbFRvLCBzIGFzIHNjcm9sbFRvIH0gZnJvbSAnLi91dGlscy0wNmIwZDVhNC5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgX2NzcyBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IEF1dG9zaXplSW5wdXQgZnJvbSAncmVhY3QtaW5wdXQtYXV0b3NpemUnO1xuXG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZShzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKTsgc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gc3ViQ2xhc3M7IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cbmZ1bmN0aW9uIGdldE1lbnVQbGFjZW1lbnQoX3JlZikge1xuICB2YXIgbWF4SGVpZ2h0ID0gX3JlZi5tYXhIZWlnaHQsXG4gICAgICBtZW51RWwgPSBfcmVmLm1lbnVFbCxcbiAgICAgIG1pbkhlaWdodCA9IF9yZWYubWluSGVpZ2h0LFxuICAgICAgcGxhY2VtZW50ID0gX3JlZi5wbGFjZW1lbnQsXG4gICAgICBzaG91bGRTY3JvbGwgPSBfcmVmLnNob3VsZFNjcm9sbCxcbiAgICAgIGlzRml4ZWRQb3NpdGlvbiA9IF9yZWYuaXNGaXhlZFBvc2l0aW9uLFxuICAgICAgdGhlbWUgPSBfcmVmLnRoZW1lO1xuICB2YXIgc3BhY2luZyA9IHRoZW1lLnNwYWNpbmc7XG4gIHZhciBzY3JvbGxQYXJlbnQgPSBnZXRTY3JvbGxQYXJlbnQobWVudUVsKTtcbiAgdmFyIGRlZmF1bHRTdGF0ZSA9IHtcbiAgICBwbGFjZW1lbnQ6ICdib3R0b20nLFxuICAgIG1heEhlaWdodDogbWF4SGVpZ2h0XG4gIH07IC8vIHNvbWV0aGluZyB3ZW50IHdyb25nLCByZXR1cm4gZGVmYXVsdCBzdGF0ZVxuXG4gIGlmICghbWVudUVsIHx8ICFtZW51RWwub2Zmc2V0UGFyZW50KSByZXR1cm4gZGVmYXVsdFN0YXRlOyAvLyB3ZSBjYW4ndCB0cnVzdCBgc2Nyb2xsUGFyZW50LnNjcm9sbEhlaWdodGAgLS0+IGl0IG1heSBpbmNyZWFzZSB3aGVuXG4gIC8vIHRoZSBtZW51IGlzIHJlbmRlcmVkXG5cbiAgdmFyIF9zY3JvbGxQYXJlbnQkZ2V0Qm91biA9IHNjcm9sbFBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgIHNjcm9sbEhlaWdodCA9IF9zY3JvbGxQYXJlbnQkZ2V0Qm91bi5oZWlnaHQ7XG5cbiAgdmFyIF9tZW51RWwkZ2V0Qm91bmRpbmdDbCA9IG1lbnVFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgIG1lbnVCb3R0b20gPSBfbWVudUVsJGdldEJvdW5kaW5nQ2wuYm90dG9tLFxuICAgICAgbWVudUhlaWdodCA9IF9tZW51RWwkZ2V0Qm91bmRpbmdDbC5oZWlnaHQsXG4gICAgICBtZW51VG9wID0gX21lbnVFbCRnZXRCb3VuZGluZ0NsLnRvcDtcblxuICB2YXIgX21lbnVFbCRvZmZzZXRQYXJlbnQkID0gbWVudUVsLm9mZnNldFBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbiAgICAgIGNvbnRhaW5lclRvcCA9IF9tZW51RWwkb2Zmc2V0UGFyZW50JC50b3A7XG5cbiAgdmFyIHZpZXdIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gIHZhciBzY3JvbGxUb3AgPSBnZXRTY3JvbGxUb3Aoc2Nyb2xsUGFyZW50KTtcbiAgdmFyIG1hcmdpbkJvdHRvbSA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUobWVudUVsKS5tYXJnaW5Cb3R0b20sIDEwKTtcbiAgdmFyIG1hcmdpblRvcCA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUobWVudUVsKS5tYXJnaW5Ub3AsIDEwKTtcbiAgdmFyIHZpZXdTcGFjZUFib3ZlID0gY29udGFpbmVyVG9wIC0gbWFyZ2luVG9wO1xuICB2YXIgdmlld1NwYWNlQmVsb3cgPSB2aWV3SGVpZ2h0IC0gbWVudVRvcDtcbiAgdmFyIHNjcm9sbFNwYWNlQWJvdmUgPSB2aWV3U3BhY2VBYm92ZSArIHNjcm9sbFRvcDtcbiAgdmFyIHNjcm9sbFNwYWNlQmVsb3cgPSBzY3JvbGxIZWlnaHQgLSBzY3JvbGxUb3AgLSBtZW51VG9wO1xuICB2YXIgc2Nyb2xsRG93biA9IG1lbnVCb3R0b20gLSB2aWV3SGVpZ2h0ICsgc2Nyb2xsVG9wICsgbWFyZ2luQm90dG9tO1xuICB2YXIgc2Nyb2xsVXAgPSBzY3JvbGxUb3AgKyBtZW51VG9wIC0gbWFyZ2luVG9wO1xuICB2YXIgc2Nyb2xsRHVyYXRpb24gPSAxNjA7XG5cbiAgc3dpdGNoIChwbGFjZW1lbnQpIHtcbiAgICBjYXNlICdhdXRvJzpcbiAgICBjYXNlICdib3R0b20nOlxuICAgICAgLy8gMTogdGhlIG1lbnUgd2lsbCBmaXQsIGRvIG5vdGhpbmdcbiAgICAgIGlmICh2aWV3U3BhY2VCZWxvdyA+PSBtZW51SGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgICAgICAgICBtYXhIZWlnaHQ6IG1heEhlaWdodFxuICAgICAgICB9O1xuICAgICAgfSAvLyAyOiB0aGUgbWVudSB3aWxsIGZpdCwgaWYgc2Nyb2xsZWRcblxuXG4gICAgICBpZiAoc2Nyb2xsU3BhY2VCZWxvdyA+PSBtZW51SGVpZ2h0ICYmICFpc0ZpeGVkUG9zaXRpb24pIHtcbiAgICAgICAgaWYgKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIGFuaW1hdGVkU2Nyb2xsVG8oc2Nyb2xsUGFyZW50LCBzY3JvbGxEb3duLCBzY3JvbGxEdXJhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH0gLy8gMzogdGhlIG1lbnUgd2lsbCBmaXQsIGlmIGNvbnN0cmFpbmVkXG5cblxuICAgICAgaWYgKCFpc0ZpeGVkUG9zaXRpb24gJiYgc2Nyb2xsU3BhY2VCZWxvdyA+PSBtaW5IZWlnaHQgfHwgaXNGaXhlZFBvc2l0aW9uICYmIHZpZXdTcGFjZUJlbG93ID49IG1pbkhlaWdodCkge1xuICAgICAgICBpZiAoc2hvdWxkU2Nyb2xsKSB7XG4gICAgICAgICAgYW5pbWF0ZWRTY3JvbGxUbyhzY3JvbGxQYXJlbnQsIHNjcm9sbERvd24sIHNjcm9sbER1cmF0aW9uKTtcbiAgICAgICAgfSAvLyB3ZSB3YW50IHRvIHByb3ZpZGUgYXMgbXVjaCBvZiB0aGUgbWVudSBhcyBwb3NzaWJsZSB0byB0aGUgdXNlcixcbiAgICAgICAgLy8gc28gZ2l2ZSB0aGVtIHdoYXRldmVyIGlzIGF2YWlsYWJsZSBiZWxvdyByYXRoZXIgdGhhbiB0aGUgbWluSGVpZ2h0LlxuXG5cbiAgICAgICAgdmFyIGNvbnN0cmFpbmVkSGVpZ2h0ID0gaXNGaXhlZFBvc2l0aW9uID8gdmlld1NwYWNlQmVsb3cgLSBtYXJnaW5Cb3R0b20gOiBzY3JvbGxTcGFjZUJlbG93IC0gbWFyZ2luQm90dG9tO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBjb25zdHJhaW5lZEhlaWdodFxuICAgICAgICB9O1xuICAgICAgfSAvLyA0LiBGb3JrZWQgYmV2aW91ciB3aGVuIHRoZXJlIGlzbid0IGVub3VnaCBzcGFjZSBiZWxvd1xuICAgICAgLy8gQVVUTzogZmxpcCB0aGUgbWVudSwgcmVuZGVyIGFib3ZlXG5cblxuICAgICAgaWYgKHBsYWNlbWVudCA9PT0gJ2F1dG8nIHx8IGlzRml4ZWRQb3NpdGlvbikge1xuICAgICAgICAvLyBtYXkgbmVlZCB0byBiZSBjb25zdHJhaW5lZCBhZnRlciBmbGlwcGluZ1xuICAgICAgICB2YXIgX2NvbnN0cmFpbmVkSGVpZ2h0ID0gbWF4SGVpZ2h0O1xuICAgICAgICB2YXIgc3BhY2VBYm92ZSA9IGlzRml4ZWRQb3NpdGlvbiA/IHZpZXdTcGFjZUFib3ZlIDogc2Nyb2xsU3BhY2VBYm92ZTtcblxuICAgICAgICBpZiAoc3BhY2VBYm92ZSA+PSBtaW5IZWlnaHQpIHtcbiAgICAgICAgICBfY29uc3RyYWluZWRIZWlnaHQgPSBNYXRoLm1pbihzcGFjZUFib3ZlIC0gbWFyZ2luQm90dG9tIC0gc3BhY2luZy5jb250cm9sSGVpZ2h0LCBtYXhIZWlnaHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgICAgICAgIG1heEhlaWdodDogX2NvbnN0cmFpbmVkSGVpZ2h0XG4gICAgICAgIH07XG4gICAgICB9IC8vIEJPVFRPTTogYWxsb3cgYnJvd3NlciB0byBpbmNyZWFzZSBzY3JvbGxhYmxlIGFyZWEgYW5kIGltbWVkaWF0ZWx5IHNldCBzY3JvbGxcblxuXG4gICAgICBpZiAocGxhY2VtZW50ID09PSAnYm90dG9tJykge1xuICAgICAgICBzY3JvbGxUbyhzY3JvbGxQYXJlbnQsIHNjcm9sbERvd24pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbScsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICd0b3AnOlxuICAgICAgLy8gMTogdGhlIG1lbnUgd2lsbCBmaXQsIGRvIG5vdGhpbmdcbiAgICAgIGlmICh2aWV3U3BhY2VBYm92ZSA+PSBtZW51SGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICAgICAgICBtYXhIZWlnaHQ6IG1heEhlaWdodFxuICAgICAgICB9O1xuICAgICAgfSAvLyAyOiB0aGUgbWVudSB3aWxsIGZpdCwgaWYgc2Nyb2xsZWRcblxuXG4gICAgICBpZiAoc2Nyb2xsU3BhY2VBYm92ZSA+PSBtZW51SGVpZ2h0ICYmICFpc0ZpeGVkUG9zaXRpb24pIHtcbiAgICAgICAgaWYgKHNob3VsZFNjcm9sbCkge1xuICAgICAgICAgIGFuaW1hdGVkU2Nyb2xsVG8oc2Nyb2xsUGFyZW50LCBzY3JvbGxVcCwgc2Nyb2xsRHVyYXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgICAgICAgIG1heEhlaWdodDogbWF4SGVpZ2h0XG4gICAgICAgIH07XG4gICAgICB9IC8vIDM6IHRoZSBtZW51IHdpbGwgZml0LCBpZiBjb25zdHJhaW5lZFxuXG5cbiAgICAgIGlmICghaXNGaXhlZFBvc2l0aW9uICYmIHNjcm9sbFNwYWNlQWJvdmUgPj0gbWluSGVpZ2h0IHx8IGlzRml4ZWRQb3NpdGlvbiAmJiB2aWV3U3BhY2VBYm92ZSA+PSBtaW5IZWlnaHQpIHtcbiAgICAgICAgdmFyIF9jb25zdHJhaW5lZEhlaWdodDIgPSBtYXhIZWlnaHQ7IC8vIHdlIHdhbnQgdG8gcHJvdmlkZSBhcyBtdWNoIG9mIHRoZSBtZW51IGFzIHBvc3NpYmxlIHRvIHRoZSB1c2VyLFxuICAgICAgICAvLyBzbyBnaXZlIHRoZW0gd2hhdGV2ZXIgaXMgYXZhaWxhYmxlIGJlbG93IHJhdGhlciB0aGFuIHRoZSBtaW5IZWlnaHQuXG5cbiAgICAgICAgaWYgKCFpc0ZpeGVkUG9zaXRpb24gJiYgc2Nyb2xsU3BhY2VBYm92ZSA+PSBtaW5IZWlnaHQgfHwgaXNGaXhlZFBvc2l0aW9uICYmIHZpZXdTcGFjZUFib3ZlID49IG1pbkhlaWdodCkge1xuICAgICAgICAgIF9jb25zdHJhaW5lZEhlaWdodDIgPSBpc0ZpeGVkUG9zaXRpb24gPyB2aWV3U3BhY2VBYm92ZSAtIG1hcmdpblRvcCA6IHNjcm9sbFNwYWNlQWJvdmUgLSBtYXJnaW5Ub3A7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc2hvdWxkU2Nyb2xsKSB7XG4gICAgICAgICAgYW5pbWF0ZWRTY3JvbGxUbyhzY3JvbGxQYXJlbnQsIHNjcm9sbFVwLCBzY3JvbGxEdXJhdGlvbik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBsYWNlbWVudDogJ3RvcCcsXG4gICAgICAgICAgbWF4SGVpZ2h0OiBfY29uc3RyYWluZWRIZWlnaHQyXG4gICAgICAgIH07XG4gICAgICB9IC8vIDQuIG5vdCBlbm91Z2ggc3BhY2UsIHRoZSBicm93c2VyIFdJTEwgTk9UIGluY3JlYXNlIHNjcm9sbGFibGUgYXJlYSB3aGVuXG4gICAgICAvLyBhYnNvbHV0ZWx5IHBvc2l0aW9uZWQgZWxlbWVudCByZW5kZXJlZCBhYm92ZSB0aGUgdmlld3BvcnQgKG9ubHkgYmVsb3cpLlxuICAgICAgLy8gRmxpcCB0aGUgbWVudSwgcmVuZGVyIGJlbG93XG5cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGxhY2VtZW50OiAnYm90dG9tJyxcbiAgICAgICAgbWF4SGVpZ2h0OiBtYXhIZWlnaHRcbiAgICAgIH07XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBwbGFjZW1lbnQgcHJvdmlkZWQgXFxcIlwiICsgcGxhY2VtZW50ICsgXCJcXFwiLlwiKTtcbiAgfSAvLyBmdWxmaWwgY29udHJhY3Qgd2l0aCBmbG93OiBpbXBsaWNpdCByZXR1cm4gdmFsdWUgb2YgdW5kZWZpbmVkXG5cblxuICByZXR1cm4gZGVmYXVsdFN0YXRlO1xufSAvLyBNZW51IENvbXBvbmVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmZ1bmN0aW9uIGFsaWduVG9Db250cm9sKHBsYWNlbWVudCkge1xuICB2YXIgcGxhY2VtZW50VG9DU1NQcm9wID0ge1xuICAgIGJvdHRvbTogJ3RvcCcsXG4gICAgdG9wOiAnYm90dG9tJ1xuICB9O1xuICByZXR1cm4gcGxhY2VtZW50ID8gcGxhY2VtZW50VG9DU1NQcm9wW3BsYWNlbWVudF0gOiAnYm90dG9tJztcbn1cblxudmFyIGNvZXJjZVBsYWNlbWVudCA9IGZ1bmN0aW9uIGNvZXJjZVBsYWNlbWVudChwKSB7XG4gIHJldHVybiBwID09PSAnYXV0bycgPyAnYm90dG9tJyA6IHA7XG59O1xuXG52YXIgbWVudUNTUyA9IGZ1bmN0aW9uIG1lbnVDU1MoX3JlZjIpIHtcbiAgdmFyIF9yZWYzO1xuXG4gIHZhciBwbGFjZW1lbnQgPSBfcmVmMi5wbGFjZW1lbnQsXG4gICAgICBfcmVmMiR0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgYm9yZGVyUmFkaXVzID0gX3JlZjIkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgc3BhY2luZyA9IF9yZWYyJHRoZW1lLnNwYWNpbmcsXG4gICAgICBjb2xvcnMgPSBfcmVmMiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiBfcmVmMyA9IHtcbiAgICBsYWJlbDogJ21lbnUnXG4gIH0sIF9yZWYzW2FsaWduVG9Db250cm9sKHBsYWNlbWVudCldID0gJzEwMCUnLCBfcmVmMy5iYWNrZ3JvdW5kQ29sb3IgPSBjb2xvcnMubmV1dHJhbDAsIF9yZWYzLmJvcmRlclJhZGl1cyA9IGJvcmRlclJhZGl1cywgX3JlZjMuYm94U2hhZG93ID0gJzAgMCAwIDFweCBoc2xhKDAsIDAlLCAwJSwgMC4xKSwgMCA0cHggMTFweCBoc2xhKDAsIDAlLCAwJSwgMC4xKScsIF9yZWYzLm1hcmdpbkJvdHRvbSA9IHNwYWNpbmcubWVudUd1dHRlciwgX3JlZjMubWFyZ2luVG9wID0gc3BhY2luZy5tZW51R3V0dGVyLCBfcmVmMy5wb3NpdGlvbiA9ICdhYnNvbHV0ZScsIF9yZWYzLndpZHRoID0gJzEwMCUnLCBfcmVmMy56SW5kZXggPSAxLCBfcmVmMztcbn07IC8vIE5PVEU6IGludGVybmFsIG9ubHlcblxudmFyIE1lbnVQbGFjZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTWVudVBsYWNlciwgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTWVudVBsYWNlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwuYXBwbHkoX0NvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1heEhlaWdodDogX3RoaXMucHJvcHMubWF4TWVudUhlaWdodCxcbiAgICAgIHBsYWNlbWVudDogbnVsbFxuICAgIH07XG5cbiAgICBfdGhpcy5nZXRQbGFjZW1lbnQgPSBmdW5jdGlvbiAocmVmKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBtaW5NZW51SGVpZ2h0ID0gX3RoaXMkcHJvcHMubWluTWVudUhlaWdodCxcbiAgICAgICAgICBtYXhNZW51SGVpZ2h0ID0gX3RoaXMkcHJvcHMubWF4TWVudUhlaWdodCxcbiAgICAgICAgICBtZW51UGxhY2VtZW50ID0gX3RoaXMkcHJvcHMubWVudVBsYWNlbWVudCxcbiAgICAgICAgICBtZW51UG9zaXRpb24gPSBfdGhpcyRwcm9wcy5tZW51UG9zaXRpb24sXG4gICAgICAgICAgbWVudVNob3VsZFNjcm9sbEludG9WaWV3ID0gX3RoaXMkcHJvcHMubWVudVNob3VsZFNjcm9sbEludG9WaWV3LFxuICAgICAgICAgIHRoZW1lID0gX3RoaXMkcHJvcHMudGhlbWU7XG4gICAgICB2YXIgZ2V0UG9ydGFsUGxhY2VtZW50ID0gX3RoaXMuY29udGV4dC5nZXRQb3J0YWxQbGFjZW1lbnQ7XG4gICAgICBpZiAoIXJlZikgcmV0dXJuOyAvLyBETyBOT1Qgc2Nyb2xsIGlmIHBvc2l0aW9uIGlzIGZpeGVkXG5cbiAgICAgIHZhciBpc0ZpeGVkUG9zaXRpb24gPSBtZW51UG9zaXRpb24gPT09ICdmaXhlZCc7XG4gICAgICB2YXIgc2hvdWxkU2Nyb2xsID0gbWVudVNob3VsZFNjcm9sbEludG9WaWV3ICYmICFpc0ZpeGVkUG9zaXRpb247XG4gICAgICB2YXIgc3RhdGUgPSBnZXRNZW51UGxhY2VtZW50KHtcbiAgICAgICAgbWF4SGVpZ2h0OiBtYXhNZW51SGVpZ2h0LFxuICAgICAgICBtZW51RWw6IHJlZixcbiAgICAgICAgbWluSGVpZ2h0OiBtaW5NZW51SGVpZ2h0LFxuICAgICAgICBwbGFjZW1lbnQ6IG1lbnVQbGFjZW1lbnQsXG4gICAgICAgIHNob3VsZFNjcm9sbDogc2hvdWxkU2Nyb2xsLFxuICAgICAgICBpc0ZpeGVkUG9zaXRpb246IGlzRml4ZWRQb3NpdGlvbixcbiAgICAgICAgdGhlbWU6IHRoZW1lXG4gICAgICB9KTtcbiAgICAgIGlmIChnZXRQb3J0YWxQbGFjZW1lbnQpIGdldFBvcnRhbFBsYWNlbWVudChzdGF0ZSk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuZ2V0VXBkYXRlZFByb3BzID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG1lbnVQbGFjZW1lbnQgPSBfdGhpcy5wcm9wcy5tZW51UGxhY2VtZW50O1xuICAgICAgdmFyIHBsYWNlbWVudCA9IF90aGlzLnN0YXRlLnBsYWNlbWVudCB8fCBjb2VyY2VQbGFjZW1lbnQobWVudVBsYWNlbWVudCk7XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe30sIF90aGlzLnByb3BzLCB7XG4gICAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50LFxuICAgICAgICBtYXhIZWlnaHQ6IF90aGlzLnN0YXRlLm1heEhlaWdodFxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBNZW51UGxhY2VyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgcmV0dXJuIGNoaWxkcmVuKHtcbiAgICAgIHJlZjogdGhpcy5nZXRQbGFjZW1lbnQsXG4gICAgICBwbGFjZXJQcm9wczogdGhpcy5nZXRVcGRhdGVkUHJvcHMoKVxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNZW51UGxhY2VyO1xufShDb21wb25lbnQpO1xuTWVudVBsYWNlci5jb250ZXh0VHlwZXMgPSB7XG4gIGdldFBvcnRhbFBsYWNlbWVudDogUHJvcFR5cGVzLmZ1bmNcbn07XG5cbnZhciBNZW51ID0gZnVuY3Rpb24gTWVudShwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdtZW51JywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgbWVudTogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSwgaW5uZXJQcm9wcywge1xuICAgIHJlZjogaW5uZXJSZWZcbiAgfSksIGNoaWxkcmVuKTtcbn07XG4vLyBNZW51IExpc3Rcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgbWVudUxpc3RDU1MgPSBmdW5jdGlvbiBtZW51TGlzdENTUyhfcmVmNCkge1xuICB2YXIgbWF4SGVpZ2h0ID0gX3JlZjQubWF4SGVpZ2h0LFxuICAgICAgYmFzZVVuaXQgPSBfcmVmNC50aGVtZS5zcGFjaW5nLmJhc2VVbml0O1xuICByZXR1cm4ge1xuICAgIG1heEhlaWdodDogbWF4SGVpZ2h0LFxuICAgIG92ZXJmbG93WTogJ2F1dG8nLFxuICAgIHBhZGRpbmdCb3R0b206IGJhc2VVbml0LFxuICAgIHBhZGRpbmdUb3A6IGJhc2VVbml0LFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIC8vIHJlcXVpcmVkIGZvciBvZmZzZXRbSGVpZ2h0LCBUb3BdID4ga2V5Ym9hcmQgc2Nyb2xsXG4gICAgV2Via2l0T3ZlcmZsb3dTY3JvbGxpbmc6ICd0b3VjaCdcbiAgfTtcbn07XG52YXIgTWVudUxpc3QgPSBmdW5jdGlvbiBNZW51TGlzdChwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpc011bHRpID0gcHJvcHMuaXNNdWx0aSxcbiAgICAgIGlubmVyUmVmID0gcHJvcHMuaW5uZXJSZWY7XG4gIHJldHVybiBqc3goXCJkaXZcIiwge1xuICAgIGNzczogZ2V0U3R5bGVzKCdtZW51TGlzdCcsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdtZW51LWxpc3QnOiB0cnVlLFxuICAgICAgJ21lbnUtbGlzdC0taXMtbXVsdGknOiBpc011bHRpXG4gICAgfSwgY2xhc3NOYW1lKSxcbiAgICByZWY6IGlubmVyUmVmXG4gIH0sIGNoaWxkcmVuKTtcbn07IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gTWVudSBOb3RpY2VzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIG5vdGljZUNTUyA9IGZ1bmN0aW9uIG5vdGljZUNTUyhfcmVmNSkge1xuICB2YXIgX3JlZjUkdGhlbWUgPSBfcmVmNS50aGVtZSxcbiAgICAgIGJhc2VVbml0ID0gX3JlZjUkdGhlbWUuc3BhY2luZy5iYXNlVW5pdCxcbiAgICAgIGNvbG9ycyA9IF9yZWY1JHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBjb2xvcjogY29sb3JzLm5ldXRyYWw0MCxcbiAgICBwYWRkaW5nOiBiYXNlVW5pdCAqIDIgKyBcInB4IFwiICsgYmFzZVVuaXQgKiAzICsgXCJweFwiLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcidcbiAgfTtcbn07XG5cbnZhciBub09wdGlvbnNNZXNzYWdlQ1NTID0gbm90aWNlQ1NTO1xudmFyIGxvYWRpbmdNZXNzYWdlQ1NTID0gbm90aWNlQ1NTO1xudmFyIE5vT3B0aW9uc01lc3NhZ2UgPSBmdW5jdGlvbiBOb09wdGlvbnNNZXNzYWdlKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICBjc3M6IGdldFN0eWxlcygnbm9PcHRpb25zTWVzc2FnZScsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdtZW51LW5vdGljZSc6IHRydWUsXG4gICAgICAnbWVudS1ub3RpY2UtLW5vLW9wdGlvbnMnOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcbk5vT3B0aW9uc01lc3NhZ2UuZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogJ05vIG9wdGlvbnMnXG59O1xudmFyIExvYWRpbmdNZXNzYWdlID0gZnVuY3Rpb24gTG9hZGluZ01lc3NhZ2UocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdsb2FkaW5nTWVzc2FnZScsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdtZW51LW5vdGljZSc6IHRydWUsXG4gICAgICAnbWVudS1ub3RpY2UtLWxvYWRpbmcnOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcbkxvYWRpbmdNZXNzYWdlLmRlZmF1bHRQcm9wcyA9IHtcbiAgY2hpbGRyZW46ICdMb2FkaW5nLi4uJ1xufTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBNZW51IFBvcnRhbFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbnZhciBtZW51UG9ydGFsQ1NTID0gZnVuY3Rpb24gbWVudVBvcnRhbENTUyhfcmVmNikge1xuICB2YXIgcmVjdCA9IF9yZWY2LnJlY3QsXG4gICAgICBvZmZzZXQgPSBfcmVmNi5vZmZzZXQsXG4gICAgICBwb3NpdGlvbiA9IF9yZWY2LnBvc2l0aW9uO1xuICByZXR1cm4ge1xuICAgIGxlZnQ6IHJlY3QubGVmdCxcbiAgICBwb3NpdGlvbjogcG9zaXRpb24sXG4gICAgdG9wOiBvZmZzZXQsXG4gICAgd2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgekluZGV4OiAxXG4gIH07XG59O1xudmFyIE1lbnVQb3J0YWwgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gIF9pbmhlcml0c0xvb3NlKE1lbnVQb3J0YWwsIF9Db21wb25lbnQyKTtcblxuICBmdW5jdGlvbiBNZW51UG9ydGFsKCkge1xuICAgIHZhciBfdGhpczI7XG5cbiAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICB9XG5cbiAgICBfdGhpczIgPSBfQ29tcG9uZW50Mi5jYWxsLmFwcGx5KF9Db21wb25lbnQyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgIHBsYWNlbWVudDogbnVsbFxuICAgIH07XG5cbiAgICBfdGhpczIuZ2V0UG9ydGFsUGxhY2VtZW50ID0gZnVuY3Rpb24gKF9yZWY3KSB7XG4gICAgICB2YXIgcGxhY2VtZW50ID0gX3JlZjcucGxhY2VtZW50O1xuICAgICAgdmFyIGluaXRpYWxQbGFjZW1lbnQgPSBjb2VyY2VQbGFjZW1lbnQoX3RoaXMyLnByb3BzLm1lbnVQbGFjZW1lbnQpOyAvLyBhdm9pZCByZS1yZW5kZXJzIGlmIHRoZSBwbGFjZW1lbnQgaGFzIG5vdCBjaGFuZ2VkXG5cbiAgICAgIGlmIChwbGFjZW1lbnQgIT09IGluaXRpYWxQbGFjZW1lbnQpIHtcbiAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICBwbGFjZW1lbnQ6IHBsYWNlbWVudFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzMjtcbiAgfVxuXG4gIHZhciBfcHJvdG8yID0gTWVudVBvcnRhbC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvMi5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdldFBvcnRhbFBsYWNlbWVudDogdGhpcy5nZXRQb3J0YWxQbGFjZW1lbnRcbiAgICB9O1xuICB9IC8vIGNhbGxiYWNrIGZvciBvY2Nhc3Npb25zIHdoZXJlIHRoZSBtZW51IG11c3QgXCJmbGlwXCJcbiAgO1xuXG4gIF9wcm90bzIucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBhcHBlbmRUbyA9IF90aGlzJHByb3BzMi5hcHBlbmRUbyxcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wczIuY2hpbGRyZW4sXG4gICAgICAgIGNvbnRyb2xFbGVtZW50ID0gX3RoaXMkcHJvcHMyLmNvbnRyb2xFbGVtZW50LFxuICAgICAgICBtZW51UGxhY2VtZW50ID0gX3RoaXMkcHJvcHMyLm1lbnVQbGFjZW1lbnQsXG4gICAgICAgIHBvc2l0aW9uID0gX3RoaXMkcHJvcHMyLm1lbnVQb3NpdGlvbixcbiAgICAgICAgZ2V0U3R5bGVzID0gX3RoaXMkcHJvcHMyLmdldFN0eWxlcztcbiAgICB2YXIgaXNGaXhlZCA9IHBvc2l0aW9uID09PSAnZml4ZWQnOyAvLyBiYWlsIGVhcmx5IGlmIHJlcXVpcmVkIGVsZW1lbnRzIGFyZW4ndCBwcmVzZW50XG5cbiAgICBpZiAoIWFwcGVuZFRvICYmICFpc0ZpeGVkIHx8ICFjb250cm9sRWxlbWVudCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHBsYWNlbWVudCA9IHRoaXMuc3RhdGUucGxhY2VtZW50IHx8IGNvZXJjZVBsYWNlbWVudChtZW51UGxhY2VtZW50KTtcbiAgICB2YXIgcmVjdCA9IGdldEJvdW5kaW5nQ2xpZW50T2JqKGNvbnRyb2xFbGVtZW50KTtcbiAgICB2YXIgc2Nyb2xsRGlzdGFuY2UgPSBpc0ZpeGVkID8gMCA6IHdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICB2YXIgb2Zmc2V0ID0gcmVjdFtwbGFjZW1lbnRdICsgc2Nyb2xsRGlzdGFuY2U7XG4gICAgdmFyIHN0YXRlID0ge1xuICAgICAgb2Zmc2V0OiBvZmZzZXQsXG4gICAgICBwb3NpdGlvbjogcG9zaXRpb24sXG4gICAgICByZWN0OiByZWN0XG4gICAgfTsgLy8gc2FtZSB3cmFwcGVyIGVsZW1lbnQgd2hldGhlciBmaXhlZCBvciBwb3J0YWxsZWRcblxuICAgIHZhciBtZW51V3JhcHBlciA9IGpzeChcImRpdlwiLCB7XG4gICAgICBjc3M6IGdldFN0eWxlcygnbWVudVBvcnRhbCcsIHN0YXRlKVxuICAgIH0sIGNoaWxkcmVuKTtcbiAgICByZXR1cm4gYXBwZW5kVG8gPyBjcmVhdGVQb3J0YWwobWVudVdyYXBwZXIsIGFwcGVuZFRvKSA6IG1lbnVXcmFwcGVyO1xuICB9O1xuXG4gIHJldHVybiBNZW51UG9ydGFsO1xufShDb21wb25lbnQpO1xuTWVudVBvcnRhbC5jaGlsZENvbnRleHRUeXBlcyA9IHtcbiAgZ2V0UG9ydGFsUGxhY2VtZW50OiBQcm9wVHlwZXMuZnVuY1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xudmFyIGtleUxpc3QgPSBPYmplY3Qua2V5cztcbnZhciBoYXNQcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXF1YWwoYSwgYikge1xuICAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xuXG4gIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT0gJ29iamVjdCcgJiYgdHlwZW9mIGIgPT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYXJyQSA9IGlzQXJyYXkoYSksXG4gICAgICAgIGFyckIgPSBpc0FycmF5KGIpLFxuICAgICAgICBpLFxuICAgICAgICBsZW5ndGgsXG4gICAgICAgIGtleTtcblxuICAgIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgICAgaWYgKCFlcXVhbChhW2ldLCBiW2ldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYXJyQSAhPSBhcnJCKSByZXR1cm4gZmFsc2U7XG4gICAgdmFyIGRhdGVBID0gYSBpbnN0YW5jZW9mIERhdGUsXG4gICAgICAgIGRhdGVCID0gYiBpbnN0YW5jZW9mIERhdGU7XG4gICAgaWYgKGRhdGVBICE9IGRhdGVCKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGRhdGVBICYmIGRhdGVCKSByZXR1cm4gYS5nZXRUaW1lKCkgPT0gYi5nZXRUaW1lKCk7XG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwLFxuICAgICAgICByZWdleHBCID0gYiBpbnN0YW5jZW9mIFJlZ0V4cDtcbiAgICBpZiAocmVnZXhwQSAhPSByZWdleHBCKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHJlZ2V4cEEgJiYgcmVnZXhwQikgcmV0dXJuIGEudG9TdHJpbmcoKSA9PSBiLnRvU3RyaW5nKCk7XG4gICAgdmFyIGtleXMgPSBrZXlMaXN0KGEpO1xuICAgIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuXG4gICAgaWYgKGxlbmd0aCAhPT0ga2V5TGlzdChiKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgIGlmICghaGFzUHJvcC5jYWxsKGIsIGtleXNbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG4gICAgLy8gQ3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdFxuXG5cbiAgICBmb3IgKGkgPSBsZW5ndGg7IGktLSAhPT0gMDspIHtcbiAgICAgIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmIChrZXkgPT09ICdfb3duZXInICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lci5cbiAgICAgICAgLy8gIF9vd25lciBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzXG4gICAgICAgIC8vIGFuZCBpcyBub3QgbmVlZGVkIHdoZW4gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgYSByZWFjdCBlbGVtZW50XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgICBpZiAoIWVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG5cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGEgIT09IGEgJiYgYiAhPT0gYjtcbn0gLy8gZW5kIGZhc3QtZGVlcC1lcXVhbFxuXG5cbmZ1bmN0aW9uIGV4cG9ydGVkRXF1YWwoYSwgYikge1xuICB0cnkge1xuICAgIHJldHVybiBlcXVhbChhLCBiKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpIHtcbiAgICAgIC8vIHdhcm4gb24gY2lyY3VsYXIgcmVmZXJlbmNlcywgZG9uJ3QgY3Jhc2hcbiAgICAgIC8vIGJyb3dzZXJzIGdpdmUgdGhpcyBkaWZmZXJlbnQgZXJyb3JzIG5hbWUgYW5kIG1lc3NhZ2VzOlxuICAgICAgLy8gY2hyb21lL3NhZmFyaTogXCJSYW5nZUVycm9yXCIsIFwiTWF4aW11bSBjYWxsIHN0YWNrIHNpemUgZXhjZWVkZWRcIlxuICAgICAgLy8gZmlyZWZveDogXCJJbnRlcm5hbEVycm9yXCIsIHRvbyBtdWNoIHJlY3Vyc2lvblwiXG4gICAgICAvLyBlZGdlOiBcIkVycm9yXCIsIFwiT3V0IG9mIHN0YWNrIHNwYWNlXCJcbiAgICAgIGNvbnNvbGUud2FybignV2FybmluZzogcmVhY3QtZmFzdC1jb21wYXJlIGRvZXMgbm90IGhhbmRsZSBjaXJjdWxhciByZWZlcmVuY2VzLicsIGVycm9yLm5hbWUsIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gLy8gc29tZSBvdGhlciBlcnJvci4gd2Ugc2hvdWxkIGRlZmluaXRlbHkga25vdyBhYm91dCB0aGVzZVxuXG5cbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfZXh0ZW5kcyQxKCkgeyBfZXh0ZW5kcyQxID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxudmFyIGNvbnRhaW5lckNTUyA9IGZ1bmN0aW9uIGNvbnRhaW5lckNTUyhfcmVmKSB7XG4gIHZhciBpc0Rpc2FibGVkID0gX3JlZi5pc0Rpc2FibGVkLFxuICAgICAgaXNSdGwgPSBfcmVmLmlzUnRsO1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiAnY29udGFpbmVyJyxcbiAgICBkaXJlY3Rpb246IGlzUnRsID8gJ3J0bCcgOiBudWxsLFxuICAgIHBvaW50ZXJFdmVudHM6IGlzRGlzYWJsZWQgPyAnbm9uZScgOiBudWxsLFxuICAgIC8vIGNhbmNlbCBtb3VzZSBldmVudHMgd2hlbiBkaXNhYmxlZFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnXG4gIH07XG59O1xudmFyIFNlbGVjdENvbnRhaW5lciA9IGZ1bmN0aW9uIFNlbGVjdENvbnRhaW5lcihwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclByb3BzID0gcHJvcHMuaW5uZXJQcm9wcyxcbiAgICAgIGlzRGlzYWJsZWQgPSBwcm9wcy5pc0Rpc2FibGVkLFxuICAgICAgaXNSdGwgPSBwcm9wcy5pc1J0bDtcbiAgcmV0dXJuIGpzeChcImRpdlwiLCBfZXh0ZW5kcyQxKHtcbiAgICBjc3M6IGdldFN0eWxlcygnY29udGFpbmVyJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJy0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkLFxuICAgICAgJy0taXMtcnRsJzogaXNSdGxcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGlubmVyUHJvcHMpLCBjaGlsZHJlbik7XG59OyAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZhbHVlIENvbnRhaW5lclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbnZhciB2YWx1ZUNvbnRhaW5lckNTUyA9IGZ1bmN0aW9uIHZhbHVlQ29udGFpbmVyQ1NTKF9yZWYyKSB7XG4gIHZhciBzcGFjaW5nID0gX3JlZjIudGhlbWUuc3BhY2luZztcbiAgcmV0dXJuIHtcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgZmxleDogMSxcbiAgICBmbGV4V3JhcDogJ3dyYXAnLFxuICAgIHBhZGRpbmc6IHNwYWNpbmcuYmFzZVVuaXQgLyAyICsgXCJweCBcIiArIHNwYWNpbmcuYmFzZVVuaXQgKiAyICsgXCJweFwiLFxuICAgIFdlYmtpdE92ZXJmbG93U2Nyb2xsaW5nOiAndG91Y2gnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJ1xuICB9O1xufTtcbnZhciBWYWx1ZUNvbnRhaW5lciA9IGZ1bmN0aW9uIFZhbHVlQ29udGFpbmVyKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGlzTXVsdGkgPSBwcm9wcy5pc011bHRpLFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaGFzVmFsdWUgPSBwcm9wcy5oYXNWYWx1ZTtcbiAgcmV0dXJuIGpzeChcImRpdlwiLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ3ZhbHVlQ29udGFpbmVyJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJ3ZhbHVlLWNvbnRhaW5lcic6IHRydWUsXG4gICAgICAndmFsdWUtY29udGFpbmVyLS1pcy1tdWx0aSc6IGlzTXVsdGksXG4gICAgICAndmFsdWUtY29udGFpbmVyLS1oYXMtdmFsdWUnOiBoYXNWYWx1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSwgY2hpbGRyZW4pO1xufTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBJbmRpY2F0b3IgQ29udGFpbmVyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIGluZGljYXRvcnNDb250YWluZXJDU1MgPSBmdW5jdGlvbiBpbmRpY2F0b3JzQ29udGFpbmVyQ1NTKCkge1xuICByZXR1cm4ge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4U2hyaW5rOiAwXG4gIH07XG59O1xudmFyIEluZGljYXRvcnNDb250YWluZXIgPSBmdW5jdGlvbiBJbmRpY2F0b3JzQ29udGFpbmVyKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcztcbiAgcmV0dXJuIGpzeChcImRpdlwiLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2luZGljYXRvcnNDb250YWluZXInLCBwcm9wcyksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBpbmRpY2F0b3JzOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBjaGlsZHJlbik7XG59O1xuXG5mdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7XG4gIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbExvb3NlKFtcIlxcbiAgMCUsIDgwJSwgMTAwJSB7IG9wYWNpdHk6IDA7IH1cXG4gIDQwJSB7IG9wYWNpdHk6IDE7IH1cXG5cIl0pO1xuXG4gIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbExvb3NlKHN0cmluZ3MsIHJhdykgeyBpZiAoIXJhdykgeyByYXcgPSBzdHJpbmdzLnNsaWNlKDApOyB9IHN0cmluZ3MucmF3ID0gcmF3OyByZXR1cm4gc3RyaW5nczsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcyQyKCkgeyBfZXh0ZW5kcyQyID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbnZhciBfcmVmMiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IHtcbiAgbmFtZTogXCIxOWJxaDJyXCIsXG4gIHN0eWxlczogXCJkaXNwbGF5OmlubGluZS1ibG9jaztmaWxsOmN1cnJlbnRDb2xvcjtsaW5lLWhlaWdodDoxO3N0cm9rZTpjdXJyZW50Q29sb3I7c3Ryb2tlLXdpZHRoOjA7XCJcbn0gOiB7XG4gIG5hbWU6IFwiMTlicWgyclwiLFxuICBzdHlsZXM6IFwiZGlzcGxheTppbmxpbmUtYmxvY2s7ZmlsbDpjdXJyZW50Q29sb3I7bGluZS1oZWlnaHQ6MTtzdHJva2U6Y3VycmVudENvbG9yO3N0cm9rZS13aWR0aDowO1wiLFxuICBtYXA6IFwiLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHbGpZWFJ2Y25NdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJhMEpKSWl3aVptbHNaU0k2SW1sdVpHbGpZWFJ2Y25NdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCQVpteHZkMXh1THlvcUlFQnFjM2dnYW5ONElDb3ZYRzVwYlhCdmNuUWdleUIwZVhCbElFNXZaR1VnZlNCbWNtOXRJQ2R5WldGamRDYzdYRzVwYlhCdmNuUWdleUJxYzNnc0lHdGxlV1p5WVcxbGN5QjlJR1p5YjIwZ0owQmxiVzkwYVc5dUwyTnZjbVVuTzF4dVhHNXBiWEJ2Y25RZ2RIbHdaU0I3SUVOdmJXMXZibEJ5YjNCekxDQlVhR1Z0WlNCOUlHWnliMjBnSnk0dUwzUjVjR1Z6Snp0Y2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJFY205d1pHOTNiaUFtSUVOc1pXRnlJRWxqYjI1elhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVZMjl1YzNRZ1UzWm5JRDBnS0hzZ2MybDZaU3dnTGk0dWNISnZjSE1nZlRvZ2V5QnphWHBsT2lCdWRXMWlaWElnZlNrZ1BUNGdLRnh1SUNBOGMzWm5YRzRnSUNBZ2FHVnBaMmgwUFh0emFYcGxmVnh1SUNBZ0lIZHBaSFJvUFh0emFYcGxmVnh1SUNBZ0lIWnBaWGRDYjNnOVhDSXdJREFnTWpBZ01qQmNJbHh1SUNBZ0lHRnlhV0V0YUdsa1pHVnVQVndpZEhKMVpWd2lYRzRnSUNBZ1ptOWpkWE5oWW14bFBWd2labUZzYzJWY0lseHVJQ0FnSUdOemN6MTdlMXh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dKMmx1YkdsdVpTMWliRzlqYXljc1hHNGdJQ0FnSUNCbWFXeHNPaUFuWTNWeWNtVnVkRU52Ykc5eUp5eGNiaUFnSUNBZ0lHeHBibVZJWldsbmFIUTZJREVzWEc0Z0lDQWdJQ0J6ZEhKdmEyVTZJQ2RqZFhKeVpXNTBRMjlzYjNJbkxGeHVJQ0FnSUNBZ2MzUnliMnRsVjJsa2RHZzZJREFzWEc0Z0lDQWdmWDFjYmlBZ0lDQjdMaTR1Y0hKdmNITjlYRzRnSUM4K1hHNHBPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdRM0p2YzNOSlkyOXVJRDBnS0hCeWIzQnpPaUJoYm5rcElEMCtJQ2hjYmlBZ1BGTjJaeUJ6YVhwbFBYc3lNSDBnZXk0dUxuQnliM0J6ZlQ1Y2JpQWdJQ0E4Y0dGMGFDQmtQVndpVFRFMExqTTBPQ0F4TkM0NE5EbGpMVEF1TkRZNUlEQXVORFk1TFRFdU1qSTVJREF1TkRZNUxURXVOamszSURCc0xUSXVOalV4TFRNdU1ETXdMVEl1TmpVeElETXVNREk1WXkwd0xqUTJPU0F3TGpRMk9TMHhMakl5T1NBd0xqUTJPUzB4TGpZNU55QXdMVEF1TkRZNUxUQXVORFk1TFRBdU5EWTVMVEV1TWpJNUlEQXRNUzQyT1Rkc01pNDNOVGd0TXk0eE5TMHlMamMxT1MwekxqRTFNbU10TUM0ME5qa3RNQzQwTmprdE1DNDBOamt0TVM0eU1qZ2dNQzB4TGpZNU4zTXhMakl5T0Mwd0xqUTJPU0F4TGpZNU55QXdiREl1TmpVeUlETXVNRE14SURJdU5qVXhMVE11TURNeFl6QXVORFk1TFRBdU5EWTVJREV1TWpJNExUQXVORFk1SURFdU5qazNJREJ6TUM0ME5qa2dNUzR5TWprZ01DQXhMalk1TjJ3dE1pNDNOVGdnTXk0eE5USWdNaTQzTlRnZ015NHhOV013TGpRMk9TQXdMalEyT1NBd0xqUTJPU0F4TGpJeU9TQXdJREV1TmprNGVsd2lJQzgrWEc0Z0lEd3ZVM1puUGx4dUtUdGNibVY0Y0c5eWRDQmpiMjV6ZENCRWIzZHVRMmhsZG5KdmJpQTlJQ2h3Y205d2N6b2dZVzU1S1NBOVBpQW9YRzRnSUR4VGRtY2djMmw2WlQxN01qQjlJSHN1TGk1d2NtOXdjMzArWEc0Z0lDQWdQSEJoZEdnZ1pEMWNJazAwTGpVeE5pQTNMalUwT0dNd0xqUXpOaTB3TGpRME5pQXhMakEwTXkwd0xqUTRNU0F4TGpVM05pQXdiRE11T1RBNElETXVOelEzSURNdU9UQTRMVE11TnpRM1l6QXVOVE16TFRBdU5EZ3hJREV1TVRReExUQXVORFEySURFdU5UYzBJREFnTUM0ME16WWdNQzQwTkRVZ01DNDBNRGdnTVM0eE9UY2dNQ0F4TGpZeE5TMHdMalF3TmlBd0xqUXhPQzAwTGpZNU5TQTBMalV3TWkwMExqWTVOU0EwTGpVd01pMHdMakl4TnlBd0xqSXlNeTB3TGpVd01pQXdMak16TlMwd0xqYzROeUF3TGpNek5YTXRNQzQxTnkwd0xqRXhNaTB3TGpjNE9TMHdMak16TldNd0lEQXROQzR5T0RjdE5DNHdPRFF0TkM0Mk9UVXROQzQxTURKekxUQXVORE0yTFRFdU1UY2dNQzB4TGpZeE5YcGNJaUF2UGx4dUlDQThMMU4yWno1Y2JpazdYRzVjYmk4dklEMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVnh1THk4Z1JISnZjR1J2ZDI0Z0ppQkRiR1ZoY2lCQ2RYUjBiMjV6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dVpYaHdiM0owSUhSNWNHVWdTVzVrYVdOaGRHOXlVSEp2Y0hNZ1BTQkRiMjF0YjI1UWNtOXdjeUFtSUh0Y2JpQWdMeW9xSUZSb1pTQmphR2xzWkhKbGJpQjBieUJpWlNCeVpXNWtaWEpsWkNCcGJuTnBaR1VnZEdobElHbHVaR2xqWVhSdmNpNGdLaTljYmlBZ1kyaHBiR1J5Wlc0NklFNXZaR1VzWEc0Z0lDOHFLaUJRY205d2N5QjBhR0YwSUhkcGJHd2dZbVVnY0dGemMyVmtJRzl1SUhSdklIUm9aU0JqYUdsc1pISmxiaTRnS2k5Y2JpQWdhVzV1WlhKUWNtOXdjem9nWVc1NUxGeHVJQ0F2S2lvZ1ZHaGxJR1p2WTNWelpXUWdjM1JoZEdVZ2IyWWdkR2hsSUhObGJHVmpkQzRnS2k5Y2JpQWdhWE5HYjJOMWMyVmtPaUJpYjI5c1pXRnVMRnh1SUNBdktpb2dWMmhsZEdobGNpQjBhR1VnZEdWNGRDQnBjeUJ5YVdkb2RDQjBieUJzWldaMElDb3ZYRzRnSUdselVuUnNPaUJpYjI5c1pXRnVMRnh1ZlR0Y2JseHVZMjl1YzNRZ1ltRnpaVU5UVXlBOUlDaDdYRzRnSUdselJtOWpkWE5sWkN4Y2JpQWdkR2hsYldVNklIdGNiaUFnSUNCemNHRmphVzVuT2lCN0lHSmhjMlZWYm1sMElIMHNYRzRnSUNBZ1kyOXNiM0p6TEZ4dUlDQjlMRnh1ZlRvZ1NXNWthV05oZEc5eVVISnZjSE1wSUQwK0lDaDdYRzRnSUd4aFltVnNPaUFuYVc1a2FXTmhkRzl5UTI5dWRHRnBibVZ5Snl4Y2JpQWdZMjlzYjNJNklHbHpSbTlqZFhObFpDQS9JR052Ykc5eWN5NXVaWFYwY21Gc05qQWdPaUJqYjJ4dmNuTXVibVYxZEhKaGJESXdMRnh1SUNCa2FYTndiR0Y1T2lBblpteGxlQ2NzWEc0Z0lIQmhaR1JwYm1jNklHSmhjMlZWYm1sMElDb2dNaXhjYmlBZ2RISmhibk5wZEdsdmJqb2dKMk52Ykc5eUlERTFNRzF6Snl4Y2JseHVJQ0FuT21odmRtVnlKem9nZTF4dUlDQWdJR052Ykc5eU9pQnBjMFp2WTNWelpXUWdQeUJqYjJ4dmNuTXVibVYxZEhKaGJEZ3dJRG9nWTI5c2IzSnpMbTVsZFhSeVlXdzBNQ3hjYmlBZ2ZTeGNibjBwTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnWkhKdmNHUnZkMjVKYm1ScFkyRjBiM0pEVTFNZ1BTQmlZWE5sUTFOVE8xeHVaWGh3YjNKMElHTnZibk4wSUVSeWIzQmtiM2R1U1c1a2FXTmhkRzl5SUQwZ0tIQnliM0J6T2lCSmJtUnBZMkYwYjNKUWNtOXdjeWtnUFQ0Z2UxeHVJQ0JqYjI1emRDQjdJR05vYVd4a2NtVnVMQ0JqYkdGemMwNWhiV1VzSUdONExDQm5aWFJUZEhsc1pYTXNJR2x1Ym1WeVVISnZjSE1nZlNBOUlIQnliM0J6TzF4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4a2FYWmNiaUFnSUNBZ0lIc3VMaTVwYm01bGNsQnliM0J6ZlZ4dUlDQWdJQ0FnWTNOelBYdG5aWFJUZEhsc1pYTW9KMlJ5YjNCa2IzZHVTVzVrYVdOaGRHOXlKeXdnY0hKdmNITXBmVnh1SUNBZ0lDQWdZMnhoYzNOT1lXMWxQWHRqZUNoY2JpQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJR2x1WkdsallYUnZjam9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdJQ0FuWkhKdmNHUnZkMjR0YVc1a2FXTmhkRzl5SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbFhHNGdJQ0FnSUNBcGZWeHVJQ0FnSUQ1Y2JpQWdJQ0FnSUh0amFHbHNaSEpsYmlCOGZDQThSRzkzYmtOb1pYWnliMjRnTHo1OVhHNGdJQ0FnUEM5a2FYWStYRzRnSUNrN1hHNTlPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdZMnhsWVhKSmJtUnBZMkYwYjNKRFUxTWdQU0JpWVhObFExTlRPMXh1Wlhod2IzSjBJR052Ym5OMElFTnNaV0Z5U1c1a2FXTmhkRzl5SUQwZ0tIQnliM0J6T2lCSmJtUnBZMkYwYjNKUWNtOXdjeWtnUFQ0Z2UxeHVJQ0JqYjI1emRDQjdJR05vYVd4a2NtVnVMQ0JqYkdGemMwNWhiV1VzSUdONExDQm5aWFJUZEhsc1pYTXNJR2x1Ym1WeVVISnZjSE1nZlNBOUlIQnliM0J6TzF4dUlDQnlaWFIxY200Z0tGeHVJQ0FnSUR4a2FYWmNiaUFnSUNBZ0lIc3VMaTVwYm01bGNsQnliM0J6ZlZ4dUlDQWdJQ0FnWTNOelBYdG5aWFJUZEhsc1pYTW9KMk5zWldGeVNXNWthV05oZEc5eUp5d2djSEp2Y0hNcGZWeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGplQ2hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lHbHVaR2xqWVhSdmNqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQW5ZMnhsWVhJdGFXNWthV05oZEc5eUp6b2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdZMnhoYzNOT1lXMWxYRzRnSUNBZ0lDQXBmVnh1SUNBZ0lENWNiaUFnSUNBZ0lIdGphR2xzWkhKbGJpQjhmQ0E4UTNKdmMzTkpZMjl1SUM4K2ZWeHVJQ0FnSUR3dlpHbDJQbHh1SUNBcE8xeHVmVHRjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5QlRaWEJoY21GMGIzSmNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVYRzUwZVhCbElGTmxjR0Z5WVhSdmNsTjBZWFJsSUQwZ2V5QnBjMFJwYzJGaWJHVmtPaUJpYjI5c1pXRnVJSDA3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JwYm1ScFkyRjBiM0pUWlhCaGNtRjBiM0pEVTFNZ1BTQW9lMXh1SUNCcGMwUnBjMkZpYkdWa0xGeHVJQ0IwYUdWdFpUb2dlMXh1SUNBZ0lITndZV05wYm1jNklIc2dZbUZ6WlZWdWFYUWdmU3hjYmlBZ0lDQmpiMnh2Y25Nc1hHNGdJSDBzWEc1OU9pQkRiMjF0YjI1UWNtOXdjeUFtSUZObGNHRnlZWFJ2Y2xOMFlYUmxLU0E5UGlBb2UxeHVJQ0JzWVdKbGJEb2dKMmx1WkdsallYUnZjbE5sY0dGeVlYUnZjaWNzWEc0Z0lHRnNhV2R1VTJWc1pqb2dKM04wY21WMFkyZ25MRnh1SUNCaVlXTnJaM0p2ZFc1a1EyOXNiM0k2SUdselJHbHpZV0pzWldRZ1B5QmpiMnh2Y25NdWJtVjFkSEpoYkRFd0lEb2dZMjlzYjNKekxtNWxkWFJ5WVd3eU1DeGNiaUFnYldGeVoybHVRbTkwZEc5dE9pQmlZWE5sVlc1cGRDQXFJRElzWEc0Z0lHMWhjbWRwYmxSdmNEb2dZbUZ6WlZWdWFYUWdLaUF5TEZ4dUlDQjNhV1IwYURvZ01TeGNibjBwTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnU1c1a2FXTmhkRzl5VTJWd1lYSmhkRzl5SUQwZ0tIQnliM0J6T2lCSmJtUnBZMkYwYjNKUWNtOXdjeWtnUFQ0Z2UxeHVJQ0JqYjI1emRDQjdJR05zWVhOelRtRnRaU3dnWTNnc0lHZGxkRk4wZVd4bGN5d2dhVzV1WlhKUWNtOXdjeUI5SUQwZ2NISnZjSE03WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEhOd1lXNWNiaUFnSUNBZ0lIc3VMaTVwYm01bGNsQnliM0J6ZlZ4dUlDQWdJQ0FnWTNOelBYdG5aWFJUZEhsc1pYTW9KMmx1WkdsallYUnZjbE5sY0dGeVlYUnZjaWNzSUhCeWIzQnpLWDFjYmlBZ0lDQWdJR05zWVhOelRtRnRaVDE3WTNnb2V5QW5hVzVrYVdOaGRHOXlMWE5sY0dGeVlYUnZjaWM2SUhSeWRXVWdmU3dnWTJ4aGMzTk9ZVzFsS1gxY2JpQWdJQ0F2UGx4dUlDQXBPMXh1ZlR0Y2JseHVMeThnUFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVhHNHZMeUJNYjJGa2FXNW5YRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1WTI5dWMzUWdiRzloWkdsdVowUnZkRUZ1YVcxaGRHbHZibk1nUFNCclpYbG1jbUZ0WlhOZ1hHNGdJREFsTENBNE1DVXNJREV3TUNVZ2V5QnZjR0ZqYVhSNU9pQXdPeUI5WEc0Z0lEUXdKU0I3SUc5d1lXTnBkSGs2SURFN0lIMWNibUE3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JzYjJGa2FXNW5TVzVrYVdOaGRHOXlRMU5USUQwZ0tIdGNiaUFnYVhOR2IyTjFjMlZrTEZ4dUlDQnphWHBsTEZ4dUlDQjBhR1Z0WlRvZ2UxeHVJQ0FnSUdOdmJHOXljeXhjYmlBZ0lDQnpjR0ZqYVc1bk9pQjdJR0poYzJWVmJtbDBJSDBzWEc0Z0lIMHNYRzU5T2lCN1hHNGdJR2x6Um05amRYTmxaRG9nWW05dmJHVmhiaXhjYmlBZ2MybDZaVG9nYm5WdFltVnlMRnh1SUNCMGFHVnRaVG9nVkdobGJXVXNYRzU5S1NBOVBpQW9lMXh1SUNCc1lXSmxiRG9nSjJ4dllXUnBibWRKYm1ScFkyRjBiM0luTEZ4dUlDQmpiMnh2Y2pvZ2FYTkdiMk4xYzJWa0lEOGdZMjlzYjNKekxtNWxkWFJ5WVd3Mk1DQTZJR052Ykc5eWN5NXVaWFYwY21Gc01qQXNYRzRnSUdScGMzQnNZWGs2SUNkbWJHVjRKeXhjYmlBZ2NHRmtaR2x1WnpvZ1ltRnpaVlZ1YVhRZ0tpQXlMRnh1SUNCMGNtRnVjMmwwYVc5dU9pQW5ZMjlzYjNJZ01UVXdiWE1uTEZ4dUlDQmhiR2xuYmxObGJHWTZJQ2RqWlc1MFpYSW5MRnh1SUNCbWIyNTBVMmw2WlRvZ2MybDZaU3hjYmlBZ2JHbHVaVWhsYVdkb2REb2dNU3hjYmlBZ2JXRnlaMmx1VW1sbmFIUTZJSE5wZW1Vc1hHNGdJSFJsZUhSQmJHbG5iam9nSjJObGJuUmxjaWNzWEc0Z0lIWmxjblJwWTJGc1FXeHBaMjQ2SUNkdGFXUmtiR1VuTEZ4dWZTazdYRzVjYm5SNWNHVWdSRzkwVUhKdmNITWdQU0I3SUdSbGJHRjVPaUJ1ZFcxaVpYSXNJRzltWm5ObGREb2dZbTl2YkdWaGJpQjlPMXh1WTI5dWMzUWdURzloWkdsdVowUnZkQ0E5SUNoN0lHUmxiR0Y1TENCdlptWnpaWFFnZlRvZ1JHOTBVSEp2Y0hNcElEMCtJQ2hjYmlBZ1BITndZVzVjYmlBZ0lDQmpjM005ZTN0Y2JpQWdJQ0FnSUdGdWFXMWhkR2x2YmpvZ1lDUjdiRzloWkdsdVowUnZkRUZ1YVcxaGRHbHZibk45SURGeklHVmhjMlV0YVc0dGIzVjBJQ1I3WkdWc1lYbDliWE1nYVc1bWFXNXBkR1U3WUN4Y2JpQWdJQ0FnSUdKaFkydG5jbTkxYm1SRGIyeHZjam9nSjJOMWNuSmxiblJEYjJ4dmNpY3NYRzRnSUNBZ0lDQmliM0prWlhKU1lXUnBkWE02SUNjeFpXMG5MRnh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dKMmx1YkdsdVpTMWliRzlqYXljc1hHNGdJQ0FnSUNCdFlYSm5hVzVNWldaME9pQnZabVp6WlhRZ1B5QW5NV1Z0SnlBNklHNTFiR3dzWEc0Z0lDQWdJQ0JvWldsbmFIUTZJQ2N4WlcwbkxGeHVJQ0FnSUNBZ2RtVnlkR2xqWVd4QmJHbG5iam9nSjNSdmNDY3NYRzRnSUNBZ0lDQjNhV1IwYURvZ0p6RmxiU2NzWEc0Z0lDQWdmWDFjYmlBZ0x6NWNiaWs3WEc1Y2JtVjRjRzl5ZENCMGVYQmxJRXh2WVdScGJtZEpZMjl1VUhKdmNITWdQU0I3WEc0Z0lDOHFLaUJRY205d2N5QjBhR0YwSUhkcGJHd2dZbVVnY0dGemMyVmtJRzl1SUhSdklIUm9aU0JqYUdsc1pISmxiaTRnS2k5Y2JpQWdhVzV1WlhKUWNtOXdjem9nWVc1NUxGeHVJQ0F2S2lvZ1ZHaGxJR1p2WTNWelpXUWdjM1JoZEdVZ2IyWWdkR2hsSUhObGJHVmpkQzRnS2k5Y2JpQWdhWE5HYjJOMWMyVmtPaUJpYjI5c1pXRnVMRnh1SUNBdktpb2dWMmhsZEdobGNpQjBhR1VnZEdWNGRDQnBjeUJ5YVdkb2RDQjBieUJzWldaMElDb3ZYRzRnSUdselVuUnNPaUJpYjI5c1pXRnVMRnh1ZlNBbUlFTnZiVzF2YmxCeWIzQnpJQ1lnZTF4dUlDQWdJQzhxS2lCVFpYUWdjMmw2WlNCdlppQjBhR1VnWTI5dWRHRnBibVZ5TGlBcUwxeHVJQ0FnSUhOcGVtVTZJRzUxYldKbGNpeGNiaUFnZlR0Y2JtVjRjRzl5ZENCamIyNXpkQ0JNYjJGa2FXNW5TVzVrYVdOaGRHOXlJRDBnS0hCeWIzQnpPaUJNYjJGa2FXNW5TV052YmxCeWIzQnpLU0E5UGlCN1hHNGdJR052Ym5OMElIc2dZMnhoYzNOT1lXMWxMQ0JqZUN3Z1oyVjBVM1I1YkdWekxDQnBibTVsY2xCeWIzQnpMQ0JwYzFKMGJDQjlJRDBnY0hKdmNITTdYRzVjYmlBZ2NtVjBkWEp1SUNoY2JpQWdJQ0E4WkdsMlhHNGdJQ0FnSUNCN0xpNHVhVzV1WlhKUWNtOXdjMzFjYmlBZ0lDQWdJR056Y3oxN1oyVjBVM1I1YkdWektDZHNiMkZrYVc1blNXNWthV05oZEc5eUp5d2djSEp2Y0hNcGZWeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGplQ2hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lHbHVaR2xqWVhSdmNqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQW5iRzloWkdsdVp5MXBibVJwWTJGMGIzSW5PaUIwY25WbExGeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0JqYkdGemMwNWhiV1ZjYmlBZ0lDQWdJQ2w5WEc0Z0lDQWdQbHh1SUNBZ0lDQWdQRXh2WVdScGJtZEViM1FnWkdWc1lYazllekI5SUc5bVpuTmxkRDE3YVhOU2RHeDlJQzgrWEc0Z0lDQWdJQ0E4VEc5aFpHbHVaMFJ2ZENCa1pXeGhlVDE3TVRZd2ZTQnZabVp6WlhRZ0x6NWNiaUFnSUNBZ0lEeE1iMkZrYVc1blJHOTBJR1JsYkdGNVBYc3pNakI5SUc5bVpuTmxkRDE3SVdselVuUnNmU0F2UGx4dUlDQWdJRHd2WkdsMlBseHVJQ0FwTzF4dWZUdGNia3h2WVdScGJtZEpibVJwWTJGMGIzSXVaR1ZtWVhWc2RGQnliM0J6SUQwZ2V5QnphWHBsT2lBMElIMDdYRzRpWFgwPSAqL1wiXG59O1xuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIERyb3Bkb3duICYgQ2xlYXIgSWNvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxudmFyIFN2ZyA9IGZ1bmN0aW9uIFN2ZyhfcmVmKSB7XG4gIHZhciBzaXplID0gX3JlZi5zaXplLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJzaXplXCJdKTtcblxuICByZXR1cm4ganN4KFwic3ZnXCIsIF9leHRlbmRzJDIoe1xuICAgIGhlaWdodDogc2l6ZSxcbiAgICB3aWR0aDogc2l6ZSxcbiAgICB2aWV3Qm94OiBcIjAgMCAyMCAyMFwiLFxuICAgIFwiYXJpYS1oaWRkZW5cIjogXCJ0cnVlXCIsXG4gICAgZm9jdXNhYmxlOiBcImZhbHNlXCIsXG4gICAgY3NzOiBfcmVmMlxuICB9LCBwcm9wcykpO1xufTtcblxudmFyIENyb3NzSWNvbiA9IGZ1bmN0aW9uIENyb3NzSWNvbihwcm9wcykge1xuICByZXR1cm4ganN4KFN2ZywgX2V4dGVuZHMkMih7XG4gICAgc2l6ZTogMjBcbiAgfSwgcHJvcHMpLCBqc3goXCJwYXRoXCIsIHtcbiAgICBkOiBcIk0xNC4zNDggMTQuODQ5Yy0wLjQ2OSAwLjQ2OS0xLjIyOSAwLjQ2OS0xLjY5NyAwbC0yLjY1MS0zLjAzMC0yLjY1MSAzLjAyOWMtMC40NjkgMC40NjktMS4yMjkgMC40NjktMS42OTcgMC0wLjQ2OS0wLjQ2OS0wLjQ2OS0xLjIyOSAwLTEuNjk3bDIuNzU4LTMuMTUtMi43NTktMy4xNTJjLTAuNDY5LTAuNDY5LTAuNDY5LTEuMjI4IDAtMS42OTdzMS4yMjgtMC40NjkgMS42OTcgMGwyLjY1MiAzLjAzMSAyLjY1MS0zLjAzMWMwLjQ2OS0wLjQ2OSAxLjIyOC0wLjQ2OSAxLjY5NyAwczAuNDY5IDEuMjI5IDAgMS42OTdsLTIuNzU4IDMuMTUyIDIuNzU4IDMuMTVjMC40NjkgMC40NjkgMC40NjkgMS4yMjkgMCAxLjY5OHpcIlxuICB9KSk7XG59O1xudmFyIERvd25DaGV2cm9uID0gZnVuY3Rpb24gRG93bkNoZXZyb24ocHJvcHMpIHtcbiAgcmV0dXJuIGpzeChTdmcsIF9leHRlbmRzJDIoe1xuICAgIHNpemU6IDIwXG4gIH0sIHByb3BzKSwganN4KFwicGF0aFwiLCB7XG4gICAgZDogXCJNNC41MTYgNy41NDhjMC40MzYtMC40NDYgMS4wNDMtMC40ODEgMS41NzYgMGwzLjkwOCAzLjc0NyAzLjkwOC0zLjc0N2MwLjUzMy0wLjQ4MSAxLjE0MS0wLjQ0NiAxLjU3NCAwIDAuNDM2IDAuNDQ1IDAuNDA4IDEuMTk3IDAgMS42MTUtMC40MDYgMC40MTgtNC42OTUgNC41MDItNC42OTUgNC41MDItMC4yMTcgMC4yMjMtMC41MDIgMC4zMzUtMC43ODcgMC4zMzVzLTAuNTctMC4xMTItMC43ODktMC4zMzVjMCAwLTQuMjg3LTQuMDg0LTQuNjk1LTQuNTAycy0wLjQzNi0xLjE3IDAtMS42MTV6XCJcbiAgfSkpO1xufTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEcm9wZG93biAmIENsZWFyIEJ1dHRvbnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgYmFzZUNTUyA9IGZ1bmN0aW9uIGJhc2VDU1MoX3JlZjMpIHtcbiAgdmFyIGlzRm9jdXNlZCA9IF9yZWYzLmlzRm9jdXNlZCxcbiAgICAgIF9yZWYzJHRoZW1lID0gX3JlZjMudGhlbWUsXG4gICAgICBiYXNlVW5pdCA9IF9yZWYzJHRoZW1lLnNwYWNpbmcuYmFzZVVuaXQsXG4gICAgICBjb2xvcnMgPSBfcmVmMyR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdpbmRpY2F0b3JDb250YWluZXInLFxuICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDYwIDogY29sb3JzLm5ldXRyYWwyMCxcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgcGFkZGluZzogYmFzZVVuaXQgKiAyLFxuICAgIHRyYW5zaXRpb246ICdjb2xvciAxNTBtcycsXG4gICAgJzpob3Zlcic6IHtcbiAgICAgIGNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMubmV1dHJhbDgwIDogY29sb3JzLm5ldXRyYWw0MFxuICAgIH1cbiAgfTtcbn07XG5cbnZhciBkcm9wZG93bkluZGljYXRvckNTUyA9IGJhc2VDU1M7XG52YXIgRHJvcGRvd25JbmRpY2F0b3IgPSBmdW5jdGlvbiBEcm9wZG93bkluZGljYXRvcihwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpbm5lclByb3BzID0gcHJvcHMuaW5uZXJQcm9wcztcbiAgcmV0dXJuIGpzeChcImRpdlwiLCBfZXh0ZW5kcyQyKHt9LCBpbm5lclByb3BzLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2Ryb3Bkb3duSW5kaWNhdG9yJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgaW5kaWNhdG9yOiB0cnVlLFxuICAgICAgJ2Ryb3Bkb3duLWluZGljYXRvcic6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0pLCBjaGlsZHJlbiB8fCBqc3goRG93bkNoZXZyb24sIG51bGwpKTtcbn07XG52YXIgY2xlYXJJbmRpY2F0b3JDU1MgPSBiYXNlQ1NTO1xudmFyIENsZWFySW5kaWNhdG9yID0gZnVuY3Rpb24gQ2xlYXJJbmRpY2F0b3IocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHM7XG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMkMih7fSwgaW5uZXJQcm9wcywge1xuICAgIGNzczogZ2V0U3R5bGVzKCdjbGVhckluZGljYXRvcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICdjbGVhci1pbmRpY2F0b3InOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9KSwgY2hpbGRyZW4gfHwganN4KENyb3NzSWNvbiwgbnVsbCkpO1xufTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBTZXBhcmF0b3Jcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG52YXIgaW5kaWNhdG9yU2VwYXJhdG9yQ1NTID0gZnVuY3Rpb24gaW5kaWNhdG9yU2VwYXJhdG9yQ1NTKF9yZWY0KSB7XG4gIHZhciBpc0Rpc2FibGVkID0gX3JlZjQuaXNEaXNhYmxlZCxcbiAgICAgIF9yZWY0JHRoZW1lID0gX3JlZjQudGhlbWUsXG4gICAgICBiYXNlVW5pdCA9IF9yZWY0JHRoZW1lLnNwYWNpbmcuYmFzZVVuaXQsXG4gICAgICBjb2xvcnMgPSBfcmVmNCR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdpbmRpY2F0b3JTZXBhcmF0b3InLFxuICAgIGFsaWduU2VsZjogJ3N0cmV0Y2gnLFxuICAgIGJhY2tncm91bmRDb2xvcjogaXNEaXNhYmxlZCA/IGNvbG9ycy5uZXV0cmFsMTAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICAgIG1hcmdpbkJvdHRvbTogYmFzZVVuaXQgKiAyLFxuICAgIG1hcmdpblRvcDogYmFzZVVuaXQgKiAyLFxuICAgIHdpZHRoOiAxXG4gIH07XG59O1xudmFyIEluZGljYXRvclNlcGFyYXRvciA9IGZ1bmN0aW9uIEluZGljYXRvclNlcGFyYXRvcihwcm9wcykge1xuICB2YXIgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwic3BhblwiLCBfZXh0ZW5kcyQyKHt9LCBpbm5lclByb3BzLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2luZGljYXRvclNlcGFyYXRvcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdpbmRpY2F0b3Itc2VwYXJhdG9yJzogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSlcbiAgfSkpO1xufTsgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBMb2FkaW5nXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxudmFyIGxvYWRpbmdEb3RBbmltYXRpb25zID0ga2V5ZnJhbWVzKF90ZW1wbGF0ZU9iamVjdCgpKTtcbnZhciBsb2FkaW5nSW5kaWNhdG9yQ1NTID0gZnVuY3Rpb24gbG9hZGluZ0luZGljYXRvckNTUyhfcmVmNSkge1xuICB2YXIgaXNGb2N1c2VkID0gX3JlZjUuaXNGb2N1c2VkLFxuICAgICAgc2l6ZSA9IF9yZWY1LnNpemUsXG4gICAgICBfcmVmNSR0aGVtZSA9IF9yZWY1LnRoZW1lLFxuICAgICAgY29sb3JzID0gX3JlZjUkdGhlbWUuY29sb3JzLFxuICAgICAgYmFzZVVuaXQgPSBfcmVmNSR0aGVtZS5zcGFjaW5nLmJhc2VVbml0O1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiAnbG9hZGluZ0luZGljYXRvcicsXG4gICAgY29sb3I6IGlzRm9jdXNlZCA/IGNvbG9ycy5uZXV0cmFsNjAgOiBjb2xvcnMubmV1dHJhbDIwLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBwYWRkaW5nOiBiYXNlVW5pdCAqIDIsXG4gICAgdHJhbnNpdGlvbjogJ2NvbG9yIDE1MG1zJyxcbiAgICBhbGlnblNlbGY6ICdjZW50ZXInLFxuICAgIGZvbnRTaXplOiBzaXplLFxuICAgIGxpbmVIZWlnaHQ6IDEsXG4gICAgbWFyZ2luUmlnaHQ6IHNpemUsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICB2ZXJ0aWNhbEFsaWduOiAnbWlkZGxlJ1xuICB9O1xufTtcblxudmFyIExvYWRpbmdEb3QgPSBmdW5jdGlvbiBMb2FkaW5nRG90KF9yZWY2KSB7XG4gIHZhciBkZWxheSA9IF9yZWY2LmRlbGF5LFxuICAgICAgb2Zmc2V0ID0gX3JlZjYub2Zmc2V0O1xuICByZXR1cm4ganN4KFwic3BhblwiLCB7XG4gICAgY3NzOlxuICAgIC8qI19fUFVSRV9fKi9cbiAgICBfY3NzKHtcbiAgICAgIGFuaW1hdGlvbjogbG9hZGluZ0RvdEFuaW1hdGlvbnMgKyBcIiAxcyBlYXNlLWluLW91dCBcIiArIGRlbGF5ICsgXCJtcyBpbmZpbml0ZTtcIixcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2N1cnJlbnRDb2xvcicsXG4gICAgICBib3JkZXJSYWRpdXM6ICcxZW0nLFxuICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgICBtYXJnaW5MZWZ0OiBvZmZzZXQgPyAnMWVtJyA6IG51bGwsXG4gICAgICBoZWlnaHQ6ICcxZW0nLFxuICAgICAgdmVydGljYWxBbGlnbjogJ3RvcCcsXG4gICAgICB3aWR0aDogJzFlbSdcbiAgICB9LCBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyBcIlwiIDogXCIvKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdsallYUnZjbk11YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQmMweEpJaXdpWm1sc1pTSTZJbWx1WkdsallYUnZjbk11YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZMeUJBWm14dmQxeHVMeW9xSUVCcWMzZ2dhbk40SUNvdlhHNXBiWEJ2Y25RZ2V5QjBlWEJsSUU1dlpHVWdmU0JtY205dElDZHlaV0ZqZENjN1hHNXBiWEJ2Y25RZ2V5QnFjM2dzSUd0bGVXWnlZVzFsY3lCOUlHWnliMjBnSjBCbGJXOTBhVzl1TDJOdmNtVW5PMXh1WEc1cGJYQnZjblFnZEhsd1pTQjdJRU52YlcxdmJsQnliM0J6TENCVWFHVnRaU0I5SUdaeWIyMGdKeTR1TDNSNWNHVnpKenRjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5QkVjbTl3Wkc5M2JpQW1JRU5zWldGeUlFbGpiMjV6WEc0dkx5QTlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDFjYmx4dVkyOXVjM1FnVTNabklEMGdLSHNnYzJsNlpTd2dMaTR1Y0hKdmNITWdmVG9nZXlCemFYcGxPaUJ1ZFcxaVpYSWdmU2tnUFQ0Z0tGeHVJQ0E4YzNablhHNGdJQ0FnYUdWcFoyaDBQWHR6YVhwbGZWeHVJQ0FnSUhkcFpIUm9QWHR6YVhwbGZWeHVJQ0FnSUhacFpYZENiM2c5WENJd0lEQWdNakFnTWpCY0lseHVJQ0FnSUdGeWFXRXRhR2xrWkdWdVBWd2lkSEoxWlZ3aVhHNGdJQ0FnWm05amRYTmhZbXhsUFZ3aVptRnNjMlZjSWx4dUlDQWdJR056Y3oxN2UxeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ0oybHViR2x1WlMxaWJHOWpheWNzWEc0Z0lDQWdJQ0JtYVd4c09pQW5ZM1Z5Y21WdWRFTnZiRzl5Snl4Y2JpQWdJQ0FnSUd4cGJtVklaV2xuYUhRNklERXNYRzRnSUNBZ0lDQnpkSEp2YTJVNklDZGpkWEp5Wlc1MFEyOXNiM0luTEZ4dUlDQWdJQ0FnYzNSeWIydGxWMmxrZEdnNklEQXNYRzRnSUNBZ2ZYMWNiaUFnSUNCN0xpNHVjSEp2Y0hOOVhHNGdJQzgrWEc0cE8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1EzSnZjM05KWTI5dUlEMGdLSEJ5YjNCek9pQmhibmtwSUQwK0lDaGNiaUFnUEZOMlp5QnphWHBsUFhzeU1IMGdleTR1TG5CeWIzQnpmVDVjYmlBZ0lDQThjR0YwYUNCa1BWd2lUVEUwTGpNME9DQXhOQzQ0TkRsakxUQXVORFk1SURBdU5EWTVMVEV1TWpJNUlEQXVORFk1TFRFdU5qazNJREJzTFRJdU5qVXhMVE11TURNd0xUSXVOalV4SURNdU1ESTVZeTB3TGpRMk9TQXdMalEyT1MweExqSXlPU0F3TGpRMk9TMHhMalk1TnlBd0xUQXVORFk1TFRBdU5EWTVMVEF1TkRZNUxURXVNakk1SURBdE1TNDJPVGRzTWk0M05UZ3RNeTR4TlMweUxqYzFPUzB6TGpFMU1tTXRNQzQwTmprdE1DNDBOamt0TUM0ME5qa3RNUzR5TWpnZ01DMHhMalk1TjNNeExqSXlPQzB3TGpRMk9TQXhMalk1TnlBd2JESXVOalV5SURNdU1ETXhJREl1TmpVeExUTXVNRE14WXpBdU5EWTVMVEF1TkRZNUlERXVNakk0TFRBdU5EWTVJREV1TmprM0lEQnpNQzQwTmprZ01TNHlNamtnTUNBeExqWTVOMnd0TWk0M05UZ2dNeTR4TlRJZ01pNDNOVGdnTXk0eE5XTXdMalEyT1NBd0xqUTJPU0F3TGpRMk9TQXhMakl5T1NBd0lERXVOams0ZWx3aUlDOCtYRzRnSUR3dlUzWm5QbHh1S1R0Y2JtVjRjRzl5ZENCamIyNXpkQ0JFYjNkdVEyaGxkbkp2YmlBOUlDaHdjbTl3Y3pvZ1lXNTVLU0E5UGlBb1hHNGdJRHhUZG1jZ2MybDZaVDE3TWpCOUlIc3VMaTV3Y205d2MzMCtYRzRnSUNBZ1BIQmhkR2dnWkQxY0lrMDBMalV4TmlBM0xqVTBPR013TGpRek5pMHdMalEwTmlBeExqQTBNeTB3TGpRNE1TQXhMalUzTmlBd2JETXVPVEE0SURNdU56UTNJRE11T1RBNExUTXVOelEzWXpBdU5UTXpMVEF1TkRneElERXVNVFF4TFRBdU5EUTJJREV1TlRjMElEQWdNQzQwTXpZZ01DNDBORFVnTUM0ME1EZ2dNUzR4T1RjZ01DQXhMall4TlMwd0xqUXdOaUF3TGpReE9DMDBMalk1TlNBMExqVXdNaTAwTGpZNU5TQTBMalV3TWkwd0xqSXhOeUF3TGpJeU15MHdMalV3TWlBd0xqTXpOUzB3TGpjNE55QXdMak16TlhNdE1DNDFOeTB3TGpFeE1pMHdMamM0T1Mwd0xqTXpOV013SURBdE5DNHlPRGN0TkM0d09EUXROQzQyT1RVdE5DNDFNREp6TFRBdU5ETTJMVEV1TVRjZ01DMHhMall4TlhwY0lpQXZQbHh1SUNBOEwxTjJaejVjYmlrN1hHNWNiaTh2SUQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBWeHVMeThnUkhKdmNHUnZkMjRnSmlCRGJHVmhjaUJDZFhSMGIyNXpYRzR2THlBOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMWNibHh1Wlhod2IzSjBJSFI1Y0dVZ1NXNWthV05oZEc5eVVISnZjSE1nUFNCRGIyMXRiMjVRY205d2N5QW1JSHRjYmlBZ0x5b3FJRlJvWlNCamFHbHNaSEpsYmlCMGJ5QmlaU0J5Wlc1a1pYSmxaQ0JwYm5OcFpHVWdkR2hsSUdsdVpHbGpZWFJ2Y2k0Z0tpOWNiaUFnWTJocGJHUnlaVzQ2SUU1dlpHVXNYRzRnSUM4cUtpQlFjbTl3Y3lCMGFHRjBJSGRwYkd3Z1ltVWdjR0Z6YzJWa0lHOXVJSFJ2SUhSb1pTQmphR2xzWkhKbGJpNGdLaTljYmlBZ2FXNXVaWEpRY205d2N6b2dZVzU1TEZ4dUlDQXZLaW9nVkdobElHWnZZM1Z6WldRZ2MzUmhkR1VnYjJZZ2RHaGxJSE5sYkdWamRDNGdLaTljYmlBZ2FYTkdiMk4xYzJWa09pQmliMjlzWldGdUxGeHVJQ0F2S2lvZ1YyaGxkR2hsY2lCMGFHVWdkR1Y0ZENCcGN5QnlhV2RvZENCMGJ5QnNaV1owSUNvdlhHNGdJR2x6VW5Sc09pQmliMjlzWldGdUxGeHVmVHRjYmx4dVkyOXVjM1FnWW1GelpVTlRVeUE5SUNoN1hHNGdJR2x6Um05amRYTmxaQ3hjYmlBZ2RHaGxiV1U2SUh0Y2JpQWdJQ0J6Y0dGamFXNW5PaUI3SUdKaGMyVlZibWwwSUgwc1hHNGdJQ0FnWTI5c2IzSnpMRnh1SUNCOUxGeHVmVG9nU1c1a2FXTmhkRzl5VUhKdmNITXBJRDArSUNoN1hHNGdJR3hoWW1Wc09pQW5hVzVrYVdOaGRHOXlRMjl1ZEdGcGJtVnlKeXhjYmlBZ1kyOXNiM0k2SUdselJtOWpkWE5sWkNBL0lHTnZiRzl5Y3k1dVpYVjBjbUZzTmpBZ09pQmpiMnh2Y25NdWJtVjFkSEpoYkRJd0xGeHVJQ0JrYVhOd2JHRjVPaUFuWm14bGVDY3NYRzRnSUhCaFpHUnBibWM2SUdKaGMyVlZibWwwSUNvZ01peGNiaUFnZEhKaGJuTnBkR2x2YmpvZ0oyTnZiRzl5SURFMU1HMXpKeXhjYmx4dUlDQW5PbWh2ZG1WeUp6b2dlMXh1SUNBZ0lHTnZiRzl5T2lCcGMwWnZZM1Z6WldRZ1B5QmpiMnh2Y25NdWJtVjFkSEpoYkRnd0lEb2dZMjlzYjNKekxtNWxkWFJ5WVd3ME1DeGNiaUFnZlN4Y2JuMHBPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdaSEp2Y0dSdmQyNUpibVJwWTJGMGIzSkRVMU1nUFNCaVlYTmxRMU5UTzF4dVpYaHdiM0owSUdOdmJuTjBJRVJ5YjNCa2IzZHVTVzVrYVdOaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTm9hV3hrY21WdUxDQmpiR0Z6YzA1aGJXVXNJR040TENCblpYUlRkSGxzWlhNc0lHbHVibVZ5VUhKdmNITWdmU0E5SUhCeWIzQnpPMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhrYVhaY2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oyUnliM0JrYjNkdVNXNWthV05oZEc5eUp5d2djSEp2Y0hNcGZWeHVJQ0FnSUNBZ1kyeGhjM05PWVcxbFBYdGplQ2hjYmlBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lHbHVaR2xqWVhSdmNqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ0lDQW5aSEp2Y0dSdmQyNHRhVzVrYVdOaGRHOXlKem9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWTJ4aGMzTk9ZVzFsWEc0Z0lDQWdJQ0FwZlZ4dUlDQWdJRDVjYmlBZ0lDQWdJSHRqYUdsc1pISmxiaUI4ZkNBOFJHOTNia05vWlhaeWIyNGdMejU5WEc0Z0lDQWdQQzlrYVhZK1hHNGdJQ2s3WEc1OU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1kyeGxZWEpKYm1ScFkyRjBiM0pEVTFNZ1BTQmlZWE5sUTFOVE8xeHVaWGh3YjNKMElHTnZibk4wSUVOc1pXRnlTVzVrYVdOaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTm9hV3hrY21WdUxDQmpiR0Z6YzA1aGJXVXNJR040TENCblpYUlRkSGxzWlhNc0lHbHVibVZ5VUhKdmNITWdmU0E5SUhCeWIzQnpPMXh1SUNCeVpYUjFjbTRnS0Z4dUlDQWdJRHhrYVhaY2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oyTnNaV0Z5U1c1a2FXTmhkRzl5Snl3Z2NISnZjSE1wZlZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0amVDaGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUdsdVpHbGpZWFJ2Y2pvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnSUNBblkyeGxZWEl0YVc1a2FXTmhkRzl5SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ1kyeGhjM05PWVcxbFhHNGdJQ0FnSUNBcGZWeHVJQ0FnSUQ1Y2JpQWdJQ0FnSUh0amFHbHNaSEpsYmlCOGZDQThRM0p2YzNOSlkyOXVJQzgrZlZ4dUlDQWdJRHd2WkdsMlBseHVJQ0FwTzF4dWZUdGNibHh1THk4Z1BUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlYRzR2THlCVFpYQmhjbUYwYjNKY2JpOHZJRDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFZ4dVhHNTBlWEJsSUZObGNHRnlZWFJ2Y2xOMFlYUmxJRDBnZXlCcGMwUnBjMkZpYkdWa09pQmliMjlzWldGdUlIMDdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnBibVJwWTJGMGIzSlRaWEJoY21GMGIzSkRVMU1nUFNBb2UxeHVJQ0JwYzBScGMyRmliR1ZrTEZ4dUlDQjBhR1Z0WlRvZ2UxeHVJQ0FnSUhOd1lXTnBibWM2SUhzZ1ltRnpaVlZ1YVhRZ2ZTeGNiaUFnSUNCamIyeHZjbk1zWEc0Z0lIMHNYRzU5T2lCRGIyMXRiMjVRY205d2N5QW1JRk5sY0dGeVlYUnZjbE4wWVhSbEtTQTlQaUFvZTF4dUlDQnNZV0psYkRvZ0oybHVaR2xqWVhSdmNsTmxjR0Z5WVhSdmNpY3NYRzRnSUdGc2FXZHVVMlZzWmpvZ0ozTjBjbVYwWTJnbkxGeHVJQ0JpWVdOclozSnZkVzVrUTI5c2IzSTZJR2x6UkdsellXSnNaV1FnUHlCamIyeHZjbk11Ym1WMWRISmhiREV3SURvZ1kyOXNiM0p6TG01bGRYUnlZV3d5TUN4Y2JpQWdiV0Z5WjJsdVFtOTBkRzl0T2lCaVlYTmxWVzVwZENBcUlESXNYRzRnSUcxaGNtZHBibFJ2Y0RvZ1ltRnpaVlZ1YVhRZ0tpQXlMRnh1SUNCM2FXUjBhRG9nTVN4Y2JuMHBPMXh1WEc1bGVIQnZjblFnWTI5dWMzUWdTVzVrYVdOaGRHOXlVMlZ3WVhKaGRHOXlJRDBnS0hCeWIzQnpPaUJKYm1ScFkyRjBiM0pRY205d2N5a2dQVDRnZTF4dUlDQmpiMjV6ZENCN0lHTnNZWE56VG1GdFpTd2dZM2dzSUdkbGRGTjBlV3hsY3l3Z2FXNXVaWEpRY205d2N5QjlJRDBnY0hKdmNITTdYRzRnSUhKbGRIVnliaUFvWEc0Z0lDQWdQSE53WVc1Y2JpQWdJQ0FnSUhzdUxpNXBibTVsY2xCeWIzQnpmVnh1SUNBZ0lDQWdZM056UFh0blpYUlRkSGxzWlhNb0oybHVaR2xqWVhSdmNsTmxjR0Z5WVhSdmNpY3NJSEJ5YjNCektYMWNiaUFnSUNBZ0lHTnNZWE56VG1GdFpUMTdZM2dvZXlBbmFXNWthV05oZEc5eUxYTmxjR0Z5WVhSdmNpYzZJSFJ5ZFdVZ2ZTd2dZMnhoYzNOT1lXMWxLWDFjYmlBZ0lDQXZQbHh1SUNBcE8xeHVmVHRjYmx4dUx5OGdQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5WEc0dkx5Qk1iMkZrYVc1blhHNHZMeUE5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQwOVBUMDlQVDA5UFQxY2JseHVZMjl1YzNRZ2JHOWhaR2x1WjBSdmRFRnVhVzFoZEdsdmJuTWdQU0JyWlhsbWNtRnRaWE5nWEc0Z0lEQWxMQ0E0TUNVc0lERXdNQ1VnZXlCdmNHRmphWFI1T2lBd095QjlYRzRnSURRd0pTQjdJRzl3WVdOcGRIazZJREU3SUgxY2JtQTdYRzVjYm1WNGNHOXlkQ0JqYjI1emRDQnNiMkZrYVc1blNXNWthV05oZEc5eVExTlRJRDBnS0h0Y2JpQWdhWE5HYjJOMWMyVmtMRnh1SUNCemFYcGxMRnh1SUNCMGFHVnRaVG9nZTF4dUlDQWdJR052Ykc5eWN5eGNiaUFnSUNCemNHRmphVzVuT2lCN0lHSmhjMlZWYm1sMElIMHNYRzRnSUgwc1hHNTlPaUI3WEc0Z0lHbHpSbTlqZFhObFpEb2dZbTl2YkdWaGJpeGNiaUFnYzJsNlpUb2diblZ0WW1WeUxGeHVJQ0IwYUdWdFpUb2dWR2hsYldVc1hHNTlLU0E5UGlBb2UxeHVJQ0JzWVdKbGJEb2dKMnh2WVdScGJtZEpibVJwWTJGMGIzSW5MRnh1SUNCamIyeHZjam9nYVhOR2IyTjFjMlZrSUQ4Z1kyOXNiM0p6TG01bGRYUnlZV3cyTUNBNklHTnZiRzl5Y3k1dVpYVjBjbUZzTWpBc1hHNGdJR1JwYzNCc1lYazZJQ2RtYkdWNEp5eGNiaUFnY0dGa1pHbHVaem9nWW1GelpWVnVhWFFnS2lBeUxGeHVJQ0IwY21GdWMybDBhVzl1T2lBblkyOXNiM0lnTVRVd2JYTW5MRnh1SUNCaGJHbG5ibE5sYkdZNklDZGpaVzUwWlhJbkxGeHVJQ0JtYjI1MFUybDZaVG9nYzJsNlpTeGNiaUFnYkdsdVpVaGxhV2RvZERvZ01TeGNiaUFnYldGeVoybHVVbWxuYUhRNklITnBlbVVzWEc0Z0lIUmxlSFJCYkdsbmJqb2dKMk5sYm5SbGNpY3NYRzRnSUhabGNuUnBZMkZzUVd4cFoyNDZJQ2R0YVdSa2JHVW5MRnh1ZlNrN1hHNWNiblI1Y0dVZ1JHOTBVSEp2Y0hNZ1BTQjdJR1JsYkdGNU9pQnVkVzFpWlhJc0lHOW1abk5sZERvZ1ltOXZiR1ZoYmlCOU8xeHVZMjl1YzNRZ1RHOWhaR2x1WjBSdmRDQTlJQ2g3SUdSbGJHRjVMQ0J2Wm1aelpYUWdmVG9nUkc5MFVISnZjSE1wSUQwK0lDaGNiaUFnUEhOd1lXNWNiaUFnSUNCamMzTTllM3RjYmlBZ0lDQWdJR0Z1YVcxaGRHbHZiam9nWUNSN2JHOWhaR2x1WjBSdmRFRnVhVzFoZEdsdmJuTjlJREZ6SUdWaGMyVXRhVzR0YjNWMElDUjdaR1ZzWVhsOWJYTWdhVzVtYVc1cGRHVTdZQ3hjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVJEYjJ4dmNqb2dKMk4xY25KbGJuUkRiMnh2Y2ljc1hHNGdJQ0FnSUNCaWIzSmtaWEpTWVdScGRYTTZJQ2N4WlcwbkxGeHVJQ0FnSUNBZ1pHbHpjR3hoZVRvZ0oybHViR2x1WlMxaWJHOWpheWNzWEc0Z0lDQWdJQ0J0WVhKbmFXNU1aV1owT2lCdlptWnpaWFFnUHlBbk1XVnRKeUE2SUc1MWJHd3NYRzRnSUNBZ0lDQm9aV2xuYUhRNklDY3haVzBuTEZ4dUlDQWdJQ0FnZG1WeWRHbGpZV3hCYkdsbmJqb2dKM1J2Y0Njc1hHNGdJQ0FnSUNCM2FXUjBhRG9nSnpGbGJTY3NYRzRnSUNBZ2ZYMWNiaUFnTHo1Y2JpazdYRzVjYm1WNGNHOXlkQ0IwZVhCbElFeHZZV1JwYm1kSlkyOXVVSEp2Y0hNZ1BTQjdYRzRnSUM4cUtpQlFjbTl3Y3lCMGFHRjBJSGRwYkd3Z1ltVWdjR0Z6YzJWa0lHOXVJSFJ2SUhSb1pTQmphR2xzWkhKbGJpNGdLaTljYmlBZ2FXNXVaWEpRY205d2N6b2dZVzU1TEZ4dUlDQXZLaW9nVkdobElHWnZZM1Z6WldRZ2MzUmhkR1VnYjJZZ2RHaGxJSE5sYkdWamRDNGdLaTljYmlBZ2FYTkdiMk4xYzJWa09pQmliMjlzWldGdUxGeHVJQ0F2S2lvZ1YyaGxkR2hsY2lCMGFHVWdkR1Y0ZENCcGN5QnlhV2RvZENCMGJ5QnNaV1owSUNvdlhHNGdJR2x6VW5Sc09pQmliMjlzWldGdUxGeHVmU0FtSUVOdmJXMXZibEJ5YjNCeklDWWdlMXh1SUNBZ0lDOHFLaUJUWlhRZ2MybDZaU0J2WmlCMGFHVWdZMjl1ZEdGcGJtVnlMaUFxTDF4dUlDQWdJSE5wZW1VNklHNTFiV0psY2l4Y2JpQWdmVHRjYm1WNGNHOXlkQ0JqYjI1emRDQk1iMkZrYVc1blNXNWthV05oZEc5eUlEMGdLSEJ5YjNCek9pQk1iMkZrYVc1blNXTnZibEJ5YjNCektTQTlQaUI3WEc0Z0lHTnZibk4wSUhzZ1kyeGhjM05PWVcxbExDQmplQ3dnWjJWMFUzUjViR1Z6TENCcGJtNWxjbEJ5YjNCekxDQnBjMUowYkNCOUlEMGdjSEp2Y0hNN1hHNWNiaUFnY21WMGRYSnVJQ2hjYmlBZ0lDQThaR2wyWEc0Z0lDQWdJQ0I3TGk0dWFXNXVaWEpRY205d2MzMWNiaUFnSUNBZ0lHTnpjejE3WjJWMFUzUjViR1Z6S0Nkc2IyRmthVzVuU1c1a2FXTmhkRzl5Snl3Z2NISnZjSE1wZlZ4dUlDQWdJQ0FnWTJ4aGMzTk9ZVzFsUFh0amVDaGNiaUFnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUdsdVpHbGpZWFJ2Y2pvZ2RISjFaU3hjYmlBZ0lDQWdJQ0FnSUNBbmJHOWhaR2x1WnkxcGJtUnBZMkYwYjNJbk9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQmpiR0Z6YzA1aGJXVmNiaUFnSUNBZ0lDbDlYRzRnSUNBZ1BseHVJQ0FnSUNBZ1BFeHZZV1JwYm1kRWIzUWdaR1ZzWVhrOWV6QjlJRzltWm5ObGREMTdhWE5TZEd4OUlDOCtYRzRnSUNBZ0lDQThURzloWkdsdVowUnZkQ0JrWld4aGVUMTdNVFl3ZlNCdlptWnpaWFFnTHo1Y2JpQWdJQ0FnSUR4TWIyRmthVzVuUkc5MElHUmxiR0Y1UFhzek1qQjlJRzltWm5ObGREMTdJV2x6VW5Sc2ZTQXZQbHh1SUNBZ0lEd3ZaR2wyUGx4dUlDQXBPMXh1ZlR0Y2JreHZZV1JwYm1kSmJtUnBZMkYwYjNJdVpHVm1ZWFZzZEZCeWIzQnpJRDBnZXlCemFYcGxPaUEwSUgwN1hHNGlYWDA9ICovXCIpXG4gIH0pO1xufTtcblxudmFyIExvYWRpbmdJbmRpY2F0b3IgPSBmdW5jdGlvbiBMb2FkaW5nSW5kaWNhdG9yKHByb3BzKSB7XG4gIHZhciBjbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWUsXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHMsXG4gICAgICBpc1J0bCA9IHByb3BzLmlzUnRsO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzJDIoe30sIGlubmVyUHJvcHMsIHtcbiAgICBjc3M6IGdldFN0eWxlcygnbG9hZGluZ0luZGljYXRvcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIGluZGljYXRvcjogdHJ1ZSxcbiAgICAgICdsb2FkaW5nLWluZGljYXRvcic6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0pLCBqc3goTG9hZGluZ0RvdCwge1xuICAgIGRlbGF5OiAwLFxuICAgIG9mZnNldDogaXNSdGxcbiAgfSksIGpzeChMb2FkaW5nRG90LCB7XG4gICAgZGVsYXk6IDE2MCxcbiAgICBvZmZzZXQ6IHRydWVcbiAgfSksIGpzeChMb2FkaW5nRG90LCB7XG4gICAgZGVsYXk6IDMyMCxcbiAgICBvZmZzZXQ6ICFpc1J0bFxuICB9KSk7XG59O1xuTG9hZGluZ0luZGljYXRvci5kZWZhdWx0UHJvcHMgPSB7XG4gIHNpemU6IDRcbn07XG5cbmZ1bmN0aW9uIF9leHRlbmRzJDMoKSB7IF9leHRlbmRzJDMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMkMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG52YXIgY3NzID0gZnVuY3Rpb24gY3NzKF9yZWYpIHtcbiAgdmFyIGlzRGlzYWJsZWQgPSBfcmVmLmlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQgPSBfcmVmLmlzRm9jdXNlZCxcbiAgICAgIF9yZWYkdGhlbWUgPSBfcmVmLnRoZW1lLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnMsXG4gICAgICBib3JkZXJSYWRpdXMgPSBfcmVmJHRoZW1lLmJvcmRlclJhZGl1cyxcbiAgICAgIHNwYWNpbmcgPSBfcmVmJHRoZW1lLnNwYWNpbmc7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdjb250cm9sJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDUgOiBjb2xvcnMubmV1dHJhbDAsXG4gICAgYm9yZGVyQ29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDEwIDogaXNGb2N1c2VkID8gY29sb3JzLnByaW1hcnkgOiBjb2xvcnMubmV1dHJhbDIwLFxuICAgIGJvcmRlclJhZGl1czogYm9yZGVyUmFkaXVzLFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJveFNoYWRvdzogaXNGb2N1c2VkID8gXCIwIDAgMCAxcHggXCIgKyBjb2xvcnMucHJpbWFyeSA6IG51bGwsXG4gICAgY3Vyc29yOiAnZGVmYXVsdCcsXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIGZsZXhXcmFwOiAnd3JhcCcsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgICBtaW5IZWlnaHQ6IHNwYWNpbmcuY29udHJvbEhlaWdodCxcbiAgICBvdXRsaW5lOiAnMCAhaW1wb3J0YW50JyxcbiAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICB0cmFuc2l0aW9uOiAnYWxsIDEwMG1zJyxcbiAgICAnJjpob3Zlcic6IHtcbiAgICAgIGJvcmRlckNvbG9yOiBpc0ZvY3VzZWQgPyBjb2xvcnMucHJpbWFyeSA6IGNvbG9ycy5uZXV0cmFsMzBcbiAgICB9XG4gIH07XG59O1xuXG52YXIgQ29udHJvbCA9IGZ1bmN0aW9uIENvbnRyb2wocHJvcHMpIHtcbiAgdmFyIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgICBjeCA9IHByb3BzLmN4LFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgaXNEaXNhYmxlZCA9IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQgPSBwcm9wcy5pc0ZvY3VzZWQsXG4gICAgICBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHMsXG4gICAgICBtZW51SXNPcGVuID0gcHJvcHMubWVudUlzT3BlbjtcbiAgcmV0dXJuIGpzeChcImRpdlwiLCBfZXh0ZW5kcyQzKHtcbiAgICByZWY6IGlubmVyUmVmLFxuICAgIGNzczogZ2V0U3R5bGVzKCdjb250cm9sJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgY29udHJvbDogdHJ1ZSxcbiAgICAgICdjb250cm9sLS1pcy1kaXNhYmxlZCc6IGlzRGlzYWJsZWQsXG4gICAgICAnY29udHJvbC0taXMtZm9jdXNlZCc6IGlzRm9jdXNlZCxcbiAgICAgICdjb250cm9sLS1tZW51LWlzLW9wZW4nOiBtZW51SXNPcGVuXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UkMShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9leHRlbmRzJDQoKSB7IF9leHRlbmRzJDQgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMkNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG52YXIgZ3JvdXBDU1MgPSBmdW5jdGlvbiBncm91cENTUyhfcmVmKSB7XG4gIHZhciBzcGFjaW5nID0gX3JlZi50aGVtZS5zcGFjaW5nO1xuICByZXR1cm4ge1xuICAgIHBhZGRpbmdCb3R0b206IHNwYWNpbmcuYmFzZVVuaXQgKiAyLFxuICAgIHBhZGRpbmdUb3A6IHNwYWNpbmcuYmFzZVVuaXQgKiAyXG4gIH07XG59O1xuXG52YXIgR3JvdXAgPSBmdW5jdGlvbiBHcm91cChwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBIZWFkaW5nID0gcHJvcHMuSGVhZGluZyxcbiAgICAgIGhlYWRpbmdQcm9wcyA9IHByb3BzLmhlYWRpbmdQcm9wcyxcbiAgICAgIGxhYmVsID0gcHJvcHMubGFiZWwsXG4gICAgICB0aGVtZSA9IHByb3BzLnRoZW1lLFxuICAgICAgc2VsZWN0UHJvcHMgPSBwcm9wcy5zZWxlY3RQcm9wcztcbiAgcmV0dXJuIGpzeChcImRpdlwiLCB7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2dyb3VwJywgcHJvcHMpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgZ3JvdXA6IHRydWVcbiAgICB9LCBjbGFzc05hbWUpXG4gIH0sIGpzeChIZWFkaW5nLCBfZXh0ZW5kcyQ0KHt9LCBoZWFkaW5nUHJvcHMsIHtcbiAgICBzZWxlY3RQcm9wczogc2VsZWN0UHJvcHMsXG4gICAgdGhlbWU6IHRoZW1lLFxuICAgIGdldFN0eWxlczogZ2V0U3R5bGVzLFxuICAgIGN4OiBjeFxuICB9KSwgbGFiZWwpLCBqc3goXCJkaXZcIiwgbnVsbCwgY2hpbGRyZW4pKTtcbn07XG5cbnZhciBncm91cEhlYWRpbmdDU1MgPSBmdW5jdGlvbiBncm91cEhlYWRpbmdDU1MoX3JlZjIpIHtcbiAgdmFyIHNwYWNpbmcgPSBfcmVmMi50aGVtZS5zcGFjaW5nO1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiAnZ3JvdXAnLFxuICAgIGNvbG9yOiAnIzk5OScsXG4gICAgY3Vyc29yOiAnZGVmYXVsdCcsXG4gICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICBmb250U2l6ZTogJzc1JScsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgbWFyZ2luQm90dG9tOiAnMC4yNWVtJyxcbiAgICBwYWRkaW5nTGVmdDogc3BhY2luZy5iYXNlVW5pdCAqIDMsXG4gICAgcGFkZGluZ1JpZ2h0OiBzcGFjaW5nLmJhc2VVbml0ICogMyxcbiAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJ1xuICB9O1xufTtcbnZhciBHcm91cEhlYWRpbmcgPSBmdW5jdGlvbiBHcm91cEhlYWRpbmcocHJvcHMpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICB0aGVtZSA9IHByb3BzLnRoZW1lLFxuICAgICAgc2VsZWN0UHJvcHMgPSBwcm9wcy5zZWxlY3RQcm9wcyxcbiAgICAgIGNsZWFuUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSQxKHByb3BzLCBbXCJjbGFzc05hbWVcIiwgXCJjeFwiLCBcImdldFN0eWxlc1wiLCBcInRoZW1lXCIsIFwic2VsZWN0UHJvcHNcIl0pO1xuXG4gIHJldHVybiBqc3goXCJkaXZcIiwgX2V4dGVuZHMkNCh7XG4gICAgY3NzOiBnZXRTdHlsZXMoJ2dyb3VwSGVhZGluZycsIF9leHRlbmRzJDQoe1xuICAgICAgdGhlbWU6IHRoZW1lXG4gICAgfSwgY2xlYW5Qcm9wcykpLFxuICAgIGNsYXNzTmFtZTogY3goe1xuICAgICAgJ2dyb3VwLWhlYWRpbmcnOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBjbGVhblByb3BzKSk7XG59O1xuXG5mdW5jdGlvbiBfZXh0ZW5kcyQ1KCkgeyBfZXh0ZW5kcyQ1ID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSQyKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cbnZhciBpbnB1dENTUyA9IGZ1bmN0aW9uIGlucHV0Q1NTKF9yZWYpIHtcbiAgdmFyIGlzRGlzYWJsZWQgPSBfcmVmLmlzRGlzYWJsZWQsXG4gICAgICBfcmVmJHRoZW1lID0gX3JlZi50aGVtZSxcbiAgICAgIHNwYWNpbmcgPSBfcmVmJHRoZW1lLnNwYWNpbmcsXG4gICAgICBjb2xvcnMgPSBfcmVmJHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBtYXJnaW46IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBhZGRpbmdCb3R0b206IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBhZGRpbmdUb3A6IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHZpc2liaWxpdHk6IGlzRGlzYWJsZWQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJyxcbiAgICBjb2xvcjogY29sb3JzLm5ldXRyYWw4MFxuICB9O1xufTtcblxudmFyIGlucHV0U3R5bGUgPSBmdW5jdGlvbiBpbnB1dFN0eWxlKGlzSGlkZGVuKSB7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdpbnB1dCcsXG4gICAgYmFja2dyb3VuZDogMCxcbiAgICBib3JkZXI6IDAsXG4gICAgZm9udFNpemU6ICdpbmhlcml0JyxcbiAgICBvcGFjaXR5OiBpc0hpZGRlbiA/IDAgOiAxLFxuICAgIG91dGxpbmU6IDAsXG4gICAgcGFkZGluZzogMCxcbiAgICBjb2xvcjogJ2luaGVyaXQnXG4gIH07XG59O1xuXG52YXIgSW5wdXQgPSBmdW5jdGlvbiBJbnB1dChfcmVmMikge1xuICB2YXIgY2xhc3NOYW1lID0gX3JlZjIuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBfcmVmMi5jeCxcbiAgICAgIGdldFN0eWxlcyA9IF9yZWYyLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUmVmID0gX3JlZjIuaW5uZXJSZWYsXG4gICAgICBpc0hpZGRlbiA9IF9yZWYyLmlzSGlkZGVuLFxuICAgICAgaXNEaXNhYmxlZCA9IF9yZWYyLmlzRGlzYWJsZWQsXG4gICAgICB0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgc2VsZWN0UHJvcHMgPSBfcmVmMi5zZWxlY3RQcm9wcyxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UkMihfcmVmMiwgW1wiY2xhc3NOYW1lXCIsIFwiY3hcIiwgXCJnZXRTdHlsZXNcIiwgXCJpbm5lclJlZlwiLCBcImlzSGlkZGVuXCIsIFwiaXNEaXNhYmxlZFwiLCBcInRoZW1lXCIsIFwic2VsZWN0UHJvcHNcIl0pO1xuXG4gIHJldHVybiBqc3goXCJkaXZcIiwge1xuICAgIGNzczogZ2V0U3R5bGVzKCdpbnB1dCcsIF9leHRlbmRzJDUoe1xuICAgICAgdGhlbWU6IHRoZW1lXG4gICAgfSwgcHJvcHMpKVxuICB9LCBqc3goQXV0b3NpemVJbnB1dCwgX2V4dGVuZHMkNSh7XG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBpbnB1dDogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSksXG4gICAgaW5wdXRSZWY6IGlubmVyUmVmLFxuICAgIGlucHV0U3R5bGU6IGlucHV0U3R5bGUoaXNIaWRkZW4pLFxuICAgIGRpc2FibGVkOiBpc0Rpc2FibGVkXG4gIH0sIHByb3BzKSkpO1xufTtcblxuZnVuY3Rpb24gX2V4dGVuZHMkNigpIHsgX2V4dGVuZHMkNiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcyQ2LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cbnZhciBtdWx0aVZhbHVlQ1NTID0gZnVuY3Rpb24gbXVsdGlWYWx1ZUNTUyhfcmVmKSB7XG4gIHZhciBfcmVmJHRoZW1lID0gX3JlZi50aGVtZSxcbiAgICAgIHNwYWNpbmcgPSBfcmVmJHRoZW1lLnNwYWNpbmcsXG4gICAgICBib3JkZXJSYWRpdXMgPSBfcmVmJHRoZW1lLmJvcmRlclJhZGl1cyxcbiAgICAgIGNvbG9ycyA9IF9yZWYkdGhlbWUuY29sb3JzO1xuICByZXR1cm4ge1xuICAgIGxhYmVsOiAnbXVsdGlWYWx1ZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMubmV1dHJhbDEwLFxuICAgIGJvcmRlclJhZGl1czogYm9yZGVyUmFkaXVzIC8gMixcbiAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgbWFyZ2luOiBzcGFjaW5nLmJhc2VVbml0IC8gMixcbiAgICBtaW5XaWR0aDogMCAvLyByZXNvbHZlcyBmbGV4L3RleHQtb3ZlcmZsb3cgYnVnXG5cbiAgfTtcbn07XG52YXIgbXVsdGlWYWx1ZUxhYmVsQ1NTID0gZnVuY3Rpb24gbXVsdGlWYWx1ZUxhYmVsQ1NTKF9yZWYyKSB7XG4gIHZhciBfcmVmMiR0aGVtZSA9IF9yZWYyLnRoZW1lLFxuICAgICAgYm9yZGVyUmFkaXVzID0gX3JlZjIkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgY29sb3JzID0gX3JlZjIkdGhlbWUuY29sb3JzLFxuICAgICAgY3JvcFdpdGhFbGxpcHNpcyA9IF9yZWYyLmNyb3BXaXRoRWxsaXBzaXM7XG4gIHJldHVybiB7XG4gICAgYm9yZGVyUmFkaXVzOiBib3JkZXJSYWRpdXMgLyAyLFxuICAgIGNvbG9yOiBjb2xvcnMubmV1dHJhbDgwLFxuICAgIGZvbnRTaXplOiAnODUlJyxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgcGFkZGluZzogMyxcbiAgICBwYWRkaW5nTGVmdDogNixcbiAgICB0ZXh0T3ZlcmZsb3c6IGNyb3BXaXRoRWxsaXBzaXMgPyAnZWxsaXBzaXMnIDogbnVsbCxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJ1xuICB9O1xufTtcbnZhciBtdWx0aVZhbHVlUmVtb3ZlQ1NTID0gZnVuY3Rpb24gbXVsdGlWYWx1ZVJlbW92ZUNTUyhfcmVmMykge1xuICB2YXIgX3JlZjMkdGhlbWUgPSBfcmVmMy50aGVtZSxcbiAgICAgIHNwYWNpbmcgPSBfcmVmMyR0aGVtZS5zcGFjaW5nLFxuICAgICAgYm9yZGVyUmFkaXVzID0gX3JlZjMkdGhlbWUuYm9yZGVyUmFkaXVzLFxuICAgICAgY29sb3JzID0gX3JlZjMkdGhlbWUuY29sb3JzLFxuICAgICAgaXNGb2N1c2VkID0gX3JlZjMuaXNGb2N1c2VkO1xuICByZXR1cm4ge1xuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgIGJvcmRlclJhZGl1czogYm9yZGVyUmFkaXVzIC8gMixcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzRm9jdXNlZCAmJiBjb2xvcnMuZGFuZ2VyTGlnaHQsXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgIHBhZGRpbmdMZWZ0OiBzcGFjaW5nLmJhc2VVbml0LFxuICAgIHBhZGRpbmdSaWdodDogc3BhY2luZy5iYXNlVW5pdCxcbiAgICAnOmhvdmVyJzoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuZGFuZ2VyTGlnaHQsXG4gICAgICBjb2xvcjogY29sb3JzLmRhbmdlclxuICAgIH1cbiAgfTtcbn07XG52YXIgTXVsdGlWYWx1ZUdlbmVyaWMgPSBmdW5jdGlvbiBNdWx0aVZhbHVlR2VuZXJpYyhfcmVmNCkge1xuICB2YXIgY2hpbGRyZW4gPSBfcmVmNC5jaGlsZHJlbixcbiAgICAgIGlubmVyUHJvcHMgPSBfcmVmNC5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIGlubmVyUHJvcHMsIGNoaWxkcmVuKTtcbn07XG52YXIgTXVsdGlWYWx1ZUNvbnRhaW5lciA9IE11bHRpVmFsdWVHZW5lcmljO1xudmFyIE11bHRpVmFsdWVMYWJlbCA9IE11bHRpVmFsdWVHZW5lcmljO1xuZnVuY3Rpb24gTXVsdGlWYWx1ZVJlbW92ZShfcmVmNSkge1xuICB2YXIgY2hpbGRyZW4gPSBfcmVmNS5jaGlsZHJlbixcbiAgICAgIGlubmVyUHJvcHMgPSBfcmVmNS5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIGlubmVyUHJvcHMsIGNoaWxkcmVuIHx8IGpzeChDcm9zc0ljb24sIHtcbiAgICBzaXplOiAxNFxuICB9KSk7XG59XG5cbnZhciBNdWx0aVZhbHVlID0gZnVuY3Rpb24gTXVsdGlWYWx1ZShwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGNvbXBvbmVudHMgPSBwcm9wcy5jb21wb25lbnRzLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGRhdGEgPSBwcm9wcy5kYXRhLFxuICAgICAgZ2V0U3R5bGVzID0gcHJvcHMuZ2V0U3R5bGVzLFxuICAgICAgaW5uZXJQcm9wcyA9IHByb3BzLmlubmVyUHJvcHMsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIHJlbW92ZVByb3BzID0gcHJvcHMucmVtb3ZlUHJvcHMsXG4gICAgICBzZWxlY3RQcm9wcyA9IHByb3BzLnNlbGVjdFByb3BzO1xuICB2YXIgQ29udGFpbmVyID0gY29tcG9uZW50cy5Db250YWluZXIsXG4gICAgICBMYWJlbCA9IGNvbXBvbmVudHMuTGFiZWwsXG4gICAgICBSZW1vdmUgPSBjb21wb25lbnRzLlJlbW92ZTtcbiAgcmV0dXJuIGpzeChDbGFzc05hbWVzLCBudWxsLCBmdW5jdGlvbiAoX3JlZjYpIHtcbiAgICB2YXIgY3NzID0gX3JlZjYuY3NzLFxuICAgICAgICBlbW90aW9uQ3ggPSBfcmVmNi5jeDtcbiAgICByZXR1cm4ganN4KENvbnRhaW5lciwge1xuICAgICAgZGF0YTogZGF0YSxcbiAgICAgIGlubmVyUHJvcHM6IF9leHRlbmRzJDYoe30sIGlubmVyUHJvcHMsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBlbW90aW9uQ3goY3NzKGdldFN0eWxlcygnbXVsdGlWYWx1ZScsIHByb3BzKSksIGN4KHtcbiAgICAgICAgICAnbXVsdGktdmFsdWUnOiB0cnVlLFxuICAgICAgICAgICdtdWx0aS12YWx1ZS0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkXG4gICAgICAgIH0sIGNsYXNzTmFtZSkpXG4gICAgICB9KSxcbiAgICAgIHNlbGVjdFByb3BzOiBzZWxlY3RQcm9wc1xuICAgIH0sIGpzeChMYWJlbCwge1xuICAgICAgZGF0YTogZGF0YSxcbiAgICAgIGlubmVyUHJvcHM6IHtcbiAgICAgICAgY2xhc3NOYW1lOiBlbW90aW9uQ3goY3NzKGdldFN0eWxlcygnbXVsdGlWYWx1ZUxhYmVsJywgcHJvcHMpKSwgY3goe1xuICAgICAgICAgICdtdWx0aS12YWx1ZV9fbGFiZWwnOiB0cnVlXG4gICAgICAgIH0sIGNsYXNzTmFtZSkpXG4gICAgICB9LFxuICAgICAgc2VsZWN0UHJvcHM6IHNlbGVjdFByb3BzXG4gICAgfSwgY2hpbGRyZW4pLCBqc3goUmVtb3ZlLCB7XG4gICAgICBkYXRhOiBkYXRhLFxuICAgICAgaW5uZXJQcm9wczogX2V4dGVuZHMkNih7XG4gICAgICAgIGNsYXNzTmFtZTogZW1vdGlvbkN4KGNzcyhnZXRTdHlsZXMoJ211bHRpVmFsdWVSZW1vdmUnLCBwcm9wcykpLCBjeCh7XG4gICAgICAgICAgJ211bHRpLXZhbHVlX19yZW1vdmUnOiB0cnVlXG4gICAgICAgIH0sIGNsYXNzTmFtZSkpXG4gICAgICB9LCByZW1vdmVQcm9wcyksXG4gICAgICBzZWxlY3RQcm9wczogc2VsZWN0UHJvcHNcbiAgICB9KSk7XG4gIH0pO1xufTtcblxuTXVsdGlWYWx1ZS5kZWZhdWx0UHJvcHMgPSB7XG4gIGNyb3BXaXRoRWxsaXBzaXM6IHRydWVcbn07XG5cbmZ1bmN0aW9uIF9leHRlbmRzJDcoKSB7IF9leHRlbmRzJDcgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMkNy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG52YXIgb3B0aW9uQ1NTID0gZnVuY3Rpb24gb3B0aW9uQ1NTKF9yZWYpIHtcbiAgdmFyIGlzRGlzYWJsZWQgPSBfcmVmLmlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQgPSBfcmVmLmlzRm9jdXNlZCxcbiAgICAgIGlzU2VsZWN0ZWQgPSBfcmVmLmlzU2VsZWN0ZWQsXG4gICAgICBfcmVmJHRoZW1lID0gX3JlZi50aGVtZSxcbiAgICAgIHNwYWNpbmcgPSBfcmVmJHRoZW1lLnNwYWNpbmcsXG4gICAgICBjb2xvcnMgPSBfcmVmJHRoZW1lLmNvbG9ycztcbiAgcmV0dXJuIHtcbiAgICBsYWJlbDogJ29wdGlvbicsXG4gICAgYmFja2dyb3VuZENvbG9yOiBpc1NlbGVjdGVkID8gY29sb3JzLnByaW1hcnkgOiBpc0ZvY3VzZWQgPyBjb2xvcnMucHJpbWFyeTI1IDogJ3RyYW5zcGFyZW50JyxcbiAgICBjb2xvcjogaXNEaXNhYmxlZCA/IGNvbG9ycy5uZXV0cmFsMjAgOiBpc1NlbGVjdGVkID8gY29sb3JzLm5ldXRyYWwwIDogJ2luaGVyaXQnLFxuICAgIGN1cnNvcjogJ2RlZmF1bHQnLFxuICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgZm9udFNpemU6ICdpbmhlcml0JyxcbiAgICBwYWRkaW5nOiBzcGFjaW5nLmJhc2VVbml0ICogMiArIFwicHggXCIgKyBzcGFjaW5nLmJhc2VVbml0ICogMyArIFwicHhcIixcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICBXZWJraXRUYXBIaWdobGlnaHRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMCknLFxuICAgIC8vIHByb3ZpZGUgc29tZSBhZmZvcmRhbmNlIG9uIHRvdWNoIGRldmljZXNcbiAgICAnOmFjdGl2ZSc6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogIWlzRGlzYWJsZWQgJiYgKGlzU2VsZWN0ZWQgPyBjb2xvcnMucHJpbWFyeSA6IGNvbG9ycy5wcmltYXJ5NTApXG4gICAgfVxuICB9O1xufTtcblxudmFyIE9wdGlvbiA9IGZ1bmN0aW9uIE9wdGlvbihwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZCA9IHByb3BzLmlzRm9jdXNlZCxcbiAgICAgIGlzU2VsZWN0ZWQgPSBwcm9wcy5pc1NlbGVjdGVkLFxuICAgICAgaW5uZXJSZWYgPSBwcm9wcy5pbm5lclJlZixcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzJDcoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdvcHRpb24nLCBwcm9wcyksXG4gICAgY2xhc3NOYW1lOiBjeCh7XG4gICAgICBvcHRpb246IHRydWUsXG4gICAgICAnb3B0aW9uLS1pcy1kaXNhYmxlZCc6IGlzRGlzYWJsZWQsXG4gICAgICAnb3B0aW9uLS1pcy1mb2N1c2VkJzogaXNGb2N1c2VkLFxuICAgICAgJ29wdGlvbi0taXMtc2VsZWN0ZWQnOiBpc1NlbGVjdGVkXG4gICAgfSwgY2xhc3NOYW1lKSxcbiAgICByZWY6IGlubmVyUmVmXG4gIH0sIGlubmVyUHJvcHMpLCBjaGlsZHJlbik7XG59O1xuXG5mdW5jdGlvbiBfZXh0ZW5kcyQ4KCkgeyBfZXh0ZW5kcyQ4ID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDguYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxudmFyIHBsYWNlaG9sZGVyQ1NTID0gZnVuY3Rpb24gcGxhY2Vob2xkZXJDU1MoX3JlZikge1xuICB2YXIgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBzcGFjaW5nID0gX3JlZiR0aGVtZS5zcGFjaW5nLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdwbGFjZWhvbGRlcicsXG4gICAgY29sb3I6IGNvbG9ycy5uZXV0cmFsNTAsXG4gICAgbWFyZ2luTGVmdDogc3BhY2luZy5iYXNlVW5pdCAvIDIsXG4gICAgbWFyZ2luUmlnaHQ6IHNwYWNpbmcuYmFzZVVuaXQgLyAyLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogJzUwJScsXG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNTAlKSdcbiAgfTtcbn07XG5cbnZhciBQbGFjZWhvbGRlciA9IGZ1bmN0aW9uIFBsYWNlaG9sZGVyKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgY2xhc3NOYW1lID0gcHJvcHMuY2xhc3NOYW1lLFxuICAgICAgY3ggPSBwcm9wcy5jeCxcbiAgICAgIGdldFN0eWxlcyA9IHByb3BzLmdldFN0eWxlcyxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzJDgoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdwbGFjZWhvbGRlcicsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgIHBsYWNlaG9sZGVyOiB0cnVlXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxuZnVuY3Rpb24gX2V4dGVuZHMkOSgpIHsgX2V4dGVuZHMkOSA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcyQ5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cbnZhciBjc3MkMSA9IGZ1bmN0aW9uIGNzcyhfcmVmKSB7XG4gIHZhciBpc0Rpc2FibGVkID0gX3JlZi5pc0Rpc2FibGVkLFxuICAgICAgX3JlZiR0aGVtZSA9IF9yZWYudGhlbWUsXG4gICAgICBzcGFjaW5nID0gX3JlZiR0aGVtZS5zcGFjaW5nLFxuICAgICAgY29sb3JzID0gX3JlZiR0aGVtZS5jb2xvcnM7XG4gIHJldHVybiB7XG4gICAgbGFiZWw6ICdzaW5nbGVWYWx1ZScsXG4gICAgY29sb3I6IGlzRGlzYWJsZWQgPyBjb2xvcnMubmV1dHJhbDQwIDogY29sb3JzLm5ldXRyYWw4MCxcbiAgICBtYXJnaW5MZWZ0OiBzcGFjaW5nLmJhc2VVbml0IC8gMixcbiAgICBtYXJnaW5SaWdodDogc3BhY2luZy5iYXNlVW5pdCAvIDIsXG4gICAgbWF4V2lkdGg6IFwiY2FsYygxMDAlIC0gXCIgKyBzcGFjaW5nLmJhc2VVbml0ICogMiArIFwicHgpXCIsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRleHRPdmVyZmxvdzogJ2VsbGlwc2lzJyxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICB0b3A6ICc1MCUnLFxuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTUwJSknXG4gIH07XG59O1xuXG52YXIgU2luZ2xlVmFsdWUgPSBmdW5jdGlvbiBTaW5nbGVWYWx1ZShwcm9wcykge1xuICB2YXIgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICAgIGN4ID0gcHJvcHMuY3gsXG4gICAgICBnZXRTdHlsZXMgPSBwcm9wcy5nZXRTdHlsZXMsXG4gICAgICBpc0Rpc2FibGVkID0gcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgIGlubmVyUHJvcHMgPSBwcm9wcy5pbm5lclByb3BzO1xuICByZXR1cm4ganN4KFwiZGl2XCIsIF9leHRlbmRzJDkoe1xuICAgIGNzczogZ2V0U3R5bGVzKCdzaW5nbGVWYWx1ZScsIHByb3BzKSxcbiAgICBjbGFzc05hbWU6IGN4KHtcbiAgICAgICdzaW5nbGUtdmFsdWUnOiB0cnVlLFxuICAgICAgJ3NpbmdsZS12YWx1ZS0taXMtZGlzYWJsZWQnOiBpc0Rpc2FibGVkXG4gICAgfSwgY2xhc3NOYW1lKVxuICB9LCBpbm5lclByb3BzKSwgY2hpbGRyZW4pO1xufTtcblxuZnVuY3Rpb24gX2V4dGVuZHMkYSgpIHsgX2V4dGVuZHMkYSA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcyRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cbnZhciBjb21wb25lbnRzID0ge1xuICBDbGVhckluZGljYXRvcjogQ2xlYXJJbmRpY2F0b3IsXG4gIENvbnRyb2w6IENvbnRyb2wsXG4gIERyb3Bkb3duSW5kaWNhdG9yOiBEcm9wZG93bkluZGljYXRvcixcbiAgRG93bkNoZXZyb246IERvd25DaGV2cm9uLFxuICBDcm9zc0ljb246IENyb3NzSWNvbixcbiAgR3JvdXA6IEdyb3VwLFxuICBHcm91cEhlYWRpbmc6IEdyb3VwSGVhZGluZyxcbiAgSW5kaWNhdG9yc0NvbnRhaW5lcjogSW5kaWNhdG9yc0NvbnRhaW5lcixcbiAgSW5kaWNhdG9yU2VwYXJhdG9yOiBJbmRpY2F0b3JTZXBhcmF0b3IsXG4gIElucHV0OiBJbnB1dCxcbiAgTG9hZGluZ0luZGljYXRvcjogTG9hZGluZ0luZGljYXRvcixcbiAgTWVudTogTWVudSxcbiAgTWVudUxpc3Q6IE1lbnVMaXN0LFxuICBNZW51UG9ydGFsOiBNZW51UG9ydGFsLFxuICBMb2FkaW5nTWVzc2FnZTogTG9hZGluZ01lc3NhZ2UsXG4gIE5vT3B0aW9uc01lc3NhZ2U6IE5vT3B0aW9uc01lc3NhZ2UsXG4gIE11bHRpVmFsdWU6IE11bHRpVmFsdWUsXG4gIE11bHRpVmFsdWVDb250YWluZXI6IE11bHRpVmFsdWVDb250YWluZXIsXG4gIE11bHRpVmFsdWVMYWJlbDogTXVsdGlWYWx1ZUxhYmVsLFxuICBNdWx0aVZhbHVlUmVtb3ZlOiBNdWx0aVZhbHVlUmVtb3ZlLFxuICBPcHRpb246IE9wdGlvbixcbiAgUGxhY2Vob2xkZXI6IFBsYWNlaG9sZGVyLFxuICBTZWxlY3RDb250YWluZXI6IFNlbGVjdENvbnRhaW5lcixcbiAgU2luZ2xlVmFsdWU6IFNpbmdsZVZhbHVlLFxuICBWYWx1ZUNvbnRhaW5lcjogVmFsdWVDb250YWluZXJcbn07XG52YXIgZGVmYXVsdENvbXBvbmVudHMgPSBmdW5jdGlvbiBkZWZhdWx0Q29tcG9uZW50cyhwcm9wcykge1xuICByZXR1cm4gX2V4dGVuZHMkYSh7fSwgY29tcG9uZW50cywgcHJvcHMuY29tcG9uZW50cyk7XG59O1xuXG5leHBvcnQgeyBNZW51UGxhY2VyIGFzIE0sIGNvbnRhaW5lckNTUyBhcyBhLCBjc3MgYXMgYiwgY2xlYXJJbmRpY2F0b3JDU1MgYXMgYywgZHJvcGRvd25JbmRpY2F0b3JDU1MgYXMgZCwgZ3JvdXBIZWFkaW5nQ1NTIGFzIGUsIGluZGljYXRvclNlcGFyYXRvckNTUyBhcyBmLCBncm91cENTUyBhcyBnLCBpbnB1dENTUyBhcyBoLCBpbmRpY2F0b3JzQ29udGFpbmVyQ1NTIGFzIGksIGxvYWRpbmdNZXNzYWdlQ1NTIGFzIGosIG1lbnVMaXN0Q1NTIGFzIGssIGxvYWRpbmdJbmRpY2F0b3JDU1MgYXMgbCwgbWVudUNTUyBhcyBtLCBtZW51UG9ydGFsQ1NTIGFzIG4sIG11bHRpVmFsdWVDU1MgYXMgbywgbXVsdGlWYWx1ZUxhYmVsQ1NTIGFzIHAsIG11bHRpVmFsdWVSZW1vdmVDU1MgYXMgcSwgbm9PcHRpb25zTWVzc2FnZUNTUyBhcyByLCBvcHRpb25DU1MgYXMgcywgcGxhY2Vob2xkZXJDU1MgYXMgdCwgY3NzJDEgYXMgdSwgdmFsdWVDb250YWluZXJDU1MgYXMgdiwgZGVmYXVsdENvbXBvbmVudHMgYXMgdywgZXhwb3J0ZWRFcXVhbCBhcyB4LCBjb21wb25lbnRzIGFzIHkgfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbWVtb2l6ZU9uZSBmcm9tICdtZW1vaXplLW9uZSc7XG5pbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCB7IGZpbmRET01Ob2RlIH0gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCB7IGkgYXMgaXNUb3VjaENhcGFibGUsIGQgYXMgaXNNb2JpbGVEZXZpY2UsIGUgYXMgY2xlYW5WYWx1ZSwgZiBhcyBzY3JvbGxJbnRvVmlldywgaCBhcyBjbGFzc05hbWVzLCBuIGFzIG5vb3AsIGogYXMgaXNEb2N1bWVudEVsZW1lbnQgfSBmcm9tICcuL3V0aWxzLTA2YjBkNWE0LmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCB7IGMgYXMgY2xlYXJJbmRpY2F0b3JDU1MsIGEgYXMgY29udGFpbmVyQ1NTLCBiIGFzIGNzcywgZCBhcyBkcm9wZG93bkluZGljYXRvckNTUywgZyBhcyBncm91cENTUywgZSBhcyBncm91cEhlYWRpbmdDU1MsIGkgYXMgaW5kaWNhdG9yc0NvbnRhaW5lckNTUywgZiBhcyBpbmRpY2F0b3JTZXBhcmF0b3JDU1MsIGggYXMgaW5wdXRDU1MsIGwgYXMgbG9hZGluZ0luZGljYXRvckNTUywgaiBhcyBsb2FkaW5nTWVzc2FnZUNTUywgbSBhcyBtZW51Q1NTLCBrIGFzIG1lbnVMaXN0Q1NTLCBuIGFzIG1lbnVQb3J0YWxDU1MsIG8gYXMgbXVsdGlWYWx1ZUNTUywgcCBhcyBtdWx0aVZhbHVlTGFiZWxDU1MsIHEgYXMgbXVsdGlWYWx1ZVJlbW92ZUNTUywgciBhcyBub09wdGlvbnNNZXNzYWdlQ1NTLCBzIGFzIG9wdGlvbkNTUywgdCBhcyBwbGFjZWhvbGRlckNTUywgdSBhcyBjc3MkMSwgdiBhcyB2YWx1ZUNvbnRhaW5lckNTUywgTSBhcyBNZW51UGxhY2VyLCB3IGFzIGRlZmF1bHRDb21wb25lbnRzLCB4IGFzIGV4cG9ydGVkRXF1YWwgfSBmcm9tICcuL2luZGV4LTQzMjJjMGVkLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBfY3NzIGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5cbnZhciBkaWFjcml0aWNzID0gW3tcbiAgYmFzZTogJ0EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDFcXHUyNEI2XFx1RkYyMVxcdTAwQzBcXHUwMEMxXFx1MDBDMlxcdTFFQTZcXHUxRUE0XFx1MUVBQVxcdTFFQThcXHUwMEMzXFx1MDEwMFxcdTAxMDJcXHUxRUIwXFx1MUVBRVxcdTFFQjRcXHUxRUIyXFx1MDIyNlxcdTAxRTBcXHUwMEM0XFx1MDFERVxcdTFFQTJcXHUwMEM1XFx1MDFGQVxcdTAxQ0RcXHUwMjAwXFx1MDIwMlxcdTFFQTBcXHUxRUFDXFx1MUVCNlxcdTFFMDBcXHUwMTA0XFx1MDIzQVxcdTJDNkZdL2dcbn0sIHtcbiAgYmFzZTogJ0FBJyxcbiAgbGV0dGVyczogL1tcXHVBNzMyXS9nXG59LCB7XG4gIGJhc2U6ICdBRScsXG4gIGxldHRlcnM6IC9bXFx1MDBDNlxcdTAxRkNcXHUwMUUyXS9nXG59LCB7XG4gIGJhc2U6ICdBTycsXG4gIGxldHRlcnM6IC9bXFx1QTczNF0vZ1xufSwge1xuICBiYXNlOiAnQVUnLFxuICBsZXR0ZXJzOiAvW1xcdUE3MzZdL2dcbn0sIHtcbiAgYmFzZTogJ0FWJyxcbiAgbGV0dGVyczogL1tcXHVBNzM4XFx1QTczQV0vZ1xufSwge1xuICBiYXNlOiAnQVknLFxuICBsZXR0ZXJzOiAvW1xcdUE3M0NdL2dcbn0sIHtcbiAgYmFzZTogJ0InLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDJcXHUyNEI3XFx1RkYyMlxcdTFFMDJcXHUxRTA0XFx1MUUwNlxcdTAyNDNcXHUwMTgyXFx1MDE4MV0vZ1xufSwge1xuICBiYXNlOiAnQycsXG4gIGxldHRlcnM6IC9bXFx1MDA0M1xcdTI0QjhcXHVGRjIzXFx1MDEwNlxcdTAxMDhcXHUwMTBBXFx1MDEwQ1xcdTAwQzdcXHUxRTA4XFx1MDE4N1xcdTAyM0JcXHVBNzNFXS9nXG59LCB7XG4gIGJhc2U6ICdEJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ0XFx1MjRCOVxcdUZGMjRcXHUxRTBBXFx1MDEwRVxcdTFFMENcXHUxRTEwXFx1MUUxMlxcdTFFMEVcXHUwMTEwXFx1MDE4QlxcdTAxOEFcXHUwMTg5XFx1QTc3OV0vZ1xufSwge1xuICBiYXNlOiAnRFonLFxuICBsZXR0ZXJzOiAvW1xcdTAxRjFcXHUwMUM0XS9nXG59LCB7XG4gIGJhc2U6ICdEeicsXG4gIGxldHRlcnM6IC9bXFx1MDFGMlxcdTAxQzVdL2dcbn0sIHtcbiAgYmFzZTogJ0UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDVcXHUyNEJBXFx1RkYyNVxcdTAwQzhcXHUwMEM5XFx1MDBDQVxcdTFFQzBcXHUxRUJFXFx1MUVDNFxcdTFFQzJcXHUxRUJDXFx1MDExMlxcdTFFMTRcXHUxRTE2XFx1MDExNFxcdTAxMTZcXHUwMENCXFx1MUVCQVxcdTAxMUFcXHUwMjA0XFx1MDIwNlxcdTFFQjhcXHUxRUM2XFx1MDIyOFxcdTFFMUNcXHUwMTE4XFx1MUUxOFxcdTFFMUFcXHUwMTkwXFx1MDE4RV0vZ1xufSwge1xuICBiYXNlOiAnRicsXG4gIGxldHRlcnM6IC9bXFx1MDA0NlxcdTI0QkJcXHVGRjI2XFx1MUUxRVxcdTAxOTFcXHVBNzdCXS9nXG59LCB7XG4gIGJhc2U6ICdHJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ3XFx1MjRCQ1xcdUZGMjdcXHUwMUY0XFx1MDExQ1xcdTFFMjBcXHUwMTFFXFx1MDEyMFxcdTAxRTZcXHUwMTIyXFx1MDFFNFxcdTAxOTNcXHVBN0EwXFx1QTc3RFxcdUE3N0VdL2dcbn0sIHtcbiAgYmFzZTogJ0gnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNDhcXHUyNEJEXFx1RkYyOFxcdTAxMjRcXHUxRTIyXFx1MUUyNlxcdTAyMUVcXHUxRTI0XFx1MUUyOFxcdTFFMkFcXHUwMTI2XFx1MkM2N1xcdTJDNzVcXHVBNzhEXS9nXG59LCB7XG4gIGJhc2U6ICdJJyxcbiAgbGV0dGVyczogL1tcXHUwMDQ5XFx1MjRCRVxcdUZGMjlcXHUwMENDXFx1MDBDRFxcdTAwQ0VcXHUwMTI4XFx1MDEyQVxcdTAxMkNcXHUwMTMwXFx1MDBDRlxcdTFFMkVcXHUxRUM4XFx1MDFDRlxcdTAyMDhcXHUwMjBBXFx1MUVDQVxcdTAxMkVcXHUxRTJDXFx1MDE5N10vZ1xufSwge1xuICBiYXNlOiAnSicsXG4gIGxldHRlcnM6IC9bXFx1MDA0QVxcdTI0QkZcXHVGRjJBXFx1MDEzNFxcdTAyNDhdL2dcbn0sIHtcbiAgYmFzZTogJ0snLFxuICBsZXR0ZXJzOiAvW1xcdTAwNEJcXHUyNEMwXFx1RkYyQlxcdTFFMzBcXHUwMUU4XFx1MUUzMlxcdTAxMzZcXHUxRTM0XFx1MDE5OFxcdTJDNjlcXHVBNzQwXFx1QTc0MlxcdUE3NDRcXHVBN0EyXS9nXG59LCB7XG4gIGJhc2U6ICdMJyxcbiAgbGV0dGVyczogL1tcXHUwMDRDXFx1MjRDMVxcdUZGMkNcXHUwMTNGXFx1MDEzOVxcdTAxM0RcXHUxRTM2XFx1MUUzOFxcdTAxM0JcXHUxRTNDXFx1MUUzQVxcdTAxNDFcXHUwMjNEXFx1MkM2MlxcdTJDNjBcXHVBNzQ4XFx1QTc0NlxcdUE3ODBdL2dcbn0sIHtcbiAgYmFzZTogJ0xKJyxcbiAgbGV0dGVyczogL1tcXHUwMUM3XS9nXG59LCB7XG4gIGJhc2U6ICdMaicsXG4gIGxldHRlcnM6IC9bXFx1MDFDOF0vZ1xufSwge1xuICBiYXNlOiAnTScsXG4gIGxldHRlcnM6IC9bXFx1MDA0RFxcdTI0QzJcXHVGRjJEXFx1MUUzRVxcdTFFNDBcXHUxRTQyXFx1MkM2RVxcdTAxOUNdL2dcbn0sIHtcbiAgYmFzZTogJ04nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNEVcXHUyNEMzXFx1RkYyRVxcdTAxRjhcXHUwMTQzXFx1MDBEMVxcdTFFNDRcXHUwMTQ3XFx1MUU0NlxcdTAxNDVcXHUxRTRBXFx1MUU0OFxcdTAyMjBcXHUwMTlEXFx1QTc5MFxcdUE3QTRdL2dcbn0sIHtcbiAgYmFzZTogJ05KJyxcbiAgbGV0dGVyczogL1tcXHUwMUNBXS9nXG59LCB7XG4gIGJhc2U6ICdOaicsXG4gIGxldHRlcnM6IC9bXFx1MDFDQl0vZ1xufSwge1xuICBiYXNlOiAnTycsXG4gIGxldHRlcnM6IC9bXFx1MDA0RlxcdTI0QzRcXHVGRjJGXFx1MDBEMlxcdTAwRDNcXHUwMEQ0XFx1MUVEMlxcdTFFRDBcXHUxRUQ2XFx1MUVENFxcdTAwRDVcXHUxRTRDXFx1MDIyQ1xcdTFFNEVcXHUwMTRDXFx1MUU1MFxcdTFFNTJcXHUwMTRFXFx1MDIyRVxcdTAyMzBcXHUwMEQ2XFx1MDIyQVxcdTFFQ0VcXHUwMTUwXFx1MDFEMVxcdTAyMENcXHUwMjBFXFx1MDFBMFxcdTFFRENcXHUxRURBXFx1MUVFMFxcdTFFREVcXHUxRUUyXFx1MUVDQ1xcdTFFRDhcXHUwMUVBXFx1MDFFQ1xcdTAwRDhcXHUwMUZFXFx1MDE4NlxcdTAxOUZcXHVBNzRBXFx1QTc0Q10vZ1xufSwge1xuICBiYXNlOiAnT0knLFxuICBsZXR0ZXJzOiAvW1xcdTAxQTJdL2dcbn0sIHtcbiAgYmFzZTogJ09PJyxcbiAgbGV0dGVyczogL1tcXHVBNzRFXS9nXG59LCB7XG4gIGJhc2U6ICdPVScsXG4gIGxldHRlcnM6IC9bXFx1MDIyMl0vZ1xufSwge1xuICBiYXNlOiAnUCcsXG4gIGxldHRlcnM6IC9bXFx1MDA1MFxcdTI0QzVcXHVGRjMwXFx1MUU1NFxcdTFFNTZcXHUwMUE0XFx1MkM2M1xcdUE3NTBcXHVBNzUyXFx1QTc1NF0vZ1xufSwge1xuICBiYXNlOiAnUScsXG4gIGxldHRlcnM6IC9bXFx1MDA1MVxcdTI0QzZcXHVGRjMxXFx1QTc1NlxcdUE3NThcXHUwMjRBXS9nXG59LCB7XG4gIGJhc2U6ICdSJyxcbiAgbGV0dGVyczogL1tcXHUwMDUyXFx1MjRDN1xcdUZGMzJcXHUwMTU0XFx1MUU1OFxcdTAxNThcXHUwMjEwXFx1MDIxMlxcdTFFNUFcXHUxRTVDXFx1MDE1NlxcdTFFNUVcXHUwMjRDXFx1MkM2NFxcdUE3NUFcXHVBN0E2XFx1QTc4Ml0vZ1xufSwge1xuICBiYXNlOiAnUycsXG4gIGxldHRlcnM6IC9bXFx1MDA1M1xcdTI0QzhcXHVGRjMzXFx1MUU5RVxcdTAxNUFcXHUxRTY0XFx1MDE1Q1xcdTFFNjBcXHUwMTYwXFx1MUU2NlxcdTFFNjJcXHUxRTY4XFx1MDIxOFxcdTAxNUVcXHUyQzdFXFx1QTdBOFxcdUE3ODRdL2dcbn0sIHtcbiAgYmFzZTogJ1QnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTRcXHUyNEM5XFx1RkYzNFxcdTFFNkFcXHUwMTY0XFx1MUU2Q1xcdTAyMUFcXHUwMTYyXFx1MUU3MFxcdTFFNkVcXHUwMTY2XFx1MDFBQ1xcdTAxQUVcXHUwMjNFXFx1QTc4Nl0vZ1xufSwge1xuICBiYXNlOiAnVFonLFxuICBsZXR0ZXJzOiAvW1xcdUE3MjhdL2dcbn0sIHtcbiAgYmFzZTogJ1UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTVcXHUyNENBXFx1RkYzNVxcdTAwRDlcXHUwMERBXFx1MDBEQlxcdTAxNjhcXHUxRTc4XFx1MDE2QVxcdTFFN0FcXHUwMTZDXFx1MDBEQ1xcdTAxREJcXHUwMUQ3XFx1MDFENVxcdTAxRDlcXHUxRUU2XFx1MDE2RVxcdTAxNzBcXHUwMUQzXFx1MDIxNFxcdTAyMTZcXHUwMUFGXFx1MUVFQVxcdTFFRThcXHUxRUVFXFx1MUVFQ1xcdTFFRjBcXHUxRUU0XFx1MUU3MlxcdTAxNzJcXHUxRTc2XFx1MUU3NFxcdTAyNDRdL2dcbn0sIHtcbiAgYmFzZTogJ1YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTZcXHUyNENCXFx1RkYzNlxcdTFFN0NcXHUxRTdFXFx1MDFCMlxcdUE3NUVcXHUwMjQ1XS9nXG59LCB7XG4gIGJhc2U6ICdWWScsXG4gIGxldHRlcnM6IC9bXFx1QTc2MF0vZ1xufSwge1xuICBiYXNlOiAnVycsXG4gIGxldHRlcnM6IC9bXFx1MDA1N1xcdTI0Q0NcXHVGRjM3XFx1MUU4MFxcdTFFODJcXHUwMTc0XFx1MUU4NlxcdTFFODRcXHUxRTg4XFx1MkM3Ml0vZ1xufSwge1xuICBiYXNlOiAnWCcsXG4gIGxldHRlcnM6IC9bXFx1MDA1OFxcdTI0Q0RcXHVGRjM4XFx1MUU4QVxcdTFFOENdL2dcbn0sIHtcbiAgYmFzZTogJ1knLFxuICBsZXR0ZXJzOiAvW1xcdTAwNTlcXHUyNENFXFx1RkYzOVxcdTFFRjJcXHUwMEREXFx1MDE3NlxcdTFFRjhcXHUwMjMyXFx1MUU4RVxcdTAxNzhcXHUxRUY2XFx1MUVGNFxcdTAxQjNcXHUwMjRFXFx1MUVGRV0vZ1xufSwge1xuICBiYXNlOiAnWicsXG4gIGxldHRlcnM6IC9bXFx1MDA1QVxcdTI0Q0ZcXHVGRjNBXFx1MDE3OVxcdTFFOTBcXHUwMTdCXFx1MDE3RFxcdTFFOTJcXHUxRTk0XFx1MDFCNVxcdTAyMjRcXHUyQzdGXFx1MkM2QlxcdUE3NjJdL2dcbn0sIHtcbiAgYmFzZTogJ2EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjFcXHUyNEQwXFx1RkY0MVxcdTFFOUFcXHUwMEUwXFx1MDBFMVxcdTAwRTJcXHUxRUE3XFx1MUVBNVxcdTFFQUJcXHUxRUE5XFx1MDBFM1xcdTAxMDFcXHUwMTAzXFx1MUVCMVxcdTFFQUZcXHUxRUI1XFx1MUVCM1xcdTAyMjdcXHUwMUUxXFx1MDBFNFxcdTAxREZcXHUxRUEzXFx1MDBFNVxcdTAxRkJcXHUwMUNFXFx1MDIwMVxcdTAyMDNcXHUxRUExXFx1MUVBRFxcdTFFQjdcXHUxRTAxXFx1MDEwNVxcdTJDNjVcXHUwMjUwXS9nXG59LCB7XG4gIGJhc2U6ICdhYScsXG4gIGxldHRlcnM6IC9bXFx1QTczM10vZ1xufSwge1xuICBiYXNlOiAnYWUnLFxuICBsZXR0ZXJzOiAvW1xcdTAwRTZcXHUwMUZEXFx1MDFFM10vZ1xufSwge1xuICBiYXNlOiAnYW8nLFxuICBsZXR0ZXJzOiAvW1xcdUE3MzVdL2dcbn0sIHtcbiAgYmFzZTogJ2F1JyxcbiAgbGV0dGVyczogL1tcXHVBNzM3XS9nXG59LCB7XG4gIGJhc2U6ICdhdicsXG4gIGxldHRlcnM6IC9bXFx1QTczOVxcdUE3M0JdL2dcbn0sIHtcbiAgYmFzZTogJ2F5JyxcbiAgbGV0dGVyczogL1tcXHVBNzNEXS9nXG59LCB7XG4gIGJhc2U6ICdiJyxcbiAgbGV0dGVyczogL1tcXHUwMDYyXFx1MjREMVxcdUZGNDJcXHUxRTAzXFx1MUUwNVxcdTFFMDdcXHUwMTgwXFx1MDE4M1xcdTAyNTNdL2dcbn0sIHtcbiAgYmFzZTogJ2MnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjNcXHUyNEQyXFx1RkY0M1xcdTAxMDdcXHUwMTA5XFx1MDEwQlxcdTAxMERcXHUwMEU3XFx1MUUwOVxcdTAxODhcXHUwMjNDXFx1QTczRlxcdTIxODRdL2dcbn0sIHtcbiAgYmFzZTogJ2QnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjRcXHUyNEQzXFx1RkY0NFxcdTFFMEJcXHUwMTBGXFx1MUUwRFxcdTFFMTFcXHUxRTEzXFx1MUUwRlxcdTAxMTFcXHUwMThDXFx1MDI1NlxcdTAyNTdcXHVBNzdBXS9nXG59LCB7XG4gIGJhc2U6ICdkeicsXG4gIGxldHRlcnM6IC9bXFx1MDFGM1xcdTAxQzZdL2dcbn0sIHtcbiAgYmFzZTogJ2UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjVcXHUyNEQ0XFx1RkY0NVxcdTAwRThcXHUwMEU5XFx1MDBFQVxcdTFFQzFcXHUxRUJGXFx1MUVDNVxcdTFFQzNcXHUxRUJEXFx1MDExM1xcdTFFMTVcXHUxRTE3XFx1MDExNVxcdTAxMTdcXHUwMEVCXFx1MUVCQlxcdTAxMUJcXHUwMjA1XFx1MDIwN1xcdTFFQjlcXHUxRUM3XFx1MDIyOVxcdTFFMURcXHUwMTE5XFx1MUUxOVxcdTFFMUJcXHUwMjQ3XFx1MDI1QlxcdTAxRERdL2dcbn0sIHtcbiAgYmFzZTogJ2YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNjZcXHUyNEQ1XFx1RkY0NlxcdTFFMUZcXHUwMTkyXFx1QTc3Q10vZ1xufSwge1xuICBiYXNlOiAnZycsXG4gIGxldHRlcnM6IC9bXFx1MDA2N1xcdTI0RDZcXHVGRjQ3XFx1MDFGNVxcdTAxMURcXHUxRTIxXFx1MDExRlxcdTAxMjFcXHUwMUU3XFx1MDEyM1xcdTAxRTVcXHUwMjYwXFx1QTdBMVxcdTFENzlcXHVBNzdGXS9nXG59LCB7XG4gIGJhc2U6ICdoJyxcbiAgbGV0dGVyczogL1tcXHUwMDY4XFx1MjREN1xcdUZGNDhcXHUwMTI1XFx1MUUyM1xcdTFFMjdcXHUwMjFGXFx1MUUyNVxcdTFFMjlcXHUxRTJCXFx1MUU5NlxcdTAxMjdcXHUyQzY4XFx1MkM3NlxcdTAyNjVdL2dcbn0sIHtcbiAgYmFzZTogJ2h2JyxcbiAgbGV0dGVyczogL1tcXHUwMTk1XS9nXG59LCB7XG4gIGJhc2U6ICdpJyxcbiAgbGV0dGVyczogL1tcXHUwMDY5XFx1MjREOFxcdUZGNDlcXHUwMEVDXFx1MDBFRFxcdTAwRUVcXHUwMTI5XFx1MDEyQlxcdTAxMkRcXHUwMEVGXFx1MUUyRlxcdTFFQzlcXHUwMUQwXFx1MDIwOVxcdTAyMEJcXHUxRUNCXFx1MDEyRlxcdTFFMkRcXHUwMjY4XFx1MDEzMV0vZ1xufSwge1xuICBiYXNlOiAnaicsXG4gIGxldHRlcnM6IC9bXFx1MDA2QVxcdTI0RDlcXHVGRjRBXFx1MDEzNVxcdTAxRjBcXHUwMjQ5XS9nXG59LCB7XG4gIGJhc2U6ICdrJyxcbiAgbGV0dGVyczogL1tcXHUwMDZCXFx1MjREQVxcdUZGNEJcXHUxRTMxXFx1MDFFOVxcdTFFMzNcXHUwMTM3XFx1MUUzNVxcdTAxOTlcXHUyQzZBXFx1QTc0MVxcdUE3NDNcXHVBNzQ1XFx1QTdBM10vZ1xufSwge1xuICBiYXNlOiAnbCcsXG4gIGxldHRlcnM6IC9bXFx1MDA2Q1xcdTI0REJcXHVGRjRDXFx1MDE0MFxcdTAxM0FcXHUwMTNFXFx1MUUzN1xcdTFFMzlcXHUwMTNDXFx1MUUzRFxcdTFFM0JcXHUwMTdGXFx1MDE0MlxcdTAxOUFcXHUwMjZCXFx1MkM2MVxcdUE3NDlcXHVBNzgxXFx1QTc0N10vZ1xufSwge1xuICBiYXNlOiAnbGonLFxuICBsZXR0ZXJzOiAvW1xcdTAxQzldL2dcbn0sIHtcbiAgYmFzZTogJ20nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNkRcXHUyNERDXFx1RkY0RFxcdTFFM0ZcXHUxRTQxXFx1MUU0M1xcdTAyNzFcXHUwMjZGXS9nXG59LCB7XG4gIGJhc2U6ICduJyxcbiAgbGV0dGVyczogL1tcXHUwMDZFXFx1MjRERFxcdUZGNEVcXHUwMUY5XFx1MDE0NFxcdTAwRjFcXHUxRTQ1XFx1MDE0OFxcdTFFNDdcXHUwMTQ2XFx1MUU0QlxcdTFFNDlcXHUwMTlFXFx1MDI3MlxcdTAxNDlcXHVBNzkxXFx1QTdBNV0vZ1xufSwge1xuICBiYXNlOiAnbmonLFxuICBsZXR0ZXJzOiAvW1xcdTAxQ0NdL2dcbn0sIHtcbiAgYmFzZTogJ28nLFxuICBsZXR0ZXJzOiAvW1xcdTAwNkZcXHUyNERFXFx1RkY0RlxcdTAwRjJcXHUwMEYzXFx1MDBGNFxcdTFFRDNcXHUxRUQxXFx1MUVEN1xcdTFFRDVcXHUwMEY1XFx1MUU0RFxcdTAyMkRcXHUxRTRGXFx1MDE0RFxcdTFFNTFcXHUxRTUzXFx1MDE0RlxcdTAyMkZcXHUwMjMxXFx1MDBGNlxcdTAyMkJcXHUxRUNGXFx1MDE1MVxcdTAxRDJcXHUwMjBEXFx1MDIwRlxcdTAxQTFcXHUxRUREXFx1MUVEQlxcdTFFRTFcXHUxRURGXFx1MUVFM1xcdTFFQ0RcXHUxRUQ5XFx1MDFFQlxcdTAxRURcXHUwMEY4XFx1MDFGRlxcdTAyNTRcXHVBNzRCXFx1QTc0RFxcdTAyNzVdL2dcbn0sIHtcbiAgYmFzZTogJ29pJyxcbiAgbGV0dGVyczogL1tcXHUwMUEzXS9nXG59LCB7XG4gIGJhc2U6ICdvdScsXG4gIGxldHRlcnM6IC9bXFx1MDIyM10vZ1xufSwge1xuICBiYXNlOiAnb28nLFxuICBsZXR0ZXJzOiAvW1xcdUE3NEZdL2dcbn0sIHtcbiAgYmFzZTogJ3AnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzBcXHUyNERGXFx1RkY1MFxcdTFFNTVcXHUxRTU3XFx1MDFBNVxcdTFEN0RcXHVBNzUxXFx1QTc1M1xcdUE3NTVdL2dcbn0sIHtcbiAgYmFzZTogJ3EnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzFcXHUyNEUwXFx1RkY1MVxcdTAyNEJcXHVBNzU3XFx1QTc1OV0vZ1xufSwge1xuICBiYXNlOiAncicsXG4gIGxldHRlcnM6IC9bXFx1MDA3MlxcdTI0RTFcXHVGRjUyXFx1MDE1NVxcdTFFNTlcXHUwMTU5XFx1MDIxMVxcdTAyMTNcXHUxRTVCXFx1MUU1RFxcdTAxNTdcXHUxRTVGXFx1MDI0RFxcdTAyN0RcXHVBNzVCXFx1QTdBN1xcdUE3ODNdL2dcbn0sIHtcbiAgYmFzZTogJ3MnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzNcXHUyNEUyXFx1RkY1M1xcdTAwREZcXHUwMTVCXFx1MUU2NVxcdTAxNURcXHUxRTYxXFx1MDE2MVxcdTFFNjdcXHUxRTYzXFx1MUU2OVxcdTAyMTlcXHUwMTVGXFx1MDIzRlxcdUE3QTlcXHVBNzg1XFx1MUU5Ql0vZ1xufSwge1xuICBiYXNlOiAndCcsXG4gIGxldHRlcnM6IC9bXFx1MDA3NFxcdTI0RTNcXHVGRjU0XFx1MUU2QlxcdTFFOTdcXHUwMTY1XFx1MUU2RFxcdTAyMUJcXHUwMTYzXFx1MUU3MVxcdTFFNkZcXHUwMTY3XFx1MDFBRFxcdTAyODhcXHUyQzY2XFx1QTc4N10vZ1xufSwge1xuICBiYXNlOiAndHonLFxuICBsZXR0ZXJzOiAvW1xcdUE3MjldL2dcbn0sIHtcbiAgYmFzZTogJ3UnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzVcXHUyNEU0XFx1RkY1NVxcdTAwRjlcXHUwMEZBXFx1MDBGQlxcdTAxNjlcXHUxRTc5XFx1MDE2QlxcdTFFN0JcXHUwMTZEXFx1MDBGQ1xcdTAxRENcXHUwMUQ4XFx1MDFENlxcdTAxREFcXHUxRUU3XFx1MDE2RlxcdTAxNzFcXHUwMUQ0XFx1MDIxNVxcdTAyMTdcXHUwMUIwXFx1MUVFQlxcdTFFRTlcXHUxRUVGXFx1MUVFRFxcdTFFRjFcXHUxRUU1XFx1MUU3M1xcdTAxNzNcXHUxRTc3XFx1MUU3NVxcdTAyODldL2dcbn0sIHtcbiAgYmFzZTogJ3YnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzZcXHUyNEU1XFx1RkY1NlxcdTFFN0RcXHUxRTdGXFx1MDI4QlxcdUE3NUZcXHUwMjhDXS9nXG59LCB7XG4gIGJhc2U6ICd2eScsXG4gIGxldHRlcnM6IC9bXFx1QTc2MV0vZ1xufSwge1xuICBiYXNlOiAndycsXG4gIGxldHRlcnM6IC9bXFx1MDA3N1xcdTI0RTZcXHVGRjU3XFx1MUU4MVxcdTFFODNcXHUwMTc1XFx1MUU4N1xcdTFFODVcXHUxRTk4XFx1MUU4OVxcdTJDNzNdL2dcbn0sIHtcbiAgYmFzZTogJ3gnLFxuICBsZXR0ZXJzOiAvW1xcdTAwNzhcXHUyNEU3XFx1RkY1OFxcdTFFOEJcXHUxRThEXS9nXG59LCB7XG4gIGJhc2U6ICd5JyxcbiAgbGV0dGVyczogL1tcXHUwMDc5XFx1MjRFOFxcdUZGNTlcXHUxRUYzXFx1MDBGRFxcdTAxNzdcXHUxRUY5XFx1MDIzM1xcdTFFOEZcXHUwMEZGXFx1MUVGN1xcdTFFOTlcXHUxRUY1XFx1MDFCNFxcdTAyNEZcXHUxRUZGXS9nXG59LCB7XG4gIGJhc2U6ICd6JyxcbiAgbGV0dGVyczogL1tcXHUwMDdBXFx1MjRFOVxcdUZGNUFcXHUwMTdBXFx1MUU5MVxcdTAxN0NcXHUwMTdFXFx1MUU5M1xcdTFFOTVcXHUwMUI2XFx1MDIyNVxcdTAyNDBcXHUyQzZDXFx1QTc2M10vZ1xufV07XG52YXIgc3RyaXBEaWFjcml0aWNzID0gZnVuY3Rpb24gc3RyaXBEaWFjcml0aWNzKHN0cikge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGRpYWNyaXRpY3MubGVuZ3RoOyBpKyspIHtcbiAgICBzdHIgPSBzdHIucmVwbGFjZShkaWFjcml0aWNzW2ldLmxldHRlcnMsIGRpYWNyaXRpY3NbaV0uYmFzZSk7XG4gIH1cblxuICByZXR1cm4gc3RyO1xufTtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxudmFyIHRyaW1TdHJpbmcgPSBmdW5jdGlvbiB0cmltU3RyaW5nKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKTtcbn07XG5cbnZhciBkZWZhdWx0U3RyaW5naWZ5ID0gZnVuY3Rpb24gZGVmYXVsdFN0cmluZ2lmeShvcHRpb24pIHtcbiAgcmV0dXJuIG9wdGlvbi5sYWJlbCArIFwiIFwiICsgb3B0aW9uLnZhbHVlO1xufTtcblxudmFyIGNyZWF0ZUZpbHRlciA9IGZ1bmN0aW9uIGNyZWF0ZUZpbHRlcihjb25maWcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChvcHRpb24sIHJhd0lucHV0KSB7XG4gICAgdmFyIF9pZ25vcmVDYXNlJGlnbm9yZUFjYyA9IF9leHRlbmRzKHtcbiAgICAgIGlnbm9yZUNhc2U6IHRydWUsXG4gICAgICBpZ25vcmVBY2NlbnRzOiB0cnVlLFxuICAgICAgc3RyaW5naWZ5OiBkZWZhdWx0U3RyaW5naWZ5LFxuICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgIG1hdGNoRnJvbTogJ2FueSdcbiAgICB9LCBjb25maWcpLFxuICAgICAgICBpZ25vcmVDYXNlID0gX2lnbm9yZUNhc2UkaWdub3JlQWNjLmlnbm9yZUNhc2UsXG4gICAgICAgIGlnbm9yZUFjY2VudHMgPSBfaWdub3JlQ2FzZSRpZ25vcmVBY2MuaWdub3JlQWNjZW50cyxcbiAgICAgICAgc3RyaW5naWZ5ID0gX2lnbm9yZUNhc2UkaWdub3JlQWNjLnN0cmluZ2lmeSxcbiAgICAgICAgdHJpbSA9IF9pZ25vcmVDYXNlJGlnbm9yZUFjYy50cmltLFxuICAgICAgICBtYXRjaEZyb20gPSBfaWdub3JlQ2FzZSRpZ25vcmVBY2MubWF0Y2hGcm9tO1xuXG4gICAgdmFyIGlucHV0ID0gdHJpbSA/IHRyaW1TdHJpbmcocmF3SW5wdXQpIDogcmF3SW5wdXQ7XG4gICAgdmFyIGNhbmRpZGF0ZSA9IHRyaW0gPyB0cmltU3RyaW5nKHN0cmluZ2lmeShvcHRpb24pKSA6IHN0cmluZ2lmeShvcHRpb24pO1xuXG4gICAgaWYgKGlnbm9yZUNhc2UpIHtcbiAgICAgIGlucHV0ID0gaW5wdXQudG9Mb3dlckNhc2UoKTtcbiAgICAgIGNhbmRpZGF0ZSA9IGNhbmRpZGF0ZS50b0xvd2VyQ2FzZSgpO1xuICAgIH1cblxuICAgIGlmIChpZ25vcmVBY2NlbnRzKSB7XG4gICAgICBpbnB1dCA9IHN0cmlwRGlhY3JpdGljcyhpbnB1dCk7XG4gICAgICBjYW5kaWRhdGUgPSBzdHJpcERpYWNyaXRpY3MoY2FuZGlkYXRlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2hGcm9tID09PSAnc3RhcnQnID8gY2FuZGlkYXRlLnN1YnN0cigwLCBpbnB1dC5sZW5ndGgpID09PSBpbnB1dCA6IGNhbmRpZGF0ZS5pbmRleE9mKGlucHV0KSA+IC0xO1xuICB9O1xufTtcblxuZnVuY3Rpb24gX2V4dGVuZHMkMSgpIHsgX2V4dGVuZHMkMSA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcyQxLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxudmFyIF9yZWYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJwcm9kdWN0aW9uXCIgPyB7XG4gIG5hbWU6IFwiMWxhYW8yMS1hMTF5VGV4dFwiLFxuICBzdHlsZXM6IFwibGFiZWw6YTExeVRleHQ7ei1pbmRleDo5OTk5O2JvcmRlcjowO2NsaXA6cmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO2hlaWdodDoxcHg7d2lkdGg6MXB4O3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjA7d2hpdGUtc3BhY2U6bm93cmFwO1wiXG59IDoge1xuICBuYW1lOiBcIjFsYWFvMjEtYTExeVRleHRcIixcbiAgc3R5bGVzOiBcImxhYmVsOmExMXlUZXh0O3otaW5kZXg6OTk5OTtib3JkZXI6MDtjbGlwOnJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtoZWlnaHQ6MXB4O3dpZHRoOjFweDtwb3NpdGlvbjphYnNvbHV0ZTtvdmVyZmxvdzpoaWRkZW47cGFkZGluZzowO3doaXRlLXNwYWNlOm5vd3JhcDtcIixcbiAgbWFwOiBcIi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklrRXhNWGxVWlhoMExtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVkZOSWl3aVptbHNaU0k2SWtFeE1YbFVaWGgwTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeThnUUdac2IzZGNiaThxS2lCQWFuTjRJR3B6ZUNBcUwxeHVhVzF3YjNKMElIc2dkSGx3WlNCRmJHVnRaVzUwUTI5dVptbG5JSDBnWm5KdmJTQW5jbVZoWTNRbk8xeHVhVzF3YjNKMElIc2dhbk40SUgwZ1puSnZiU0FuUUdWdGIzUnBiMjR2WTI5eVpTYzdYRzVjYmk4dklFRnpjMmx6ZEdsMlpTQjBaWGgwSUhSdklHUmxjMk55YVdKbElIWnBjM1ZoYkNCbGJHVnRaVzUwY3k0Z1NHbGtaR1Z1SUdadmNpQnphV2RvZEdWa0lIVnpaWEp6TGx4dVkyOXVjM1FnUVRFeGVWUmxlSFFnUFNBb2NISnZjSE02SUVWc1pXMWxiblJEYjI1bWFXYzhKM053WVc0blBpa2dQVDRnS0Z4dUlDQWdJRHh6Y0dGdVhHNGdJQ0FnSUNCamMzTTllM3RjYmlBZ0lDQWdJQ0FnYkdGaVpXdzZJQ2RoTVRGNVZHVjRkQ2NzWEc0Z0lDQWdJQ0FnSUhwSmJtUmxlRG9nT1RrNU9TeGNiaUFnSUNBZ0lDQWdZbTl5WkdWeU9pQXdMRnh1SUNBZ0lDQWdJQ0JqYkdsd09pQW5jbVZqZENneGNIZ3NJREZ3ZUN3Z01YQjRMQ0F4Y0hncEp5eGNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXhMRnh1SUNBZ0lDQWdJQ0IzYVdSMGFEb2dNU3hjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUNkaFluTnZiSFYwWlNjc1hHNGdJQ0FnSUNBZ0lHOTJaWEptYkc5M09pQW5hR2xrWkdWdUp5eGNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ3hjYmlBZ0lDQWdJQ0FnZDJocGRHVlRjR0ZqWlRvZ0oyNXZkM0poY0Njc1hHNGdJQ0FnSUNCOWZWeHVJQ0FnSUNBZ2V5NHVMbkJ5YjNCemZWeHVJQ0FnSUM4K1hHNHBPMXh1WEc1bGVIQnZjblFnWkdWbVlYVnNkQ0JCTVRGNVZHVjRkRHRjYmlKZGZRPT0gKi9cIlxufTtcblxudmFyIEExMXlUZXh0ID0gZnVuY3Rpb24gQTExeVRleHQocHJvcHMpIHtcbiAgcmV0dXJuIGpzeChcInNwYW5cIiwgX2V4dGVuZHMkMSh7XG4gICAgY3NzOiBfcmVmXG4gIH0sIHByb3BzKSk7XG59O1xuXG5mdW5jdGlvbiBfZXh0ZW5kcyQyKCkgeyBfZXh0ZW5kcyQyID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBEdW1teUlucHV0KF9yZWYpIHtcbiAgdmFyIGluUHJvcCA9IF9yZWYuaW4sXG4gICAgICBvdXQgPSBfcmVmLm91dCxcbiAgICAgIG9uRXhpdGVkID0gX3JlZi5vbkV4aXRlZCxcbiAgICAgIGFwcGVhciA9IF9yZWYuYXBwZWFyLFxuICAgICAgZW50ZXIgPSBfcmVmLmVudGVyLFxuICAgICAgZXhpdCA9IF9yZWYuZXhpdCxcbiAgICAgIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIGVtb3Rpb24gPSBfcmVmLmVtb3Rpb24sXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImluXCIsIFwib3V0XCIsIFwib25FeGl0ZWRcIiwgXCJhcHBlYXJcIiwgXCJlbnRlclwiLCBcImV4aXRcIiwgXCJpbm5lclJlZlwiLCBcImVtb3Rpb25cIl0pO1xuXG4gIHJldHVybiBqc3goXCJpbnB1dFwiLCBfZXh0ZW5kcyQyKHtcbiAgICByZWY6IGlubmVyUmVmXG4gIH0sIHByb3BzLCB7XG4gICAgY3NzOlxuICAgIC8qI19fUFVSRV9fKi9cbiAgICBfY3NzKHtcbiAgICAgIGxhYmVsOiAnZHVtbXlJbnB1dCcsXG4gICAgICAvLyBnZXQgcmlkIG9mIGFueSBkZWZhdWx0IHN0eWxlc1xuICAgICAgYmFja2dyb3VuZDogMCxcbiAgICAgIGJvcmRlcjogMCxcbiAgICAgIGZvbnRTaXplOiAnaW5oZXJpdCcsXG4gICAgICBvdXRsaW5lOiAwLFxuICAgICAgcGFkZGluZzogMCxcbiAgICAgIC8vIGltcG9ydGFudCEgd2l0aG91dCBgd2lkdGhgIGJyb3dzZXJzIHdvbid0IGFsbG93IGZvY3VzXG4gICAgICB3aWR0aDogMSxcbiAgICAgIC8vIHJlbW92ZSBjdXJzb3Igb24gZGVza3RvcFxuICAgICAgY29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgICAvLyByZW1vdmUgY3Vyc29yIG9uIG1vYmlsZSB3aGlsc3QgbWFpbnRhaW5pbmcgXCJzY3JvbGwgaW50byB2aWV3XCIgYmVoYXZpb3VyXG4gICAgICBsZWZ0OiAtMTAwLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMCknXG4gICAgfSwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8gXCJcIiA6IFwiLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWtSMWJXMTVTVzV3ZFhRdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJiVUpOSWl3aVptbHNaU0k2SWtSMWJXMTVTVzV3ZFhRdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCQVpteHZkMXh1THlvcUlFQnFjM2dnYW5ONElDb3ZYRzVwYlhCdmNuUWdleUJxYzNnZ2ZTQm1jbTl0SUNkQVpXMXZkR2x2Ymk5amIzSmxKenRjYmx4dVpYaHdiM0owSUdSbFptRjFiSFFnWm5WdVkzUnBiMjRnUkhWdGJYbEpibkIxZENoN1hHNGdJR2x1T2lCcGJsQnliM0FzWEc0Z0lHOTFkQ3hjYmlBZ2IyNUZlR2wwWldRc1hHNGdJR0Z3Y0dWaGNpeGNiaUFnWlc1MFpYSXNYRzRnSUdWNGFYUXNYRzRnSUdsdWJtVnlVbVZtTEZ4dUlDQmxiVzkwYVc5dUxGeHVJQ0F1TGk1d2NtOXdjMXh1ZlRvZ1lXNTVLU0I3WEc0Z0lISmxkSFZ5YmlBb1hHNGdJQ0FnUEdsdWNIVjBYRzRnSUNBZ0lDQnlaV1k5ZTJsdWJtVnlVbVZtZlZ4dUlDQWdJQ0FnZXk0dUxuQnliM0J6ZlZ4dUlDQWdJQ0FnWTNOelBYdDdYRzRnSUNBZ0lDQWdJR3hoWW1Wc09pQW5aSFZ0YlhsSmJuQjFkQ2NzWEc0Z0lDQWdJQ0FnSUM4dklHZGxkQ0J5YVdRZ2IyWWdZVzU1SUdSbFptRjFiSFFnYzNSNWJHVnpYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SURBc1hHNGdJQ0FnSUNBZ0lHSnZjbVJsY2pvZ01DeGNiaUFnSUNBZ0lDQWdabTl1ZEZOcGVtVTZJQ2RwYm1obGNtbDBKeXhjYmlBZ0lDQWdJQ0FnYjNWMGJHbHVaVG9nTUN4Y2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01DeGNiaUFnSUNBZ0lDQWdMeThnYVcxd2IzSjBZVzUwSVNCM2FYUm9iM1YwSUdCM2FXUjBhR0FnWW5KdmQzTmxjbk1nZDI5dUozUWdZV3hzYjNjZ1ptOWpkWE5jYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJREVzWEc1Y2JpQWdJQ0FnSUNBZ0x5OGdjbVZ0YjNabElHTjFjbk52Y2lCdmJpQmtaWE5yZEc5d1hHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBbmRISmhibk53WVhKbGJuUW5MRnh1WEc0Z0lDQWdJQ0FnSUM4dklISmxiVzkyWlNCamRYSnpiM0lnYjI0Z2JXOWlhV3hsSUhkb2FXeHpkQ0J0WVdsdWRHRnBibWx1WnlCY0luTmpjbTlzYkNCcGJuUnZJSFpwWlhkY0lpQmlaV2hoZG1sdmRYSmNiaUFnSUNBZ0lDQWdiR1ZtZERvZ0xURXdNQ3hjYmlBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nTUN4Y2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklDZHlaV3hoZEdsMlpTY3NYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nSjNOallXeGxLREFwSnl4Y2JpQWdJQ0FnSUgxOVhHNGdJQ0FnTHo1Y2JpQWdLVHRjYm4xY2JpSmRmUT09ICovXCIpXG4gIH0pKTtcbn1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBOb2RlUmVzb2x2ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTm9kZVJlc29sdmVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBOb2RlUmVzb2x2ZXIoKSB7XG4gICAgcmV0dXJuIF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE5vZGVSZXNvbHZlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5wcm9wcy5pbm5lclJlZihmaW5kRE9NTm9kZSh0aGlzKSk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5wcm9wcy5pbm5lclJlZihudWxsKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICB9O1xuXG4gIHJldHVybiBOb2RlUmVzb2x2ZXI7XG59KENvbXBvbmVudCk7XG5cbnZhciBTVFlMRV9LRVlTID0gWydib3hTaXppbmcnLCAnaGVpZ2h0JywgJ292ZXJmbG93JywgJ3BhZGRpbmdSaWdodCcsICdwb3NpdGlvbiddO1xudmFyIExPQ0tfU1RZTEVTID0ge1xuICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgLy8gYWNjb3VudCBmb3IgcG9zc2libGUgZGVjbGFyYXRpb24gYHdpZHRoOiAxMDAlO2Agb24gYm9keVxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBoZWlnaHQ6ICcxMDAlJ1xufTtcblxuZnVuY3Rpb24gcHJldmVudFRvdWNoTW92ZShlKSB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbn1cbmZ1bmN0aW9uIGFsbG93VG91Y2hNb3ZlKGUpIHtcbiAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbn1cbmZ1bmN0aW9uIHByZXZlbnRJbmVydGlhU2Nyb2xsKCkge1xuICB2YXIgdG9wID0gdGhpcy5zY3JvbGxUb3A7XG4gIHZhciB0b3RhbFNjcm9sbCA9IHRoaXMuc2Nyb2xsSGVpZ2h0O1xuICB2YXIgY3VycmVudFNjcm9sbCA9IHRvcCArIHRoaXMub2Zmc2V0SGVpZ2h0O1xuXG4gIGlmICh0b3AgPT09IDApIHtcbiAgICB0aGlzLnNjcm9sbFRvcCA9IDE7XG4gIH0gZWxzZSBpZiAoY3VycmVudFNjcm9sbCA9PT0gdG90YWxTY3JvbGwpIHtcbiAgICB0aGlzLnNjcm9sbFRvcCA9IHRvcCAtIDE7XG4gIH1cbn0gLy8gYG9udG91Y2hzdGFydGAgY2hlY2sgd29ya3Mgb24gbW9zdCBicm93c2Vyc1xuLy8gYG1heFRvdWNoUG9pbnRzYCB3b3JrcyBvbiBJRTEwLzExIGFuZCBTdXJmYWNlXG5cbmZ1bmN0aW9uIGlzVG91Y2hEZXZpY2UoKSB7XG4gIHJldHVybiAnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cgfHwgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzO1xufVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZSQxKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxudmFyIGNhblVzZURPTSA9ICEhKCB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xudmFyIGFjdGl2ZVNjcm9sbExvY2tzID0gMDtcblxudmFyIFNjcm9sbExvY2sgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UkMShTY3JvbGxMb2NrLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTY3JvbGxMb2NrKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLm9yaWdpbmFsU3R5bGVzID0ge307XG4gICAgX3RoaXMubGlzdGVuZXJPcHRpb25zID0ge1xuICAgICAgY2FwdHVyZTogZmFsc2UsXG4gICAgICBwYXNzaXZlOiBmYWxzZVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFNjcm9sbExvY2sucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgaWYgKCFjYW5Vc2VET00pIHJldHVybjtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBhY2NvdW50Rm9yU2Nyb2xsYmFycyA9IF90aGlzJHByb3BzLmFjY291bnRGb3JTY3JvbGxiYXJzLFxuICAgICAgICB0b3VjaFNjcm9sbFRhcmdldCA9IF90aGlzJHByb3BzLnRvdWNoU2Nyb2xsVGFyZ2V0O1xuICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5ib2R5O1xuICAgIHZhciB0YXJnZXRTdHlsZSA9IHRhcmdldCAmJiB0YXJnZXQuc3R5bGU7XG5cbiAgICBpZiAoYWNjb3VudEZvclNjcm9sbGJhcnMpIHtcbiAgICAgIC8vIHN0b3JlIGFueSBzdHlsZXMgYWxyZWFkeSBhcHBsaWVkIHRvIHRoZSBib2R5XG4gICAgICBTVFlMRV9LRVlTLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgdmFsID0gdGFyZ2V0U3R5bGUgJiYgdGFyZ2V0U3R5bGVba2V5XTtcbiAgICAgICAgX3RoaXMyLm9yaWdpbmFsU3R5bGVzW2tleV0gPSB2YWw7XG4gICAgICB9KTtcbiAgICB9IC8vIGFwcGx5IHRoZSBsb2NrIHN0eWxlcyBhbmQgcGFkZGluZyBpZiB0aGlzIGlzIHRoZSBmaXJzdCBzY3JvbGwgbG9ja1xuXG5cbiAgICBpZiAoYWNjb3VudEZvclNjcm9sbGJhcnMgJiYgYWN0aXZlU2Nyb2xsTG9ja3MgPCAxKSB7XG4gICAgICB2YXIgY3VycmVudFBhZGRpbmcgPSBwYXJzZUludCh0aGlzLm9yaWdpbmFsU3R5bGVzLnBhZGRpbmdSaWdodCwgMTApIHx8IDA7XG4gICAgICB2YXIgY2xpZW50V2lkdGggPSBkb2N1bWVudC5ib2R5ID8gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCA6IDA7XG4gICAgICB2YXIgYWRqdXN0ZWRQYWRkaW5nID0gd2luZG93LmlubmVyV2lkdGggLSBjbGllbnRXaWR0aCArIGN1cnJlbnRQYWRkaW5nIHx8IDA7XG4gICAgICBPYmplY3Qua2V5cyhMT0NLX1NUWUxFUykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciB2YWwgPSBMT0NLX1NUWUxFU1trZXldO1xuXG4gICAgICAgIGlmICh0YXJnZXRTdHlsZSkge1xuICAgICAgICAgIHRhcmdldFN0eWxlW2tleV0gPSB2YWw7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAodGFyZ2V0U3R5bGUpIHtcbiAgICAgICAgdGFyZ2V0U3R5bGUucGFkZGluZ1JpZ2h0ID0gYWRqdXN0ZWRQYWRkaW5nICsgXCJweFwiO1xuICAgICAgfVxuICAgIH0gLy8gYWNjb3VudCBmb3IgdG91Y2ggZGV2aWNlc1xuXG5cbiAgICBpZiAodGFyZ2V0ICYmIGlzVG91Y2hEZXZpY2UoKSkge1xuICAgICAgLy8gTW9iaWxlIFNhZmFyaSBpZ25vcmVzIHsgb3ZlcmZsb3c6IGhpZGRlbiB9IGRlY2xhcmF0aW9uIG9uIHRoZSBib2R5LlxuICAgICAgdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHByZXZlbnRUb3VjaE1vdmUsIHRoaXMubGlzdGVuZXJPcHRpb25zKTsgLy8gQWxsb3cgc2Nyb2xsIG9uIHByb3ZpZGVkIHRhcmdldFxuXG4gICAgICBpZiAodG91Y2hTY3JvbGxUYXJnZXQpIHtcbiAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHByZXZlbnRJbmVydGlhU2Nyb2xsLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG4gICAgICAgIHRvdWNoU2Nyb2xsVGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGFsbG93VG91Y2hNb3ZlLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG4gICAgICB9XG4gICAgfSAvLyBpbmNyZW1lbnQgYWN0aXZlIHNjcm9sbCBsb2Nrc1xuXG5cbiAgICBhY3RpdmVTY3JvbGxMb2NrcyArPSAxO1xuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgaWYgKCFjYW5Vc2VET00pIHJldHVybjtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgYWNjb3VudEZvclNjcm9sbGJhcnMgPSBfdGhpcyRwcm9wczIuYWNjb3VudEZvclNjcm9sbGJhcnMsXG4gICAgICAgIHRvdWNoU2Nyb2xsVGFyZ2V0ID0gX3RoaXMkcHJvcHMyLnRvdWNoU2Nyb2xsVGFyZ2V0O1xuICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5ib2R5O1xuICAgIHZhciB0YXJnZXRTdHlsZSA9IHRhcmdldCAmJiB0YXJnZXQuc3R5bGU7IC8vIHNhZmVseSBkZWNyZW1lbnQgYWN0aXZlIHNjcm9sbCBsb2Nrc1xuXG4gICAgYWN0aXZlU2Nyb2xsTG9ja3MgPSBNYXRoLm1heChhY3RpdmVTY3JvbGxMb2NrcyAtIDEsIDApOyAvLyByZWFwcGx5IG9yaWdpbmFsIGJvZHkgc3R5bGVzLCBpZiBhbnlcblxuICAgIGlmIChhY2NvdW50Rm9yU2Nyb2xsYmFycyAmJiBhY3RpdmVTY3JvbGxMb2NrcyA8IDEpIHtcbiAgICAgIFNUWUxFX0tFWVMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciB2YWwgPSBfdGhpczMub3JpZ2luYWxTdHlsZXNba2V5XTtcblxuICAgICAgICBpZiAodGFyZ2V0U3R5bGUpIHtcbiAgICAgICAgICB0YXJnZXRTdHlsZVtrZXldID0gdmFsO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IC8vIHJlbW92ZSB0b3VjaCBsaXN0ZW5lcnNcblxuXG4gICAgaWYgKHRhcmdldCAmJiBpc1RvdWNoRGV2aWNlKCkpIHtcbiAgICAgIHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBwcmV2ZW50VG91Y2hNb3ZlLCB0aGlzLmxpc3RlbmVyT3B0aW9ucyk7XG5cbiAgICAgIGlmICh0b3VjaFNjcm9sbFRhcmdldCkge1xuICAgICAgICB0b3VjaFNjcm9sbFRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgcHJldmVudEluZXJ0aWFTY3JvbGwsIHRoaXMubGlzdGVuZXJPcHRpb25zKTtcbiAgICAgICAgdG91Y2hTY3JvbGxUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgYWxsb3dUb3VjaE1vdmUsIHRoaXMubGlzdGVuZXJPcHRpb25zKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gU2Nyb2xsTG9jaztcbn0oQ29tcG9uZW50KTtcblxuU2Nyb2xsTG9jay5kZWZhdWx0UHJvcHMgPSB7XG4gIGFjY291bnRGb3JTY3JvbGxiYXJzOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZSQyKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgX3JlZiQxID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiID8ge1xuICBuYW1lOiBcIjFkc2JwY3BcIixcbiAgc3R5bGVzOiBcInBvc2l0aW9uOmZpeGVkO2xlZnQ6MDtib3R0b206MDtyaWdodDowO3RvcDowO1wiXG59IDoge1xuICBuYW1lOiBcIjFkc2JwY3BcIixcbiAgc3R5bGVzOiBcInBvc2l0aW9uOmZpeGVkO2xlZnQ6MDtib3R0b206MDtyaWdodDowO3RvcDowO1wiLFxuICBtYXA6IFwiLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWxOamNtOXNiRUpzYjJOckxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVFpFVlNJc0ltWnBiR1VpT2lKVFkzSnZiR3hDYkc5amF5NXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4dklFQm1iRzkzWEc0dktpb2dRR3B6ZUNCcWMzZ2dLaTljYm1sdGNHOXlkQ0I3SUZCMWNtVkRiMjF3YjI1bGJuUXNJSFI1Y0dVZ1JXeGxiV1Z1ZENCOUlHWnliMjBnSjNKbFlXTjBKenRjYm1sdGNHOXlkQ0I3SUdwemVDQjlJR1p5YjIwZ0owQmxiVzkwYVc5dUwyTnZjbVVuTzF4dWFXMXdiM0owSUU1dlpHVlNaWE52YkhabGNpQm1jbTl0SUNjdUwwNXZaR1ZTWlhOdmJIWmxjaWM3WEc1cGJYQnZjblFnVTJOeWIyeHNURzlqYXlCbWNtOXRJQ2N1TDFOamNtOXNiRXh2WTJzdmFXNWtaWGduTzF4dVhHNTBlWEJsSUZCeWIzQnpJRDBnZTF4dUlDQmphR2xzWkhKbGJqb2dSV3hsYldWdWREd3FQaXhjYmlBZ2FYTkZibUZpYkdWa09pQmliMjlzWldGdUxGeHVmVHRjYm5SNWNHVWdVM1JoZEdVZ1BTQjdYRzRnSUhSdmRXTm9VMk55YjJ4c1ZHRnlaMlYwT2lCSVZFMU1SV3hsYldWdWRDQjhJRzUxYkd3c1hHNTlPMXh1WEc0dkx5Qk9UMVJGT2x4dUx5OGdWMlVnYzJodmRXeGtiaWQwSUc1bFpXUWdkR2hwY3lCaFpuUmxjaUIxY0dSaGRHbHVaeUIwYnlCU1pXRmpkQ0IyTVRZdU15NHdMQ0IzYUdsamFDQnBiblJ5YjJSMVkyVnpPbHh1THk4Z0xTQmpjbVZoZEdWU1pXWW9LU0JvZEhSd2N6b3ZMM0psWVdOMGFuTXViM0puTDJSdlkzTXZjbVZoWTNRdFlYQnBMbWgwYld3amNtVmhZM1JqY21WaGRHVnlaV1pjYmk4dklDMGdabTl5ZDJGeVpGSmxaaWdwSUdoMGRIQnpPaTh2Y21WaFkzUnFjeTV2Y21jdlpHOWpjeTl5WldGamRDMWhjR2t1YUhSdGJDTnlaV0ZqZEdadmNuZGhjbVJ5WldaY2JseHVaWGh3YjNKMElHUmxabUYxYkhRZ1kyeGhjM01nVTJOeWIyeHNRbXh2WTJzZ1pYaDBaVzVrY3lCUWRYSmxRMjl0Y0c5dVpXNTBQRkJ5YjNCekxDQlRkR0YwWlQ0Z2UxeHVJQ0J6ZEdGMFpTQTlJSHNnZEc5MVkyaFRZM0p2Ykd4VVlYSm5aWFE2SUc1MWJHd2dmVHRjYmx4dUlDQXZMeUJ0ZFhOMElHSmxJR2x1SUhOMFlYUmxJSFJ2SUhSeWFXZG5aWElnWVNCeVpTMXlaVzVrWlhJc0lHOXViSGtnY25WdWN5QnZibU5sSUhCbGNpQnBibk4wWVc1alpWeHVJQ0JuWlhSVFkzSnZiR3hVWVhKblpYUWdQU0FvY21WbU9pQklWRTFNUld4bGJXVnVkQ2tnUFQ0Z2UxeHVJQ0FnSUdsbUlDaHlaV1lnUFQwOUlIUm9hWE11YzNSaGRHVXVkRzkxWTJoVFkzSnZiR3hVWVhKblpYUXBJSEpsZEhWeWJqdGNiaUFnSUNCMGFHbHpMbk5sZEZOMFlYUmxLSHNnZEc5MVkyaFRZM0p2Ykd4VVlYSm5aWFE2SUhKbFppQjlLVHRjYmlBZ2ZUdGNibHh1SUNBdkx5QjBhR2x6SUhkcGJHd2dZMnh2YzJVZ2RHaGxJRzFsYm5VZ2QyaGxiaUJoSUhWelpYSWdZMnhwWTJ0eklHOTFkSE5wWkdWY2JpQWdZbXgxY2xObGJHVmpkRWx1Y0hWMElEMGdLQ2tnUFQ0Z2UxeHVJQ0FnSUdsbUlDaGtiMk4xYldWdWRDNWhZM1JwZG1WRmJHVnRaVzUwS1NCN1hHNGdJQ0FnSUNCa2IyTjFiV1Z1ZEM1aFkzUnBkbVZGYkdWdFpXNTBMbUpzZFhJb0tUdGNiaUFnSUNCOVhHNGdJSDA3WEc1Y2JpQWdjbVZ1WkdWeUtDa2dlMXh1SUNBZ0lHTnZibk4wSUhzZ1kyaHBiR1J5Wlc0c0lHbHpSVzVoWW14bFpDQjlJRDBnZEdocGN5NXdjbTl3Y3p0Y2JpQWdJQ0JqYjI1emRDQjdJSFJ2ZFdOb1UyTnliMnhzVkdGeVoyVjBJSDBnUFNCMGFHbHpMbk4wWVhSbE8xeHVYRzRnSUNBZ0x5OGdZbUZwYkNCbFlYSnNlU0JwWmlCdWIzUWdaVzVoWW14bFpGeHVJQ0FnSUdsbUlDZ2hhWE5GYm1GaWJHVmtLU0J5WlhSMWNtNGdZMmhwYkdSeVpXNDdYRzVjYmlBZ0lDQXZLbHh1SUNBZ0lDQXFJRVJwZGx4dUlDQWdJQ0FxSUMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExWeHVJQ0FnSUNBcUlHSnNiMk5yY3lCelkzSnZiR3hwYm1jZ2IyNGdibTl1TFdKdlpIa2daV3hsYldWdWRITWdZbVZvYVc1a0lIUm9aU0J0Wlc1MVhHNWNiaUFnSUNBZ0tpQk9iMlJsVW1WemIyeDJaWEpjYmlBZ0lDQWdLaUF0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMxY2JpQWdJQ0FnS2lCM1pTQnVaV1ZrSUdFZ2NtVm1aWEpsYm1ObElIUnZJSFJvWlNCelkzSnZiR3hoWW14bElHVnNaVzFsYm5RZ2RHOGdYQ0oxYm14dlkydGNJaUJ6WTNKdmJHd2diMjVjYmlBZ0lDQWdLaUJ0YjJKcGJHVWdaR1YyYVdObGMxeHVYRzRnSUNBZ0lDb2dVMk55YjJ4c1RHOWphMXh1SUNBZ0lDQXFJQzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFZ4dUlDQWdJQ0FxSUdGamRIVmhiR3g1SUdSdlpYTWdkR2hsSUhOamNtOXNiQ0JzYjJOcmFXNW5YRzRnSUNBZ0lDb3ZYRzRnSUNBZ2NtVjBkWEp1SUNoY2JpQWdJQ0FnSUR4a2FYWStYRzRnSUNBZ0lDQWdJRHhrYVhaY2JpQWdJQ0FnSUNBZ0lDQnZia05zYVdOclBYdDBhR2x6TG1Kc2RYSlRaV3hsWTNSSmJuQjFkSDFjYmlBZ0lDQWdJQ0FnSUNCamMzTTllM3NnY0c5emFYUnBiMjQ2SUNkbWFYaGxaQ2NzSUd4bFpuUTZJREFzSUdKdmRIUnZiVG9nTUN3Z2NtbG5hSFE2SURBc0lIUnZjRG9nTUNCOWZWeHVJQ0FnSUNBZ0lDQXZQbHh1SUNBZ0lDQWdJQ0E4VG05a1pWSmxjMjlzZG1WeUlHbHVibVZ5VW1WbVBYdDBhR2x6TG1kbGRGTmpjbTlzYkZSaGNtZGxkSDArZTJOb2FXeGtjbVZ1ZlR3dlRtOWtaVkpsYzI5c2RtVnlQbHh1SUNBZ0lDQWdJQ0I3ZEc5MVkyaFRZM0p2Ykd4VVlYSm5aWFFnUHlBb1hHNGdJQ0FnSUNBZ0lDQWdQRk5qY205c2JFeHZZMnNnZEc5MVkyaFRZM0p2Ykd4VVlYSm5aWFE5ZTNSdmRXTm9VMk55YjJ4c1ZHRnlaMlYwZlNBdlBseHVJQ0FnSUNBZ0lDQXBJRG9nYm5Wc2JIMWNiaUFnSUNBZ0lEd3ZaR2wyUGx4dUlDQWdJQ2s3WEc0Z0lIMWNibjFjYmlKZGZRPT0gKi9cIlxufTtcblxuLy8gTk9URTpcbi8vIFdlIHNob3VsZG4ndCBuZWVkIHRoaXMgYWZ0ZXIgdXBkYXRpbmcgdG8gUmVhY3QgdjE2LjMuMCwgd2hpY2ggaW50cm9kdWNlczpcbi8vIC0gY3JlYXRlUmVmKCkgaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL3JlYWN0LWFwaS5odG1sI3JlYWN0Y3JlYXRlcmVmXG4vLyAtIGZvcndhcmRSZWYoKSBodHRwczovL3JlYWN0anMub3JnL2RvY3MvcmVhY3QtYXBpLmh0bWwjcmVhY3Rmb3J3YXJkcmVmXG52YXIgU2Nyb2xsQmxvY2sgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9QdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlJDIoU2Nyb2xsQmxvY2ssIF9QdXJlQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTY3JvbGxCbG9jaygpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUHVyZUNvbXBvbmVudC5jYWxsLmFwcGx5KF9QdXJlQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgdG91Y2hTY3JvbGxUYXJnZXQ6IG51bGxcbiAgICB9O1xuXG4gICAgX3RoaXMuZ2V0U2Nyb2xsVGFyZ2V0ID0gZnVuY3Rpb24gKHJlZikge1xuICAgICAgaWYgKHJlZiA9PT0gX3RoaXMuc3RhdGUudG91Y2hTY3JvbGxUYXJnZXQpIHJldHVybjtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0b3VjaFNjcm9sbFRhcmdldDogcmVmXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuYmx1clNlbGVjdElucHV0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQpIHtcbiAgICAgICAgZG9jdW1lbnQuYWN0aXZlRWxlbWVudC5ibHVyKCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTY3JvbGxCbG9jay5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICBpc0VuYWJsZWQgPSBfdGhpcyRwcm9wcy5pc0VuYWJsZWQ7XG4gICAgdmFyIHRvdWNoU2Nyb2xsVGFyZ2V0ID0gdGhpcy5zdGF0ZS50b3VjaFNjcm9sbFRhcmdldDsgLy8gYmFpbCBlYXJseSBpZiBub3QgZW5hYmxlZFxuXG4gICAgaWYgKCFpc0VuYWJsZWQpIHJldHVybiBjaGlsZHJlbjtcbiAgICAvKlxuICAgICAqIERpdlxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIGJsb2NrcyBzY3JvbGxpbmcgb24gbm9uLWJvZHkgZWxlbWVudHMgYmVoaW5kIHRoZSBtZW51XG4gICAgICAqIE5vZGVSZXNvbHZlclxuICAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgICAqIHdlIG5lZWQgYSByZWZlcmVuY2UgdG8gdGhlIHNjcm9sbGFibGUgZWxlbWVudCB0byBcInVubG9ja1wiIHNjcm9sbCBvblxuICAgICAqIG1vYmlsZSBkZXZpY2VzXG4gICAgICAqIFNjcm9sbExvY2tcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAgKiBhY3R1YWxseSBkb2VzIHRoZSBzY3JvbGwgbG9ja2luZ1xuICAgICAqL1xuXG4gICAgcmV0dXJuIGpzeChcImRpdlwiLCBudWxsLCBqc3goXCJkaXZcIiwge1xuICAgICAgb25DbGljazogdGhpcy5ibHVyU2VsZWN0SW5wdXQsXG4gICAgICBjc3M6IF9yZWYkMVxuICAgIH0pLCBqc3goTm9kZVJlc29sdmVyLCB7XG4gICAgICBpbm5lclJlZjogdGhpcy5nZXRTY3JvbGxUYXJnZXRcbiAgICB9LCBjaGlsZHJlbiksIHRvdWNoU2Nyb2xsVGFyZ2V0ID8ganN4KFNjcm9sbExvY2ssIHtcbiAgICAgIHRvdWNoU2Nyb2xsVGFyZ2V0OiB0b3VjaFNjcm9sbFRhcmdldFxuICAgIH0pIDogbnVsbCk7XG4gIH07XG5cbiAgcmV0dXJuIFNjcm9sbEJsb2NrO1xufShQdXJlQ29tcG9uZW50KTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UkMShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlJDMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBTY3JvbGxDYXB0b3IgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UkMyhTY3JvbGxDYXB0b3IsIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFNjcm9sbENhcHRvcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwuYXBwbHkoX0NvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5pc0JvdHRvbSA9IGZhbHNlO1xuICAgIF90aGlzLmlzVG9wID0gZmFsc2U7XG4gICAgX3RoaXMuc2Nyb2xsVGFyZ2V0ID0gdm9pZCAwO1xuICAgIF90aGlzLnRvdWNoU3RhcnQgPSB2b2lkIDA7XG5cbiAgICBfdGhpcy5jYW5jZWxTY3JvbGwgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlRXZlbnREZWx0YSA9IGZ1bmN0aW9uIChldmVudCwgZGVsdGEpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIG9uQm90dG9tQXJyaXZlID0gX3RoaXMkcHJvcHMub25Cb3R0b21BcnJpdmUsXG4gICAgICAgICAgb25Cb3R0b21MZWF2ZSA9IF90aGlzJHByb3BzLm9uQm90dG9tTGVhdmUsXG4gICAgICAgICAgb25Ub3BBcnJpdmUgPSBfdGhpcyRwcm9wcy5vblRvcEFycml2ZSxcbiAgICAgICAgICBvblRvcExlYXZlID0gX3RoaXMkcHJvcHMub25Ub3BMZWF2ZTtcbiAgICAgIHZhciBfdGhpcyRzY3JvbGxUYXJnZXQgPSBfdGhpcy5zY3JvbGxUYXJnZXQsXG4gICAgICAgICAgc2Nyb2xsVG9wID0gX3RoaXMkc2Nyb2xsVGFyZ2V0LnNjcm9sbFRvcCxcbiAgICAgICAgICBzY3JvbGxIZWlnaHQgPSBfdGhpcyRzY3JvbGxUYXJnZXQuc2Nyb2xsSGVpZ2h0LFxuICAgICAgICAgIGNsaWVudEhlaWdodCA9IF90aGlzJHNjcm9sbFRhcmdldC5jbGllbnRIZWlnaHQ7XG4gICAgICB2YXIgdGFyZ2V0ID0gX3RoaXMuc2Nyb2xsVGFyZ2V0O1xuICAgICAgdmFyIGlzRGVsdGFQb3NpdGl2ZSA9IGRlbHRhID4gMDtcbiAgICAgIHZhciBhdmFpbGFibGVTY3JvbGwgPSBzY3JvbGxIZWlnaHQgLSBjbGllbnRIZWlnaHQgLSBzY3JvbGxUb3A7XG4gICAgICB2YXIgc2hvdWxkQ2FuY2VsU2Nyb2xsID0gZmFsc2U7IC8vIHJlc2V0IGJvdHRvbS90b3AgZmxhZ3NcblxuICAgICAgaWYgKGF2YWlsYWJsZVNjcm9sbCA+IGRlbHRhICYmIF90aGlzLmlzQm90dG9tKSB7XG4gICAgICAgIGlmIChvbkJvdHRvbUxlYXZlKSBvbkJvdHRvbUxlYXZlKGV2ZW50KTtcbiAgICAgICAgX3RoaXMuaXNCb3R0b20gPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzRGVsdGFQb3NpdGl2ZSAmJiBfdGhpcy5pc1RvcCkge1xuICAgICAgICBpZiAob25Ub3BMZWF2ZSkgb25Ub3BMZWF2ZShldmVudCk7XG4gICAgICAgIF90aGlzLmlzVG9wID0gZmFsc2U7XG4gICAgICB9IC8vIGJvdHRvbSBsaW1pdFxuXG5cbiAgICAgIGlmIChpc0RlbHRhUG9zaXRpdmUgJiYgZGVsdGEgPiBhdmFpbGFibGVTY3JvbGwpIHtcbiAgICAgICAgaWYgKG9uQm90dG9tQXJyaXZlICYmICFfdGhpcy5pc0JvdHRvbSkge1xuICAgICAgICAgIG9uQm90dG9tQXJyaXZlKGV2ZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRhcmdldC5zY3JvbGxUb3AgPSBzY3JvbGxIZWlnaHQ7XG4gICAgICAgIHNob3VsZENhbmNlbFNjcm9sbCA9IHRydWU7XG4gICAgICAgIF90aGlzLmlzQm90dG9tID0gdHJ1ZTsgLy8gdG9wIGxpbWl0XG4gICAgICB9IGVsc2UgaWYgKCFpc0RlbHRhUG9zaXRpdmUgJiYgLWRlbHRhID4gc2Nyb2xsVG9wKSB7XG4gICAgICAgIGlmIChvblRvcEFycml2ZSAmJiAhX3RoaXMuaXNUb3ApIHtcbiAgICAgICAgICBvblRvcEFycml2ZShldmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICB0YXJnZXQuc2Nyb2xsVG9wID0gMDtcbiAgICAgICAgc2hvdWxkQ2FuY2VsU2Nyb2xsID0gdHJ1ZTtcbiAgICAgICAgX3RoaXMuaXNUb3AgPSB0cnVlO1xuICAgICAgfSAvLyBjYW5jZWwgc2Nyb2xsXG5cblxuICAgICAgaWYgKHNob3VsZENhbmNlbFNjcm9sbCkge1xuICAgICAgICBfdGhpcy5jYW5jZWxTY3JvbGwoZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfdGhpcy5vbldoZWVsID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBfdGhpcy5oYW5kbGVFdmVudERlbHRhKGV2ZW50LCBldmVudC5kZWx0YVkpO1xuICAgIH07XG5cbiAgICBfdGhpcy5vblRvdWNoU3RhcnQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIC8vIHNldCB0b3VjaCBzdGFydCBzbyB3ZSBjYW4gY2FsY3VsYXRlIHRvdWNobW92ZSBkZWx0YVxuICAgICAgX3RoaXMudG91Y2hTdGFydCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFk7XG4gICAgfTtcblxuICAgIF90aGlzLm9uVG91Y2hNb3ZlID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgZGVsdGFZID0gX3RoaXMudG91Y2hTdGFydCAtIGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFk7XG5cbiAgICAgIF90aGlzLmhhbmRsZUV2ZW50RGVsdGEoZXZlbnQsIGRlbHRhWSk7XG4gICAgfTtcblxuICAgIF90aGlzLmdldFNjcm9sbFRhcmdldCA9IGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLnNjcm9sbFRhcmdldCA9IHJlZjtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFNjcm9sbENhcHRvci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5zdGFydExpc3RlbmluZyh0aGlzLnNjcm9sbFRhcmdldCk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5zdG9wTGlzdGVuaW5nKHRoaXMuc2Nyb2xsVGFyZ2V0KTtcbiAgfTtcblxuICBfcHJvdG8uc3RhcnRMaXN0ZW5pbmcgPSBmdW5jdGlvbiBzdGFydExpc3RlbmluZyhlbCkge1xuICAgIC8vIGJhaWwgZWFybHkgaWYgbm8gZWxlbWVudCBpcyBhdmFpbGFibGUgdG8gYXR0YWNoIHRvXG4gICAgaWYgKCFlbCkgcmV0dXJuOyAvLyBhbGwgdGhlIGlmIHN0YXRlbWVudHMgYXJlIHRvIGFwcGVhc2UgRmxvdyDwn5iiXG5cbiAgICBpZiAodHlwZW9mIGVsLmFkZEV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3doZWVsJywgdGhpcy5vbldoZWVsLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBlbC5hZGRFdmVudExpc3RlbmVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBlbC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5vblRvdWNoU3RhcnQsIGZhbHNlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGVsLmFkZEV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaE1vdmUsIGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnN0b3BMaXN0ZW5pbmcgPSBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nKGVsKSB7XG4gICAgLy8gYWxsIHRoZSBpZiBzdGF0ZW1lbnRzIGFyZSB0byBhcHBlYXNlIEZsb3cg8J+YolxuICAgIGlmICh0eXBlb2YgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2hlZWwnLCB0aGlzLm9uV2hlZWwsIGZhbHNlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLm9uVG91Y2hTdGFydCwgZmFsc2UpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5vblRvdWNoTW92ZSwgZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE5vZGVSZXNvbHZlciwge1xuICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0U2Nyb2xsVGFyZ2V0XG4gICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gIH07XG5cbiAgcmV0dXJuIFNjcm9sbENhcHRvcjtcbn0oQ29tcG9uZW50KTtcblxuZnVuY3Rpb24gU2Nyb2xsQ2FwdG9yU3dpdGNoKF9yZWYpIHtcbiAgdmFyIF9yZWYkaXNFbmFibGVkID0gX3JlZi5pc0VuYWJsZWQsXG4gICAgICBpc0VuYWJsZWQgPSBfcmVmJGlzRW5hYmxlZCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkaXNFbmFibGVkLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSQxKF9yZWYsIFtcImlzRW5hYmxlZFwiXSk7XG5cbiAgcmV0dXJuIGlzRW5hYmxlZCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2Nyb2xsQ2FwdG9yLCBwcm9wcykgOiBwcm9wcy5jaGlsZHJlbjtcbn1cblxudmFyIGluc3RydWN0aW9uc0FyaWFNZXNzYWdlID0gZnVuY3Rpb24gaW5zdHJ1Y3Rpb25zQXJpYU1lc3NhZ2UoZXZlbnQsIGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSB7fTtcbiAgfVxuXG4gIHZhciBfY29udGV4dCA9IGNvbnRleHQsXG4gICAgICBpc1NlYXJjaGFibGUgPSBfY29udGV4dC5pc1NlYXJjaGFibGUsXG4gICAgICBpc011bHRpID0gX2NvbnRleHQuaXNNdWx0aSxcbiAgICAgIGxhYmVsID0gX2NvbnRleHQubGFiZWwsXG4gICAgICBpc0Rpc2FibGVkID0gX2NvbnRleHQuaXNEaXNhYmxlZDtcblxuICBzd2l0Y2ggKGV2ZW50KSB7XG4gICAgY2FzZSAnbWVudSc6XG4gICAgICByZXR1cm4gXCJVc2UgVXAgYW5kIERvd24gdG8gY2hvb3NlIG9wdGlvbnNcIiArIChpc0Rpc2FibGVkID8gJycgOiAnLCBwcmVzcyBFbnRlciB0byBzZWxlY3QgdGhlIGN1cnJlbnRseSBmb2N1c2VkIG9wdGlvbicpICsgXCIsIHByZXNzIEVzY2FwZSB0byBleGl0IHRoZSBtZW51LCBwcmVzcyBUYWIgdG8gc2VsZWN0IHRoZSBvcHRpb24gYW5kIGV4aXQgdGhlIG1lbnUuXCI7XG5cbiAgICBjYXNlICdpbnB1dCc6XG4gICAgICByZXR1cm4gKGxhYmVsID8gbGFiZWwgOiAnU2VsZWN0JykgKyBcIiBpcyBmb2N1c2VkIFwiICsgKGlzU2VhcmNoYWJsZSA/ICcsdHlwZSB0byByZWZpbmUgbGlzdCcgOiAnJykgKyBcIiwgcHJlc3MgRG93biB0byBvcGVuIHRoZSBtZW51LCBcIiArIChpc011bHRpID8gJyBwcmVzcyBsZWZ0IHRvIGZvY3VzIHNlbGVjdGVkIHZhbHVlcycgOiAnJyk7XG5cbiAgICBjYXNlICd2YWx1ZSc6XG4gICAgICByZXR1cm4gJ1VzZSBsZWZ0IGFuZCByaWdodCB0byB0b2dnbGUgYmV0d2VlbiBmb2N1c2VkIHZhbHVlcywgcHJlc3MgQmFja3NwYWNlIHRvIHJlbW92ZSB0aGUgY3VycmVudGx5IGZvY3VzZWQgdmFsdWUnO1xuICB9XG59O1xudmFyIHZhbHVlRXZlbnRBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIHZhbHVlRXZlbnRBcmlhTWVzc2FnZShldmVudCwgY29udGV4dCkge1xuICB2YXIgdmFsdWUgPSBjb250ZXh0LnZhbHVlLFxuICAgICAgaXNEaXNhYmxlZCA9IGNvbnRleHQuaXNEaXNhYmxlZDtcbiAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuXG4gIHN3aXRjaCAoZXZlbnQpIHtcbiAgICBjYXNlICdkZXNlbGVjdC1vcHRpb24nOlxuICAgIGNhc2UgJ3BvcC12YWx1ZSc6XG4gICAgY2FzZSAncmVtb3ZlLXZhbHVlJzpcbiAgICAgIHJldHVybiBcIm9wdGlvbiBcIiArIHZhbHVlICsgXCIsIGRlc2VsZWN0ZWQuXCI7XG5cbiAgICBjYXNlICdzZWxlY3Qtb3B0aW9uJzpcbiAgICAgIHJldHVybiBpc0Rpc2FibGVkID8gXCJvcHRpb24gXCIgKyB2YWx1ZSArIFwiIGlzIGRpc2FibGVkLiBTZWxlY3QgYW5vdGhlciBvcHRpb24uXCIgOiBcIm9wdGlvbiBcIiArIHZhbHVlICsgXCIsIHNlbGVjdGVkLlwiO1xuICB9XG59O1xudmFyIHZhbHVlRm9jdXNBcmlhTWVzc2FnZSA9IGZ1bmN0aW9uIHZhbHVlRm9jdXNBcmlhTWVzc2FnZShfcmVmKSB7XG4gIHZhciBmb2N1c2VkVmFsdWUgPSBfcmVmLmZvY3VzZWRWYWx1ZSxcbiAgICAgIGdldE9wdGlvbkxhYmVsID0gX3JlZi5nZXRPcHRpb25MYWJlbCxcbiAgICAgIHNlbGVjdFZhbHVlID0gX3JlZi5zZWxlY3RWYWx1ZTtcbiAgcmV0dXJuIFwidmFsdWUgXCIgKyBnZXRPcHRpb25MYWJlbChmb2N1c2VkVmFsdWUpICsgXCIgZm9jdXNlZCwgXCIgKyAoc2VsZWN0VmFsdWUuaW5kZXhPZihmb2N1c2VkVmFsdWUpICsgMSkgKyBcIiBvZiBcIiArIHNlbGVjdFZhbHVlLmxlbmd0aCArIFwiLlwiO1xufTtcbnZhciBvcHRpb25Gb2N1c0FyaWFNZXNzYWdlID0gZnVuY3Rpb24gb3B0aW9uRm9jdXNBcmlhTWVzc2FnZShfcmVmMikge1xuICB2YXIgZm9jdXNlZE9wdGlvbiA9IF9yZWYyLmZvY3VzZWRPcHRpb24sXG4gICAgICBnZXRPcHRpb25MYWJlbCA9IF9yZWYyLmdldE9wdGlvbkxhYmVsLFxuICAgICAgb3B0aW9ucyA9IF9yZWYyLm9wdGlvbnM7XG4gIHJldHVybiBcIm9wdGlvbiBcIiArIGdldE9wdGlvbkxhYmVsKGZvY3VzZWRPcHRpb24pICsgXCIgZm9jdXNlZFwiICsgKGZvY3VzZWRPcHRpb24uaXNEaXNhYmxlZCA/ICcgZGlzYWJsZWQnIDogJycpICsgXCIsIFwiICsgKG9wdGlvbnMuaW5kZXhPZihmb2N1c2VkT3B0aW9uKSArIDEpICsgXCIgb2YgXCIgKyBvcHRpb25zLmxlbmd0aCArIFwiLlwiO1xufTtcbnZhciByZXN1bHRzQXJpYU1lc3NhZ2UgPSBmdW5jdGlvbiByZXN1bHRzQXJpYU1lc3NhZ2UoX3JlZjMpIHtcbiAgdmFyIGlucHV0VmFsdWUgPSBfcmVmMy5pbnB1dFZhbHVlLFxuICAgICAgc2NyZWVuUmVhZGVyTWVzc2FnZSA9IF9yZWYzLnNjcmVlblJlYWRlck1lc3NhZ2U7XG4gIHJldHVybiBcIlwiICsgc2NyZWVuUmVhZGVyTWVzc2FnZSArIChpbnB1dFZhbHVlID8gJyBmb3Igc2VhcmNoIHRlcm0gJyArIGlucHV0VmFsdWUgOiAnJykgKyBcIi5cIjtcbn07XG5cbnZhciBmb3JtYXRHcm91cExhYmVsID0gZnVuY3Rpb24gZm9ybWF0R3JvdXBMYWJlbChncm91cCkge1xuICByZXR1cm4gZ3JvdXAubGFiZWw7XG59O1xudmFyIGdldE9wdGlvbkxhYmVsID0gZnVuY3Rpb24gZ2V0T3B0aW9uTGFiZWwob3B0aW9uKSB7XG4gIHJldHVybiBvcHRpb24ubGFiZWw7XG59O1xudmFyIGdldE9wdGlvblZhbHVlID0gZnVuY3Rpb24gZ2V0T3B0aW9uVmFsdWUob3B0aW9uKSB7XG4gIHJldHVybiBvcHRpb24udmFsdWU7XG59O1xudmFyIGlzT3B0aW9uRGlzYWJsZWQgPSBmdW5jdGlvbiBpc09wdGlvbkRpc2FibGVkKG9wdGlvbikge1xuICByZXR1cm4gISFvcHRpb24uaXNEaXNhYmxlZDtcbn07XG5cbmZ1bmN0aW9uIF9leHRlbmRzJDMoKSB7IF9leHRlbmRzJDMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMkMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG52YXIgZGVmYXVsdFN0eWxlcyA9IHtcbiAgY2xlYXJJbmRpY2F0b3I6IGNsZWFySW5kaWNhdG9yQ1NTLFxuICBjb250YWluZXI6IGNvbnRhaW5lckNTUyxcbiAgY29udHJvbDogY3NzLFxuICBkcm9wZG93bkluZGljYXRvcjogZHJvcGRvd25JbmRpY2F0b3JDU1MsXG4gIGdyb3VwOiBncm91cENTUyxcbiAgZ3JvdXBIZWFkaW5nOiBncm91cEhlYWRpbmdDU1MsXG4gIGluZGljYXRvcnNDb250YWluZXI6IGluZGljYXRvcnNDb250YWluZXJDU1MsXG4gIGluZGljYXRvclNlcGFyYXRvcjogaW5kaWNhdG9yU2VwYXJhdG9yQ1NTLFxuICBpbnB1dDogaW5wdXRDU1MsXG4gIGxvYWRpbmdJbmRpY2F0b3I6IGxvYWRpbmdJbmRpY2F0b3JDU1MsXG4gIGxvYWRpbmdNZXNzYWdlOiBsb2FkaW5nTWVzc2FnZUNTUyxcbiAgbWVudTogbWVudUNTUyxcbiAgbWVudUxpc3Q6IG1lbnVMaXN0Q1NTLFxuICBtZW51UG9ydGFsOiBtZW51UG9ydGFsQ1NTLFxuICBtdWx0aVZhbHVlOiBtdWx0aVZhbHVlQ1NTLFxuICBtdWx0aVZhbHVlTGFiZWw6IG11bHRpVmFsdWVMYWJlbENTUyxcbiAgbXVsdGlWYWx1ZVJlbW92ZTogbXVsdGlWYWx1ZVJlbW92ZUNTUyxcbiAgbm9PcHRpb25zTWVzc2FnZTogbm9PcHRpb25zTWVzc2FnZUNTUyxcbiAgb3B0aW9uOiBvcHRpb25DU1MsXG4gIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlckNTUyxcbiAgc2luZ2xlVmFsdWU6IGNzcyQxLFxuICB2YWx1ZUNvbnRhaW5lcjogdmFsdWVDb250YWluZXJDU1Ncbn07IC8vIE1lcmdlIFV0aWxpdHlcbi8vIEFsbG93cyBjb25zdW1lcnMgdG8gZXh0ZW5kIGEgYmFzZSBTZWxlY3Qgd2l0aCBhZGRpdGlvbmFsIHN0eWxlc1xuXG5mdW5jdGlvbiBtZXJnZVN0eWxlcyhzb3VyY2UsIHRhcmdldCkge1xuICBpZiAodGFyZ2V0ID09PSB2b2lkIDApIHtcbiAgICB0YXJnZXQgPSB7fTtcbiAgfVxuXG4gIC8vIGluaXRpYWxpemUgd2l0aCBzb3VyY2Ugc3R5bGVzXG4gIHZhciBzdHlsZXMgPSBfZXh0ZW5kcyQzKHt9LCBzb3VyY2UpOyAvLyBtYXNzYWdlIGluIHRhcmdldCBzdHlsZXNcblxuXG4gIE9iamVjdC5rZXlzKHRhcmdldCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKHNvdXJjZVtrZXldKSB7XG4gICAgICBzdHlsZXNba2V5XSA9IGZ1bmN0aW9uIChyc0NzcywgcHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtrZXldKHNvdXJjZVtrZXldKHJzQ3NzLCBwcm9wcyksIHByb3BzKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc1trZXldID0gdGFyZ2V0W2tleV07XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHN0eWxlcztcbn1cblxudmFyIGNvbG9ycyA9IHtcbiAgcHJpbWFyeTogJyMyNjg0RkYnLFxuICBwcmltYXJ5NzU6ICcjNEM5QUZGJyxcbiAgcHJpbWFyeTUwOiAnI0IyRDRGRicsXG4gIHByaW1hcnkyNTogJyNERUVCRkYnLFxuICBkYW5nZXI6ICcjREUzNTBCJyxcbiAgZGFuZ2VyTGlnaHQ6ICcjRkZCREFEJyxcbiAgbmV1dHJhbDA6ICdoc2woMCwgMCUsIDEwMCUpJyxcbiAgbmV1dHJhbDU6ICdoc2woMCwgMCUsIDk1JSknLFxuICBuZXV0cmFsMTA6ICdoc2woMCwgMCUsIDkwJSknLFxuICBuZXV0cmFsMjA6ICdoc2woMCwgMCUsIDgwJSknLFxuICBuZXV0cmFsMzA6ICdoc2woMCwgMCUsIDcwJSknLFxuICBuZXV0cmFsNDA6ICdoc2woMCwgMCUsIDYwJSknLFxuICBuZXV0cmFsNTA6ICdoc2woMCwgMCUsIDUwJSknLFxuICBuZXV0cmFsNjA6ICdoc2woMCwgMCUsIDQwJSknLFxuICBuZXV0cmFsNzA6ICdoc2woMCwgMCUsIDMwJSknLFxuICBuZXV0cmFsODA6ICdoc2woMCwgMCUsIDIwJSknLFxuICBuZXV0cmFsOTA6ICdoc2woMCwgMCUsIDEwJSknXG59O1xudmFyIGJvcmRlclJhZGl1cyA9IDQ7IC8vIFVzZWQgdG8gY2FsY3VsYXRlIGNvbnNpc3RlbnQgbWFyZ2luL3BhZGRpbmcgb24gZWxlbWVudHNcblxudmFyIGJhc2VVbml0ID0gNDsgLy8gVGhlIG1pbmltdW0gaGVpZ2h0IG9mIHRoZSBjb250cm9sXG5cbnZhciBjb250cm9sSGVpZ2h0ID0gMzg7IC8vIFRoZSBhbW91bnQgb2Ygc3BhY2UgYmV0d2VlbiB0aGUgY29udHJvbCBhbmQgbWVudSAqL1xuXG52YXIgbWVudUd1dHRlciA9IGJhc2VVbml0ICogMjtcbnZhciBzcGFjaW5nID0ge1xuICBiYXNlVW5pdDogYmFzZVVuaXQsXG4gIGNvbnRyb2xIZWlnaHQ6IGNvbnRyb2xIZWlnaHQsXG4gIG1lbnVHdXR0ZXI6IG1lbnVHdXR0ZXJcbn07XG52YXIgZGVmYXVsdFRoZW1lID0ge1xuICBib3JkZXJSYWRpdXM6IGJvcmRlclJhZGl1cyxcbiAgY29sb3JzOiBjb2xvcnMsXG4gIHNwYWNpbmc6IHNwYWNpbmdcbn07XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJDIoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZXh0ZW5kcyQ0KCkgeyBfZXh0ZW5kcyQ0ID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzJDQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHNMb29zZSQ0KHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGJhY2tzcGFjZVJlbW92ZXNWYWx1ZTogdHJ1ZSxcbiAgYmx1cklucHV0T25TZWxlY3Q6IGlzVG91Y2hDYXBhYmxlKCksXG4gIGNhcHR1cmVNZW51U2Nyb2xsOiAhaXNUb3VjaENhcGFibGUoKSxcbiAgY2xvc2VNZW51T25TZWxlY3Q6IHRydWUsXG4gIGNsb3NlTWVudU9uU2Nyb2xsOiBmYWxzZSxcbiAgY29tcG9uZW50czoge30sXG4gIGNvbnRyb2xTaG91bGRSZW5kZXJWYWx1ZTogdHJ1ZSxcbiAgZXNjYXBlQ2xlYXJzVmFsdWU6IGZhbHNlLFxuICBmaWx0ZXJPcHRpb246IGNyZWF0ZUZpbHRlcigpLFxuICBmb3JtYXRHcm91cExhYmVsOiBmb3JtYXRHcm91cExhYmVsLFxuICBnZXRPcHRpb25MYWJlbDogZ2V0T3B0aW9uTGFiZWwsXG4gIGdldE9wdGlvblZhbHVlOiBnZXRPcHRpb25WYWx1ZSxcbiAgaXNEaXNhYmxlZDogZmFsc2UsXG4gIGlzTG9hZGluZzogZmFsc2UsXG4gIGlzTXVsdGk6IGZhbHNlLFxuICBpc1J0bDogZmFsc2UsXG4gIGlzU2VhcmNoYWJsZTogdHJ1ZSxcbiAgaXNPcHRpb25EaXNhYmxlZDogaXNPcHRpb25EaXNhYmxlZCxcbiAgbG9hZGluZ01lc3NhZ2U6IGZ1bmN0aW9uIGxvYWRpbmdNZXNzYWdlKCkge1xuICAgIHJldHVybiAnTG9hZGluZy4uLic7XG4gIH0sXG4gIG1heE1lbnVIZWlnaHQ6IDMwMCxcbiAgbWluTWVudUhlaWdodDogMTQwLFxuICBtZW51SXNPcGVuOiBmYWxzZSxcbiAgbWVudVBsYWNlbWVudDogJ2JvdHRvbScsXG4gIG1lbnVQb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgbWVudVNob3VsZEJsb2NrU2Nyb2xsOiBmYWxzZSxcbiAgbWVudVNob3VsZFNjcm9sbEludG9WaWV3OiAhaXNNb2JpbGVEZXZpY2UoKSxcbiAgbm9PcHRpb25zTWVzc2FnZTogZnVuY3Rpb24gbm9PcHRpb25zTWVzc2FnZSgpIHtcbiAgICByZXR1cm4gJ05vIG9wdGlvbnMnO1xuICB9LFxuICBvcGVuTWVudU9uRm9jdXM6IGZhbHNlLFxuICBvcGVuTWVudU9uQ2xpY2s6IHRydWUsXG4gIG9wdGlvbnM6IFtdLFxuICBwYWdlU2l6ZTogNSxcbiAgcGxhY2Vob2xkZXI6ICdTZWxlY3QuLi4nLFxuICBzY3JlZW5SZWFkZXJTdGF0dXM6IGZ1bmN0aW9uIHNjcmVlblJlYWRlclN0YXR1cyhfcmVmKSB7XG4gICAgdmFyIGNvdW50ID0gX3JlZi5jb3VudDtcbiAgICByZXR1cm4gY291bnQgKyBcIiByZXN1bHRcIiArIChjb3VudCAhPT0gMSA/ICdzJyA6ICcnKSArIFwiIGF2YWlsYWJsZVwiO1xuICB9LFxuICBzdHlsZXM6IHt9LFxuICB0YWJJbmRleDogJzAnLFxuICB0YWJTZWxlY3RzVmFsdWU6IHRydWVcbn07XG52YXIgaW5zdGFuY2VJZCA9IDE7XG5cbnZhciBTZWxlY3QgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UkNChTZWxlY3QsIF9Db21wb25lbnQpO1xuXG4gIC8vIE1pc2MuIEluc3RhbmNlIFByb3BlcnRpZXNcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFRPRE9cbiAgLy8gUmVmc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gTGlmZWN5Y2xlXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICBmdW5jdGlvbiBTZWxlY3QoX3Byb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgX3Byb3BzKSB8fCB0aGlzO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgYXJpYUxpdmVTZWxlY3Rpb246ICcnLFxuICAgICAgYXJpYUxpdmVDb250ZXh0OiAnJyxcbiAgICAgIGZvY3VzZWRPcHRpb246IG51bGwsXG4gICAgICBmb2N1c2VkVmFsdWU6IG51bGwsXG4gICAgICBpbnB1dElzSGlkZGVuOiBmYWxzZSxcbiAgICAgIGlzRm9jdXNlZDogZmFsc2UsXG4gICAgICBtZW51T3B0aW9uczoge1xuICAgICAgICByZW5kZXI6IFtdLFxuICAgICAgICBmb2N1c2FibGU6IFtdXG4gICAgICB9LFxuICAgICAgc2VsZWN0VmFsdWU6IFtdXG4gICAgfTtcbiAgICBfdGhpcy5ibG9ja09wdGlvbkhvdmVyID0gZmFsc2U7XG4gICAgX3RoaXMuaXNDb21wb3NpbmcgPSBmYWxzZTtcbiAgICBfdGhpcy5jbGVhckZvY3VzVmFsdWVPblVwZGF0ZSA9IGZhbHNlO1xuICAgIF90aGlzLmNvbW1vblByb3BzID0gdm9pZCAwO1xuICAgIF90aGlzLmNvbXBvbmVudHMgPSB2b2lkIDA7XG4gICAgX3RoaXMuaGFzR3JvdXBzID0gZmFsc2U7XG4gICAgX3RoaXMuaW5pdGlhbFRvdWNoWCA9IDA7XG4gICAgX3RoaXMuaW5pdGlhbFRvdWNoWSA9IDA7XG4gICAgX3RoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlID0gdm9pZCAwO1xuICAgIF90aGlzLmluc3RhbmNlUHJlZml4ID0gJyc7XG4gICAgX3RoaXMub3BlbkFmdGVyRm9jdXMgPSBmYWxzZTtcbiAgICBfdGhpcy5zY3JvbGxUb0ZvY3VzZWRPcHRpb25PblVwZGF0ZSA9IGZhbHNlO1xuICAgIF90aGlzLnVzZXJJc0RyYWdnaW5nID0gdm9pZCAwO1xuICAgIF90aGlzLmNvbnRyb2xSZWYgPSBudWxsO1xuXG4gICAgX3RoaXMuZ2V0Q29udHJvbFJlZiA9IGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLmNvbnRyb2xSZWYgPSByZWY7XG4gICAgfTtcblxuICAgIF90aGlzLmZvY3VzZWRPcHRpb25SZWYgPSBudWxsO1xuXG4gICAgX3RoaXMuZ2V0Rm9jdXNlZE9wdGlvblJlZiA9IGZ1bmN0aW9uIChyZWYpIHtcbiAgICAgIF90aGlzLmZvY3VzZWRPcHRpb25SZWYgPSByZWY7XG4gICAgfTtcblxuICAgIF90aGlzLm1lbnVMaXN0UmVmID0gbnVsbDtcblxuICAgIF90aGlzLmdldE1lbnVMaXN0UmVmID0gZnVuY3Rpb24gKHJlZikge1xuICAgICAgX3RoaXMubWVudUxpc3RSZWYgPSByZWY7XG4gICAgfTtcblxuICAgIF90aGlzLmlucHV0UmVmID0gbnVsbDtcblxuICAgIF90aGlzLmdldElucHV0UmVmID0gZnVuY3Rpb24gKHJlZikge1xuICAgICAgX3RoaXMuaW5wdXRSZWYgPSByZWY7XG4gICAgfTtcblxuICAgIF90aGlzLmNhY2hlQ29tcG9uZW50cyA9IGZ1bmN0aW9uIChjb21wb25lbnRzKSB7XG4gICAgICBfdGhpcy5jb21wb25lbnRzID0gZGVmYXVsdENvbXBvbmVudHMoe1xuICAgICAgICBjb21wb25lbnRzOiBjb21wb25lbnRzXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuZm9jdXMgPSBfdGhpcy5mb2N1c0lucHV0O1xuICAgIF90aGlzLmJsdXIgPSBfdGhpcy5ibHVySW5wdXQ7XG5cbiAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgYWN0aW9uTWV0YSkge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgb25DaGFuZ2UgPSBfdGhpcyRwcm9wcy5vbkNoYW5nZSxcbiAgICAgICAgICBuYW1lID0gX3RoaXMkcHJvcHMubmFtZTtcbiAgICAgIG9uQ2hhbmdlKG5ld1ZhbHVlLCBfZXh0ZW5kcyQ0KHt9LCBhY3Rpb25NZXRhLCB7XG4gICAgICAgIG5hbWU6IG5hbWVcbiAgICAgIH0pKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuc2V0VmFsdWUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGFjdGlvbiwgb3B0aW9uKSB7XG4gICAgICBpZiAoYWN0aW9uID09PSB2b2lkIDApIHtcbiAgICAgICAgYWN0aW9uID0gJ3NldC12YWx1ZSc7XG4gICAgICB9XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjbG9zZU1lbnVPblNlbGVjdCA9IF90aGlzJHByb3BzMi5jbG9zZU1lbnVPblNlbGVjdCxcbiAgICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMyLmlzTXVsdGk7XG5cbiAgICAgIF90aGlzLm9uSW5wdXRDaGFuZ2UoJycsIHtcbiAgICAgICAgYWN0aW9uOiAnc2V0LXZhbHVlJ1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChjbG9zZU1lbnVPblNlbGVjdCkge1xuICAgICAgICBfdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSAhaXNNdWx0aTtcblxuICAgICAgICBfdGhpcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgfSAvLyB3aGVuIHRoZSBzZWxlY3QgdmFsdWUgc2hvdWxkIGNoYW5nZSwgd2Ugc2hvdWxkIHJlc2V0IGZvY3VzZWRWYWx1ZVxuXG5cbiAgICAgIF90aGlzLmNsZWFyRm9jdXNWYWx1ZU9uVXBkYXRlID0gdHJ1ZTtcblxuICAgICAgX3RoaXMub25DaGFuZ2UobmV3VmFsdWUsIHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIG9wdGlvbjogb3B0aW9uXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuc2VsZWN0T3B0aW9uID0gZnVuY3Rpb24gKG5ld1ZhbHVlKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgYmx1cklucHV0T25TZWxlY3QgPSBfdGhpcyRwcm9wczMuYmx1cklucHV0T25TZWxlY3QsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzMy5pc011bHRpO1xuICAgICAgdmFyIHNlbGVjdFZhbHVlID0gX3RoaXMuc3RhdGUuc2VsZWN0VmFsdWU7XG5cbiAgICAgIGlmIChpc011bHRpKSB7XG4gICAgICAgIGlmIChfdGhpcy5pc09wdGlvblNlbGVjdGVkKG5ld1ZhbHVlLCBzZWxlY3RWYWx1ZSkpIHtcbiAgICAgICAgICB2YXIgY2FuZGlkYXRlID0gX3RoaXMuZ2V0T3B0aW9uVmFsdWUobmV3VmFsdWUpO1xuXG4gICAgICAgICAgX3RoaXMuc2V0VmFsdWUoc2VsZWN0VmFsdWUuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0T3B0aW9uVmFsdWUoaSkgIT09IGNhbmRpZGF0ZTtcbiAgICAgICAgICB9KSwgJ2Rlc2VsZWN0LW9wdGlvbicsIG5ld1ZhbHVlKTtcblxuICAgICAgICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVTZWxlY3Rpb24oe1xuICAgICAgICAgICAgZXZlbnQ6ICdkZXNlbGVjdC1vcHRpb24nLFxuICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMuZ2V0T3B0aW9uTGFiZWwobmV3VmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKCFfdGhpcy5pc09wdGlvbkRpc2FibGVkKG5ld1ZhbHVlLCBzZWxlY3RWYWx1ZSkpIHtcbiAgICAgICAgICAgIF90aGlzLnNldFZhbHVlKFtdLmNvbmNhdChzZWxlY3RWYWx1ZSwgW25ld1ZhbHVlXSksICdzZWxlY3Qtb3B0aW9uJywgbmV3VmFsdWUpO1xuXG4gICAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGFubm91bmNlIHRoYXQgb3B0aW9uIGlzIGRpc2FibGVkXG4gICAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSksXG4gICAgICAgICAgICAgICAgaXNEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghX3RoaXMuaXNPcHRpb25EaXNhYmxlZChuZXdWYWx1ZSwgc2VsZWN0VmFsdWUpKSB7XG4gICAgICAgICAgX3RoaXMuc2V0VmFsdWUobmV3VmFsdWUsICdzZWxlY3Qtb3B0aW9uJyk7XG5cbiAgICAgICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgICAgIGV2ZW50OiAnc2VsZWN0LW9wdGlvbicsXG4gICAgICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgICAgIHZhbHVlOiBfdGhpcy5nZXRPcHRpb25MYWJlbChuZXdWYWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBhbm5vdW5jZSB0aGF0IG9wdGlvbiBpcyBkaXNhYmxlZFxuICAgICAgICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVTZWxlY3Rpb24oe1xuICAgICAgICAgICAgZXZlbnQ6ICdzZWxlY3Qtb3B0aW9uJyxcbiAgICAgICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IF90aGlzLmdldE9wdGlvbkxhYmVsKG5ld1ZhbHVlKSxcbiAgICAgICAgICAgICAgaXNEaXNhYmxlZDogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChibHVySW5wdXRPblNlbGVjdCkge1xuICAgICAgICBfdGhpcy5ibHVySW5wdXQoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMucmVtb3ZlVmFsdWUgPSBmdW5jdGlvbiAocmVtb3ZlZFZhbHVlKSB7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSBfdGhpcy5zdGF0ZS5zZWxlY3RWYWx1ZTtcblxuICAgICAgdmFyIGNhbmRpZGF0ZSA9IF90aGlzLmdldE9wdGlvblZhbHVlKHJlbW92ZWRWYWx1ZSk7XG5cbiAgICAgIHZhciBuZXdWYWx1ZSA9IHNlbGVjdFZhbHVlLmZpbHRlcihmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gX3RoaXMuZ2V0T3B0aW9uVmFsdWUoaSkgIT09IGNhbmRpZGF0ZTtcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZShuZXdWYWx1ZS5sZW5ndGggPyBuZXdWYWx1ZSA6IG51bGwsIHtcbiAgICAgICAgYWN0aW9uOiAncmVtb3ZlLXZhbHVlJyxcbiAgICAgICAgcmVtb3ZlZFZhbHVlOiByZW1vdmVkVmFsdWVcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgZXZlbnQ6ICdyZW1vdmUtdmFsdWUnLFxuICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgdmFsdWU6IHJlbW92ZWRWYWx1ZSA/IF90aGlzLmdldE9wdGlvbkxhYmVsKHJlbW92ZWRWYWx1ZSkgOiAnJ1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMuZm9jdXNJbnB1dCgpO1xuICAgIH07XG5cbiAgICBfdGhpcy5jbGVhclZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGlzTXVsdGkgPSBfdGhpcy5wcm9wcy5pc011bHRpO1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZShpc011bHRpID8gW10gOiBudWxsLCB7XG4gICAgICAgIGFjdGlvbjogJ2NsZWFyJ1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF90aGlzLnBvcFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNlbGVjdFZhbHVlID0gX3RoaXMuc3RhdGUuc2VsZWN0VmFsdWU7XG4gICAgICB2YXIgbGFzdFNlbGVjdGVkVmFsdWUgPSBzZWxlY3RWYWx1ZVtzZWxlY3RWYWx1ZS5sZW5ndGggLSAxXTtcbiAgICAgIHZhciBuZXdWYWx1ZSA9IHNlbGVjdFZhbHVlLnNsaWNlKDAsIHNlbGVjdFZhbHVlLmxlbmd0aCAtIDEpO1xuXG4gICAgICBfdGhpcy5hbm5vdW5jZUFyaWFMaXZlU2VsZWN0aW9uKHtcbiAgICAgICAgZXZlbnQ6ICdwb3AtdmFsdWUnLFxuICAgICAgICBjb250ZXh0OiB7XG4gICAgICAgICAgdmFsdWU6IGxhc3RTZWxlY3RlZFZhbHVlID8gX3RoaXMuZ2V0T3B0aW9uTGFiZWwobGFzdFNlbGVjdGVkVmFsdWUpIDogJydcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLm9uQ2hhbmdlKG5ld1ZhbHVlLmxlbmd0aCA/IG5ld1ZhbHVlIDogbnVsbCwge1xuICAgICAgICBhY3Rpb246ICdwb3AtdmFsdWUnLFxuICAgICAgICByZW1vdmVkVmFsdWU6IGxhc3RTZWxlY3RlZFZhbHVlXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuZ2V0T3B0aW9uTGFiZWwgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgcmV0dXJuIF90aGlzLnByb3BzLmdldE9wdGlvbkxhYmVsKGRhdGEpO1xuICAgIH07XG5cbiAgICBfdGhpcy5nZXRPcHRpb25WYWx1ZSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICByZXR1cm4gX3RoaXMucHJvcHMuZ2V0T3B0aW9uVmFsdWUoZGF0YSk7XG4gICAgfTtcblxuICAgIF90aGlzLmdldFN0eWxlcyA9IGZ1bmN0aW9uIChrZXksIHByb3BzKSB7XG4gICAgICB2YXIgYmFzZSA9IGRlZmF1bHRTdHlsZXNba2V5XShwcm9wcyk7XG4gICAgICBiYXNlLmJveFNpemluZyA9ICdib3JkZXItYm94JztcbiAgICAgIHZhciBjdXN0b20gPSBfdGhpcy5wcm9wcy5zdHlsZXNba2V5XTtcbiAgICAgIHJldHVybiBjdXN0b20gPyBjdXN0b20oYmFzZSwgcHJvcHMpIDogYmFzZTtcbiAgICB9O1xuXG4gICAgX3RoaXMuZ2V0RWxlbWVudElkID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBfdGhpcy5pbnN0YW5jZVByZWZpeCArIFwiLVwiICsgZWxlbWVudDtcbiAgICB9O1xuXG4gICAgX3RoaXMuZ2V0QWN0aXZlRGVzY2VuZGVudElkID0gZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG1lbnVJc09wZW4gPSBfdGhpcy5wcm9wcy5tZW51SXNPcGVuO1xuICAgICAgdmFyIF90aGlzJHN0YXRlID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgbWVudU9wdGlvbnMgPSBfdGhpcyRzdGF0ZS5tZW51T3B0aW9ucyxcbiAgICAgICAgICBmb2N1c2VkT3B0aW9uID0gX3RoaXMkc3RhdGUuZm9jdXNlZE9wdGlvbjtcbiAgICAgIGlmICghZm9jdXNlZE9wdGlvbiB8fCAhbWVudUlzT3BlbikgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIHZhciBpbmRleCA9IG1lbnVPcHRpb25zLmZvY3VzYWJsZS5pbmRleE9mKGZvY3VzZWRPcHRpb24pO1xuICAgICAgdmFyIG9wdGlvbiA9IG1lbnVPcHRpb25zLnJlbmRlcltpbmRleF07XG4gICAgICByZXR1cm4gb3B0aW9uICYmIG9wdGlvbi5rZXk7XG4gICAgfTtcblxuICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVTZWxlY3Rpb24gPSBmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgIHZhciBldmVudCA9IF9yZWYyLmV2ZW50LFxuICAgICAgICAgIGNvbnRleHQgPSBfcmVmMi5jb250ZXh0O1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFyaWFMaXZlU2VsZWN0aW9uOiB2YWx1ZUV2ZW50QXJpYU1lc3NhZ2UoZXZlbnQsIGNvbnRleHQpXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuYW5ub3VuY2VBcmlhTGl2ZUNvbnRleHQgPSBmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBldmVudCA9IF9yZWYzLmV2ZW50LFxuICAgICAgICAgIGNvbnRleHQgPSBfcmVmMy5jb250ZXh0O1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGFyaWFMaXZlQ29udGV4dDogaW5zdHJ1Y3Rpb25zQXJpYU1lc3NhZ2UoZXZlbnQsIF9leHRlbmRzJDQoe30sIGNvbnRleHQsIHtcbiAgICAgICAgICBsYWJlbDogX3RoaXMucHJvcHNbJ2FyaWEtbGFiZWwnXVxuICAgICAgICB9KSlcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5vbk1lbnVNb3VzZURvd24gPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5idXR0b24gIT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIF90aGlzLmZvY3VzSW5wdXQoKTtcbiAgICB9O1xuXG4gICAgX3RoaXMub25NZW51TW91c2VNb3ZlID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBfdGhpcy5ibG9ja09wdGlvbkhvdmVyID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLm9uQ29udHJvbE1vdXNlRG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIG9wZW5NZW51T25DbGljayA9IF90aGlzLnByb3BzLm9wZW5NZW51T25DbGljaztcblxuICAgICAgaWYgKCFfdGhpcy5zdGF0ZS5pc0ZvY3VzZWQpIHtcbiAgICAgICAgaWYgKG9wZW5NZW51T25DbGljaykge1xuICAgICAgICAgIF90aGlzLm9wZW5BZnRlckZvY3VzID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzLmZvY3VzSW5wdXQoKTtcbiAgICAgIH0gZWxzZSBpZiAoIV90aGlzLnByb3BzLm1lbnVJc09wZW4pIHtcbiAgICAgICAgaWYgKG9wZW5NZW51T25DbGljaykge1xuICAgICAgICAgIF90aGlzLm9wZW5NZW51KCdmaXJzdCcpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIC8vICRGbG93Rml4TWVcbiAgICAgICAgZXZlbnQudGFyZ2V0LnRhZ05hbWUgIT09ICdJTlBVVCcgJiYgZXZlbnQudGFyZ2V0LnRhZ05hbWUgIT09ICdURVhUQVJFQScpIHtcbiAgICAgICAgICBfdGhpcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICggLy8gJEZsb3dGaXhNZVxuICAgICAgZXZlbnQudGFyZ2V0LnRhZ05hbWUgIT09ICdJTlBVVCcgJiYgZXZlbnQudGFyZ2V0LnRhZ05hbWUgIT09ICdURVhUQVJFQScpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMub25Ecm9wZG93bkluZGljYXRvck1vdXNlRG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgLy8gaWdub3JlIG1vdXNlIGV2ZW50cyB0aGF0IHdlcmVuJ3QgdHJpZ2dlcmVkIGJ5IHRoZSBwcmltYXJ5IGJ1dHRvblxuICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5pc0Rpc2FibGVkKSByZXR1cm47XG4gICAgICB2YXIgX3RoaXMkcHJvcHM0ID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNC5pc011bHRpLFxuICAgICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczQubWVudUlzT3BlbjtcblxuICAgICAgX3RoaXMuZm9jdXNJbnB1dCgpO1xuXG4gICAgICBpZiAobWVudUlzT3Blbikge1xuICAgICAgICBfdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSAhaXNNdWx0aTtcblxuICAgICAgICBfdGhpcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG4gICAgICB9XG5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgX3RoaXMub25DbGVhckluZGljYXRvck1vdXNlRG93biA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgLy8gaWdub3JlIG1vdXNlIGV2ZW50cyB0aGF0IHdlcmVuJ3QgdHJpZ2dlcmVkIGJ5IHRoZSBwcmltYXJ5IGJ1dHRvblxuICAgICAgaWYgKGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICdtb3VzZWRvd24nICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzLmNsZWFyVmFsdWUoKTtcblxuICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBfdGhpcy5vcGVuQWZ0ZXJGb2N1cyA9IGZhbHNlO1xuXG4gICAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3RvdWNoZW5kJykge1xuICAgICAgICBfdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuZm9jdXNJbnB1dCgpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3RoaXMub25TY3JvbGwgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICh0eXBlb2YgX3RoaXMucHJvcHMuY2xvc2VNZW51T25TY3JvbGwgPT09ICdib29sZWFuJykge1xuICAgICAgICBpZiAoZXZlbnQudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQgJiYgaXNEb2N1bWVudEVsZW1lbnQoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICAgIF90aGlzLnByb3BzLm9uTWVudUNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIF90aGlzLnByb3BzLmNsb3NlTWVudU9uU2Nyb2xsID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGlmIChfdGhpcy5wcm9wcy5jbG9zZU1lbnVPblNjcm9sbChldmVudCkpIHtcbiAgICAgICAgICBfdGhpcy5wcm9wcy5vbk1lbnVDbG9zZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIF90aGlzLm9uQ29tcG9zaXRpb25TdGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmlzQ29tcG9zaW5nID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgX3RoaXMub25Db21wb3NpdGlvbkVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmlzQ29tcG9zaW5nID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLm9uVG91Y2hTdGFydCA9IGZ1bmN0aW9uIChfcmVmNCkge1xuICAgICAgdmFyIHRvdWNoZXMgPSBfcmVmNC50b3VjaGVzO1xuICAgICAgdmFyIHRvdWNoID0gdG91Y2hlcy5pdGVtKDApO1xuXG4gICAgICBpZiAoIXRvdWNoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuaW5pdGlhbFRvdWNoWCA9IHRvdWNoLmNsaWVudFg7XG4gICAgICBfdGhpcy5pbml0aWFsVG91Y2hZID0gdG91Y2guY2xpZW50WTtcbiAgICAgIF90aGlzLnVzZXJJc0RyYWdnaW5nID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLm9uVG91Y2hNb3ZlID0gZnVuY3Rpb24gKF9yZWY1KSB7XG4gICAgICB2YXIgdG91Y2hlcyA9IF9yZWY1LnRvdWNoZXM7XG4gICAgICB2YXIgdG91Y2ggPSB0b3VjaGVzLml0ZW0oMCk7XG5cbiAgICAgIGlmICghdG91Y2gpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGVsdGFYID0gTWF0aC5hYnModG91Y2guY2xpZW50WCAtIF90aGlzLmluaXRpYWxUb3VjaFgpO1xuICAgICAgdmFyIGRlbHRhWSA9IE1hdGguYWJzKHRvdWNoLmNsaWVudFkgLSBfdGhpcy5pbml0aWFsVG91Y2hZKTtcbiAgICAgIHZhciBtb3ZlVGhyZXNob2xkID0gNTtcbiAgICAgIF90aGlzLnVzZXJJc0RyYWdnaW5nID0gZGVsdGFYID4gbW92ZVRocmVzaG9sZCB8fCBkZWx0YVkgPiBtb3ZlVGhyZXNob2xkO1xuICAgIH07XG5cbiAgICBfdGhpcy5vblRvdWNoRW5kID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMudXNlcklzRHJhZ2dpbmcpIHJldHVybjsgLy8gY2xvc2UgdGhlIG1lbnUgaWYgdGhlIHVzZXIgdGFwcyBvdXRzaWRlXG4gICAgICAvLyB3ZSdyZSBjaGVja2luZyBvbiBldmVudC50YXJnZXQgaGVyZSBpbnN0ZWFkIG9mIGV2ZW50LmN1cnJlbnRUYXJnZXQsIGJlY2F1c2Ugd2Ugd2FudCB0byBhc3NlcnQgaW5mb3JtYXRpb25cbiAgICAgIC8vIG9uIGV2ZW50cyBvbiBjaGlsZCBlbGVtZW50cywgbm90IHRoZSBkb2N1bWVudCAod2hpY2ggd2UndmUgYXR0YWNoZWQgdGhpcyBoYW5kbGVyIHRvKS5cblxuICAgICAgaWYgKF90aGlzLmNvbnRyb2xSZWYgJiYgIV90aGlzLmNvbnRyb2xSZWYuY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJiBfdGhpcy5tZW51TGlzdFJlZiAmJiAhX3RoaXMubWVudUxpc3RSZWYuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICBfdGhpcy5ibHVySW5wdXQoKTtcbiAgICAgIH0gLy8gcmVzZXQgbW92ZSB2YXJzXG5cblxuICAgICAgX3RoaXMuaW5pdGlhbFRvdWNoWCA9IDA7XG4gICAgICBfdGhpcy5pbml0aWFsVG91Y2hZID0gMDtcbiAgICB9O1xuXG4gICAgX3RoaXMub25Db250cm9sVG91Y2hFbmQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy51c2VySXNEcmFnZ2luZykgcmV0dXJuO1xuXG4gICAgICBfdGhpcy5vbkNvbnRyb2xNb3VzZURvd24oZXZlbnQpO1xuICAgIH07XG5cbiAgICBfdGhpcy5vbkNsZWFySW5kaWNhdG9yVG91Y2hFbmQgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmIChfdGhpcy51c2VySXNEcmFnZ2luZykgcmV0dXJuO1xuXG4gICAgICBfdGhpcy5vbkNsZWFySW5kaWNhdG9yTW91c2VEb3duKGV2ZW50KTtcbiAgICB9O1xuXG4gICAgX3RoaXMub25Ecm9wZG93bkluZGljYXRvclRvdWNoRW5kID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMudXNlcklzRHJhZ2dpbmcpIHJldHVybjtcblxuICAgICAgX3RoaXMub25Ecm9wZG93bkluZGljYXRvck1vdXNlRG93bihldmVudCk7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUlucHV0Q2hhbmdlID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgaW5wdXRWYWx1ZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWU7XG4gICAgICBfdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSBmYWxzZTtcblxuICAgICAgX3RoaXMub25JbnB1dENoYW5nZShpbnB1dFZhbHVlLCB7XG4gICAgICAgIGFjdGlvbjogJ2lucHV0LWNoYW5nZSdcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5vbk1lbnVPcGVuKCk7XG4gICAgfTtcblxuICAgIF90aGlzLm9uSW5wdXRGb2N1cyA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgdmFyIF90aGlzJHByb3BzNSA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIGlzU2VhcmNoYWJsZSA9IF90aGlzJHByb3BzNS5pc1NlYXJjaGFibGUsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNS5pc011bHRpO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMub25Gb2N1cykge1xuICAgICAgICBfdGhpcy5wcm9wcy5vbkZvY3VzKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlID0gZmFsc2U7XG5cbiAgICAgIF90aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgZXZlbnQ6ICdpbnB1dCcsXG4gICAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgICBpc1NlYXJjaGFibGU6IGlzU2VhcmNoYWJsZSxcbiAgICAgICAgICBpc011bHRpOiBpc011bHRpXG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzRm9jdXNlZDogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChfdGhpcy5vcGVuQWZ0ZXJGb2N1cyB8fCBfdGhpcy5wcm9wcy5vcGVuTWVudU9uRm9jdXMpIHtcbiAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG4gICAgICB9XG5cbiAgICAgIF90aGlzLm9wZW5BZnRlckZvY3VzID0gZmFsc2U7XG4gICAgfTtcblxuICAgIF90aGlzLm9uSW5wdXRCbHVyID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMubWVudUxpc3RSZWYgJiYgX3RoaXMubWVudUxpc3RSZWYuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpIHtcbiAgICAgICAgX3RoaXMuaW5wdXRSZWYuZm9jdXMoKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy5vbkJsdXIpIHtcbiAgICAgICAgX3RoaXMucHJvcHMub25CbHVyKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMub25JbnB1dENoYW5nZSgnJywge1xuICAgICAgICBhY3Rpb246ICdpbnB1dC1ibHVyJ1xuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLm9uTWVudUNsb3NlKCk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZm9jdXNlZFZhbHVlOiBudWxsLFxuICAgICAgICBpc0ZvY3VzZWQ6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMub25PcHRpb25Ib3ZlciA9IGZ1bmN0aW9uIChmb2N1c2VkT3B0aW9uKSB7XG4gICAgICBpZiAoX3RoaXMuYmxvY2tPcHRpb25Ib3ZlciB8fCBfdGhpcy5zdGF0ZS5mb2N1c2VkT3B0aW9uID09PSBmb2N1c2VkT3B0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBmb2N1c2VkT3B0aW9uOiBmb2N1c2VkT3B0aW9uXG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgX3RoaXMuc2hvdWxkSGlkZVNlbGVjdGVkT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczYgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBoaWRlU2VsZWN0ZWRPcHRpb25zID0gX3RoaXMkcHJvcHM2LmhpZGVTZWxlY3RlZE9wdGlvbnMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNi5pc011bHRpO1xuICAgICAgaWYgKGhpZGVTZWxlY3RlZE9wdGlvbnMgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGlzTXVsdGk7XG4gICAgICByZXR1cm4gaGlkZVNlbGVjdGVkT3B0aW9ucztcbiAgICB9O1xuXG4gICAgX3RoaXMub25LZXlEb3duID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHM3ID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgaXNNdWx0aSA9IF90aGlzJHByb3BzNy5pc011bHRpLFxuICAgICAgICAgIGJhY2tzcGFjZVJlbW92ZXNWYWx1ZSA9IF90aGlzJHByb3BzNy5iYWNrc3BhY2VSZW1vdmVzVmFsdWUsXG4gICAgICAgICAgZXNjYXBlQ2xlYXJzVmFsdWUgPSBfdGhpcyRwcm9wczcuZXNjYXBlQ2xlYXJzVmFsdWUsXG4gICAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzNy5pbnB1dFZhbHVlLFxuICAgICAgICAgIGlzQ2xlYXJhYmxlID0gX3RoaXMkcHJvcHM3LmlzQ2xlYXJhYmxlLFxuICAgICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczcuaXNEaXNhYmxlZCxcbiAgICAgICAgICBtZW51SXNPcGVuID0gX3RoaXMkcHJvcHM3Lm1lbnVJc09wZW4sXG4gICAgICAgICAgb25LZXlEb3duID0gX3RoaXMkcHJvcHM3Lm9uS2V5RG93bixcbiAgICAgICAgICB0YWJTZWxlY3RzVmFsdWUgPSBfdGhpcyRwcm9wczcudGFiU2VsZWN0c1ZhbHVlLFxuICAgICAgICAgIG9wZW5NZW51T25Gb2N1cyA9IF90aGlzJHByb3BzNy5vcGVuTWVudU9uRm9jdXM7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUyID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgZm9jdXNlZE9wdGlvbiA9IF90aGlzJHN0YXRlMi5mb2N1c2VkT3B0aW9uLFxuICAgICAgICAgIGZvY3VzZWRWYWx1ZSA9IF90aGlzJHN0YXRlMi5mb2N1c2VkVmFsdWUsXG4gICAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTIuc2VsZWN0VmFsdWU7XG4gICAgICBpZiAoaXNEaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICBpZiAodHlwZW9mIG9uS2V5RG93biA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBvbktleURvd24oZXZlbnQpO1xuXG4gICAgICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9IC8vIEJsb2NrIG9wdGlvbiBob3ZlciBldmVudHMgd2hlbiB0aGUgdXNlciBoYXMganVzdCBwcmVzc2VkIGEga2V5XG5cblxuICAgICAgX3RoaXMuYmxvY2tPcHRpb25Ib3ZlciA9IHRydWU7XG5cbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgIGNhc2UgJ0Fycm93TGVmdCc6XG4gICAgICAgICAgaWYgKCFpc011bHRpIHx8IGlucHV0VmFsdWUpIHJldHVybjtcblxuICAgICAgICAgIF90aGlzLmZvY3VzVmFsdWUoJ3ByZXZpb3VzJyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdBcnJvd1JpZ2h0JzpcbiAgICAgICAgICBpZiAoIWlzTXVsdGkgfHwgaW5wdXRWYWx1ZSkgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNWYWx1ZSgnbmV4dCcpO1xuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnRGVsZXRlJzpcbiAgICAgICAgY2FzZSAnQmFja3NwYWNlJzpcbiAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSkgcmV0dXJuO1xuXG4gICAgICAgICAgaWYgKGZvY3VzZWRWYWx1ZSkge1xuICAgICAgICAgICAgX3RoaXMucmVtb3ZlVmFsdWUoZm9jdXNlZFZhbHVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKCFiYWNrc3BhY2VSZW1vdmVzVmFsdWUpIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKGlzTXVsdGkpIHtcbiAgICAgICAgICAgICAgX3RoaXMucG9wVmFsdWUoKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNDbGVhcmFibGUpIHtcbiAgICAgICAgICAgICAgX3RoaXMuY2xlYXJWYWx1ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ1RhYic6XG4gICAgICAgICAgaWYgKF90aGlzLmlzQ29tcG9zaW5nKSByZXR1cm47XG5cbiAgICAgICAgICBpZiAoZXZlbnQuc2hpZnRLZXkgfHwgIW1lbnVJc09wZW4gfHwgIXRhYlNlbGVjdHNWYWx1ZSB8fCAhZm9jdXNlZE9wdGlvbiB8fCAvLyBkb24ndCBjYXB0dXJlIHRoZSBldmVudCBpZiB0aGUgbWVudSBvcGVucyBvbiBmb2N1cyBhbmQgdGhlIGZvY3VzZWRcbiAgICAgICAgICAvLyBvcHRpb24gaXMgYWxyZWFkeSBzZWxlY3RlZDsgaXQgYnJlYWtzIHRoZSBmbG93IG9mIG5hdmlnYXRpb25cbiAgICAgICAgICBvcGVuTWVudU9uRm9jdXMgJiYgX3RoaXMuaXNPcHRpb25TZWxlY3RlZChmb2N1c2VkT3B0aW9uLCBzZWxlY3RWYWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfdGhpcy5zZWxlY3RPcHRpb24oZm9jdXNlZE9wdGlvbik7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdFbnRlcic6XG4gICAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDIyOSkge1xuICAgICAgICAgICAgLy8gaWdub3JlIHRoZSBrZXlkb3duIGV2ZW50IGZyb20gYW4gSW5wdXQgTWV0aG9kIEVkaXRvcihJTUUpXG4gICAgICAgICAgICAvLyByZWYuIGh0dHBzOi8vd3d3LnczLm9yZy9UUi91aWV2ZW50cy8jZGV0ZXJtaW5lLWtleWRvd24ta2V5dXAta2V5Q29kZVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIGlmICghZm9jdXNlZE9wdGlvbikgcmV0dXJuO1xuICAgICAgICAgICAgaWYgKF90aGlzLmlzQ29tcG9zaW5nKSByZXR1cm47XG5cbiAgICAgICAgICAgIF90aGlzLnNlbGVjdE9wdGlvbihmb2N1c2VkT3B0aW9uKTtcblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIGNhc2UgJ0VzY2FwZSc6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZSA9IGZhbHNlO1xuXG4gICAgICAgICAgICBfdGhpcy5vbklucHV0Q2hhbmdlKCcnLCB7XG4gICAgICAgICAgICAgIGFjdGlvbjogJ21lbnUtY2xvc2UnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgX3RoaXMub25NZW51Q2xvc2UoKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzQ2xlYXJhYmxlICYmIGVzY2FwZUNsZWFyc1ZhbHVlKSB7XG4gICAgICAgICAgICBfdGhpcy5jbGVhclZhbHVlKCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnICc6XG4gICAgICAgICAgLy8gc3BhY2VcbiAgICAgICAgICBpZiAoaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghbWVudUlzT3Blbikge1xuICAgICAgICAgICAgX3RoaXMub3Blbk1lbnUoJ2ZpcnN0Jyk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICghZm9jdXNlZE9wdGlvbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuc2VsZWN0T3B0aW9uKGZvY3VzZWRPcHRpb24pO1xuXG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnQXJyb3dVcCc6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmZvY3VzT3B0aW9uKCd1cCcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpcy5vcGVuTWVudSgnbGFzdCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ0Fycm93RG93bic6XG4gICAgICAgICAgaWYgKG1lbnVJc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLmZvY3VzT3B0aW9uKCdkb3duJyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIF90aGlzLm9wZW5NZW51KCdmaXJzdCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ1BhZ2VVcCc6XG4gICAgICAgICAgaWYgKCFtZW51SXNPcGVuKSByZXR1cm47XG5cbiAgICAgICAgICBfdGhpcy5mb2N1c09wdGlvbigncGFnZXVwJyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdQYWdlRG93bic6XG4gICAgICAgICAgaWYgKCFtZW51SXNPcGVuKSByZXR1cm47XG5cbiAgICAgICAgICBfdGhpcy5mb2N1c09wdGlvbigncGFnZWRvd24nKTtcblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ0hvbWUnOlxuICAgICAgICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNPcHRpb24oJ2ZpcnN0Jyk7XG5cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdFbmQnOlxuICAgICAgICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuO1xuXG4gICAgICAgICAgX3RoaXMuZm9jdXNPcHRpb24oJ2xhc3QnKTtcblxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG5cbiAgICBfdGhpcy5idWlsZE1lbnVPcHRpb25zID0gZnVuY3Rpb24gKHByb3BzLCBzZWxlY3RWYWx1ZSkge1xuICAgICAgdmFyIF9wcm9wcyRpbnB1dFZhbHVlID0gcHJvcHMuaW5wdXRWYWx1ZSxcbiAgICAgICAgICBpbnB1dFZhbHVlID0gX3Byb3BzJGlucHV0VmFsdWUgPT09IHZvaWQgMCA/ICcnIDogX3Byb3BzJGlucHV0VmFsdWUsXG4gICAgICAgICAgb3B0aW9ucyA9IHByb3BzLm9wdGlvbnM7XG5cbiAgICAgIHZhciB0b09wdGlvbiA9IGZ1bmN0aW9uIHRvT3B0aW9uKG9wdGlvbiwgaWQpIHtcbiAgICAgICAgdmFyIGlzRGlzYWJsZWQgPSBfdGhpcy5pc09wdGlvbkRpc2FibGVkKG9wdGlvbiwgc2VsZWN0VmFsdWUpO1xuXG4gICAgICAgIHZhciBpc1NlbGVjdGVkID0gX3RoaXMuaXNPcHRpb25TZWxlY3RlZChvcHRpb24sIHNlbGVjdFZhbHVlKTtcblxuICAgICAgICB2YXIgbGFiZWwgPSBfdGhpcy5nZXRPcHRpb25MYWJlbChvcHRpb24pO1xuXG4gICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLmdldE9wdGlvblZhbHVlKG9wdGlvbik7XG5cbiAgICAgICAgaWYgKF90aGlzLnNob3VsZEhpZGVTZWxlY3RlZE9wdGlvbnMoKSAmJiBpc1NlbGVjdGVkIHx8ICFfdGhpcy5maWx0ZXJPcHRpb24oe1xuICAgICAgICAgIGxhYmVsOiBsYWJlbCxcbiAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgZGF0YTogb3B0aW9uXG4gICAgICAgIH0sIGlucHV0VmFsdWUpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG9uSG92ZXIgPSBpc0Rpc2FibGVkID8gdW5kZWZpbmVkIDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpcy5vbk9wdGlvbkhvdmVyKG9wdGlvbik7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBvblNlbGVjdCA9IGlzRGlzYWJsZWQgPyB1bmRlZmluZWQgOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLnNlbGVjdE9wdGlvbihvcHRpb24pO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgb3B0aW9uSWQgPSBfdGhpcy5nZXRFbGVtZW50SWQoJ29wdGlvbicpICsgXCItXCIgKyBpZDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBpbm5lclByb3BzOiB7XG4gICAgICAgICAgICBpZDogb3B0aW9uSWQsXG4gICAgICAgICAgICBvbkNsaWNrOiBvblNlbGVjdCxcbiAgICAgICAgICAgIG9uTW91c2VNb3ZlOiBvbkhvdmVyLFxuICAgICAgICAgICAgb25Nb3VzZU92ZXI6IG9uSG92ZXIsXG4gICAgICAgICAgICB0YWJJbmRleDogLTFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRhdGE6IG9wdGlvbixcbiAgICAgICAgICBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkLFxuICAgICAgICAgIGlzU2VsZWN0ZWQ6IGlzU2VsZWN0ZWQsXG4gICAgICAgICAga2V5OiBvcHRpb25JZCxcbiAgICAgICAgICBsYWJlbDogbGFiZWwsXG4gICAgICAgICAgdHlwZTogJ29wdGlvbicsXG4gICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH07XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gb3B0aW9ucy5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgaXRlbSwgaXRlbUluZGV4KSB7XG4gICAgICAgIGlmIChpdGVtLm9wdGlvbnMpIHtcbiAgICAgICAgICAvLyBUT0RPIG5lZWRzIGEgdGlkaWVyIGltcGxlbWVudGF0aW9uXG4gICAgICAgICAgaWYgKCFfdGhpcy5oYXNHcm91cHMpIF90aGlzLmhhc0dyb3VwcyA9IHRydWU7XG4gICAgICAgICAgdmFyIGl0ZW1zID0gaXRlbS5vcHRpb25zO1xuICAgICAgICAgIHZhciBjaGlsZHJlbiA9IGl0ZW1zLm1hcChmdW5jdGlvbiAoY2hpbGQsIGkpIHtcbiAgICAgICAgICAgIHZhciBvcHRpb24gPSB0b09wdGlvbihjaGlsZCwgaXRlbUluZGV4ICsgXCItXCIgKyBpKTtcbiAgICAgICAgICAgIGlmIChvcHRpb24pIGFjYy5mb2N1c2FibGUucHVzaChjaGlsZCk7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9uO1xuICAgICAgICAgIH0pLmZpbHRlcihCb29sZWFuKTtcblxuICAgICAgICAgIGlmIChjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBncm91cElkID0gX3RoaXMuZ2V0RWxlbWVudElkKCdncm91cCcpICsgXCItXCIgKyBpdGVtSW5kZXg7XG4gICAgICAgICAgICBhY2MucmVuZGVyLnB1c2goe1xuICAgICAgICAgICAgICB0eXBlOiAnZ3JvdXAnLFxuICAgICAgICAgICAgICBrZXk6IGdyb3VwSWQsXG4gICAgICAgICAgICAgIGRhdGE6IGl0ZW0sXG4gICAgICAgICAgICAgIG9wdGlvbnM6IGNoaWxkcmVuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIG9wdGlvbiA9IHRvT3B0aW9uKGl0ZW0sIFwiXCIgKyBpdGVtSW5kZXgpO1xuXG4gICAgICAgICAgaWYgKG9wdGlvbikge1xuICAgICAgICAgICAgYWNjLnJlbmRlci5wdXNoKG9wdGlvbik7XG4gICAgICAgICAgICBhY2MuZm9jdXNhYmxlLnB1c2goaXRlbSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIHtcbiAgICAgICAgcmVuZGVyOiBbXSxcbiAgICAgICAgZm9jdXNhYmxlOiBbXVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZhciBfdmFsdWUgPSBfcHJvcHMudmFsdWU7XG4gICAgX3RoaXMuY2FjaGVDb21wb25lbnRzID0gbWVtb2l6ZU9uZShfdGhpcy5jYWNoZUNvbXBvbmVudHMsIGV4cG9ydGVkRXF1YWwpLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSkpO1xuXG4gICAgX3RoaXMuY2FjaGVDb21wb25lbnRzKF9wcm9wcy5jb21wb25lbnRzKTtcblxuICAgIF90aGlzLmluc3RhbmNlUHJlZml4ID0gJ3JlYWN0LXNlbGVjdC0nICsgKF90aGlzLnByb3BzLmluc3RhbmNlSWQgfHwgKytpbnN0YW5jZUlkKTtcblxuICAgIHZhciBfc2VsZWN0VmFsdWUgPSBjbGVhblZhbHVlKF92YWx1ZSk7XG5cbiAgICBfdGhpcy5idWlsZE1lbnVPcHRpb25zID0gbWVtb2l6ZU9uZShfdGhpcy5idWlsZE1lbnVPcHRpb25zLCBmdW5jdGlvbiAobmV3QXJncywgbGFzdEFyZ3MpIHtcbiAgICAgIHZhciBfcmVmNiA9IG5ld0FyZ3MsXG4gICAgICAgICAgbmV3UHJvcHMgPSBfcmVmNlswXSxcbiAgICAgICAgICBuZXdTZWxlY3RWYWx1ZSA9IF9yZWY2WzFdO1xuICAgICAgdmFyIF9yZWY3ID0gbGFzdEFyZ3MsXG4gICAgICAgICAgbGFzdFByb3BzID0gX3JlZjdbMF0sXG4gICAgICAgICAgbGFzdFNlbGVjdFZhbHVlID0gX3JlZjdbMV07XG4gICAgICByZXR1cm4gZXhwb3J0ZWRFcXVhbChuZXdTZWxlY3RWYWx1ZSwgbGFzdFNlbGVjdFZhbHVlKSAmJiBleHBvcnRlZEVxdWFsKG5ld1Byb3BzLmlucHV0VmFsdWUsIGxhc3RQcm9wcy5pbnB1dFZhbHVlKSAmJiBleHBvcnRlZEVxdWFsKG5ld1Byb3BzLm9wdGlvbnMsIGxhc3RQcm9wcy5vcHRpb25zKTtcbiAgICB9KS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpKTtcblxuICAgIHZhciBfbWVudU9wdGlvbnMgPSBfcHJvcHMubWVudUlzT3BlbiA/IF90aGlzLmJ1aWxkTWVudU9wdGlvbnMoX3Byb3BzLCBfc2VsZWN0VmFsdWUpIDoge1xuICAgICAgcmVuZGVyOiBbXSxcbiAgICAgIGZvY3VzYWJsZTogW11cbiAgICB9O1xuXG4gICAgX3RoaXMuc3RhdGUubWVudU9wdGlvbnMgPSBfbWVudU9wdGlvbnM7XG4gICAgX3RoaXMuc3RhdGUuc2VsZWN0VmFsdWUgPSBfc2VsZWN0VmFsdWU7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFNlbGVjdC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5zdGFydExpc3RlbmluZ0NvbXBvc2l0aW9uKCk7XG4gICAgdGhpcy5zdGFydExpc3RlbmluZ1RvVG91Y2goKTtcblxuICAgIGlmICh0aGlzLnByb3BzLmNsb3NlTWVudU9uU2Nyb2xsICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIC8vIExpc3RlbiB0byBhbGwgc2Nyb2xsIGV2ZW50cywgYW5kIGZpbHRlciB0aGVtIG91dCBpbnNpZGUgb2YgJ29uU2Nyb2xsJ1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5vblNjcm9sbCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMuYXV0b0ZvY3VzKSB7XG4gICAgICB0aGlzLmZvY3VzSW5wdXQoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgdmFyIF90aGlzJHByb3BzOCA9IHRoaXMucHJvcHMsXG4gICAgICAgIG9wdGlvbnMgPSBfdGhpcyRwcm9wczgub3B0aW9ucyxcbiAgICAgICAgdmFsdWUgPSBfdGhpcyRwcm9wczgudmFsdWUsXG4gICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczgubWVudUlzT3BlbixcbiAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzOC5pbnB1dFZhbHVlOyAvLyByZS1jYWNoZSBjdXN0b20gY29tcG9uZW50c1xuXG4gICAgdGhpcy5jYWNoZUNvbXBvbmVudHMobmV4dFByb3BzLmNvbXBvbmVudHMpOyAvLyByZWJ1aWxkIHRoZSBtZW51IG9wdGlvbnNcblxuICAgIGlmIChuZXh0UHJvcHMudmFsdWUgIT09IHZhbHVlIHx8IG5leHRQcm9wcy5vcHRpb25zICE9PSBvcHRpb25zIHx8IG5leHRQcm9wcy5tZW51SXNPcGVuICE9PSBtZW51SXNPcGVuIHx8IG5leHRQcm9wcy5pbnB1dFZhbHVlICE9PSBpbnB1dFZhbHVlKSB7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSBjbGVhblZhbHVlKG5leHRQcm9wcy52YWx1ZSk7XG4gICAgICB2YXIgbWVudU9wdGlvbnMgPSBuZXh0UHJvcHMubWVudUlzT3BlbiA/IHRoaXMuYnVpbGRNZW51T3B0aW9ucyhuZXh0UHJvcHMsIHNlbGVjdFZhbHVlKSA6IHtcbiAgICAgICAgcmVuZGVyOiBbXSxcbiAgICAgICAgZm9jdXNhYmxlOiBbXVxuICAgICAgfTtcbiAgICAgIHZhciBmb2N1c2VkVmFsdWUgPSB0aGlzLmdldE5leHRGb2N1c2VkVmFsdWUoc2VsZWN0VmFsdWUpO1xuICAgICAgdmFyIGZvY3VzZWRPcHRpb24gPSB0aGlzLmdldE5leHRGb2N1c2VkT3B0aW9uKG1lbnVPcHRpb25zLmZvY3VzYWJsZSk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbWVudU9wdGlvbnM6IG1lbnVPcHRpb25zLFxuICAgICAgICBzZWxlY3RWYWx1ZTogc2VsZWN0VmFsdWUsXG4gICAgICAgIGZvY3VzZWRPcHRpb246IGZvY3VzZWRPcHRpb24sXG4gICAgICAgIGZvY3VzZWRWYWx1ZTogZm9jdXNlZFZhbHVlXG4gICAgICB9KTtcbiAgICB9IC8vIHNvbWUgdXBkYXRlcyBzaG91bGQgdG9nZ2xlIHRoZSBzdGF0ZSBvZiB0aGUgaW5wdXQgdmlzaWJpbGl0eVxuXG5cbiAgICBpZiAodGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgIT0gbnVsbCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlucHV0SXNIaWRkZW46IHRoaXMuaW5wdXRJc0hpZGRlbkFmdGVyVXBkYXRlXG4gICAgICB9KTtcbiAgICAgIGRlbGV0ZSB0aGlzLmlucHV0SXNIaWRkZW5BZnRlclVwZGF0ZTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHM5ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaXNEaXNhYmxlZCA9IF90aGlzJHByb3BzOS5pc0Rpc2FibGVkLFxuICAgICAgICBtZW51SXNPcGVuID0gX3RoaXMkcHJvcHM5Lm1lbnVJc09wZW47XG4gICAgdmFyIGlzRm9jdXNlZCA9IHRoaXMuc3RhdGUuaXNGb2N1c2VkO1xuXG4gICAgaWYgKCAvLyBlbnN1cmUgZm9jdXMgaXMgcmVzdG9yZWQgY29ycmVjdGx5IHdoZW4gdGhlIGNvbnRyb2wgYmVjb21lcyBlbmFibGVkXG4gICAgaXNGb2N1c2VkICYmICFpc0Rpc2FibGVkICYmIHByZXZQcm9wcy5pc0Rpc2FibGVkIHx8IC8vIGVuc3VyZSBmb2N1cyBpcyBvbiB0aGUgSW5wdXQgd2hlbiB0aGUgbWVudSBvcGVuc1xuICAgIGlzRm9jdXNlZCAmJiBtZW51SXNPcGVuICYmICFwcmV2UHJvcHMubWVudUlzT3Blbikge1xuICAgICAgdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgfSAvLyBzY3JvbGwgdGhlIGZvY3VzZWQgb3B0aW9uIGludG8gdmlldyBpZiBuZWNlc3NhcnlcblxuXG4gICAgaWYgKHRoaXMubWVudUxpc3RSZWYgJiYgdGhpcy5mb2N1c2VkT3B0aW9uUmVmICYmIHRoaXMuc2Nyb2xsVG9Gb2N1c2VkT3B0aW9uT25VcGRhdGUpIHtcbiAgICAgIHNjcm9sbEludG9WaWV3KHRoaXMubWVudUxpc3RSZWYsIHRoaXMuZm9jdXNlZE9wdGlvblJlZik7XG4gICAgICB0aGlzLnNjcm9sbFRvRm9jdXNlZE9wdGlvbk9uVXBkYXRlID0gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMuc3RvcExpc3RlbmluZ0NvbXBvc2l0aW9uKCk7XG4gICAgdGhpcy5zdG9wTGlzdGVuaW5nVG9Ub3VjaCgpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMub25TY3JvbGwsIHRydWUpO1xuICB9O1xuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBDb25zdW1lciBIYW5kbGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgX3Byb3RvLm9uTWVudU9wZW4gPSBmdW5jdGlvbiBvbk1lbnVPcGVuKCkge1xuICAgIHRoaXMucHJvcHMub25NZW51T3BlbigpO1xuICB9O1xuXG4gIF9wcm90by5vbk1lbnVDbG9zZSA9IGZ1bmN0aW9uIG9uTWVudUNsb3NlKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczEwID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaXNTZWFyY2hhYmxlID0gX3RoaXMkcHJvcHMxMC5pc1NlYXJjaGFibGUsXG4gICAgICAgIGlzTXVsdGkgPSBfdGhpcyRwcm9wczEwLmlzTXVsdGk7XG4gICAgdGhpcy5hbm5vdW5jZUFyaWFMaXZlQ29udGV4dCh7XG4gICAgICBldmVudDogJ2lucHV0JyxcbiAgICAgIGNvbnRleHQ6IHtcbiAgICAgICAgaXNTZWFyY2hhYmxlOiBpc1NlYXJjaGFibGUsXG4gICAgICAgIGlzTXVsdGk6IGlzTXVsdGlcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLm9uSW5wdXRDaGFuZ2UoJycsIHtcbiAgICAgIGFjdGlvbjogJ21lbnUtY2xvc2UnXG4gICAgfSk7XG4gICAgdGhpcy5wcm9wcy5vbk1lbnVDbG9zZSgpO1xuICB9O1xuXG4gIF9wcm90by5vbklucHV0Q2hhbmdlID0gZnVuY3Rpb24gb25JbnB1dENoYW5nZShuZXdWYWx1ZSwgYWN0aW9uTWV0YSkge1xuICAgIHRoaXMucHJvcHMub25JbnB1dENoYW5nZShuZXdWYWx1ZSwgYWN0aW9uTWV0YSk7XG4gIH0gLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIC8vIE1ldGhvZHNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gIDtcblxuICBfcHJvdG8uZm9jdXNJbnB1dCA9IGZ1bmN0aW9uIGZvY3VzSW5wdXQoKSB7XG4gICAgaWYgKCF0aGlzLmlucHV0UmVmKSByZXR1cm47XG4gICAgdGhpcy5pbnB1dFJlZi5mb2N1cygpO1xuICB9O1xuXG4gIF9wcm90by5ibHVySW5wdXQgPSBmdW5jdGlvbiBibHVySW5wdXQoKSB7XG4gICAgaWYgKCF0aGlzLmlucHV0UmVmKSByZXR1cm47XG4gICAgdGhpcy5pbnB1dFJlZi5ibHVyKCk7XG4gIH0gLy8gYWxpYXNlZCBmb3IgY29uc3VtZXJzXG4gIDtcblxuICBfcHJvdG8ub3Blbk1lbnUgPSBmdW5jdGlvbiBvcGVuTWVudShmb2N1c09wdGlvbikge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJHN0YXRlMyA9IHRoaXMuc3RhdGUsXG4gICAgICAgIHNlbGVjdFZhbHVlID0gX3RoaXMkc3RhdGUzLnNlbGVjdFZhbHVlLFxuICAgICAgICBpc0ZvY3VzZWQgPSBfdGhpcyRzdGF0ZTMuaXNGb2N1c2VkO1xuICAgIHZhciBtZW51T3B0aW9ucyA9IHRoaXMuYnVpbGRNZW51T3B0aW9ucyh0aGlzLnByb3BzLCBzZWxlY3RWYWx1ZSk7XG4gICAgdmFyIGlzTXVsdGkgPSB0aGlzLnByb3BzLmlzTXVsdGk7XG4gICAgdmFyIG9wZW5BdEluZGV4ID0gZm9jdXNPcHRpb24gPT09ICdmaXJzdCcgPyAwIDogbWVudU9wdGlvbnMuZm9jdXNhYmxlLmxlbmd0aCAtIDE7XG5cbiAgICBpZiAoIWlzTXVsdGkpIHtcbiAgICAgIHZhciBzZWxlY3RlZEluZGV4ID0gbWVudU9wdGlvbnMuZm9jdXNhYmxlLmluZGV4T2Yoc2VsZWN0VmFsdWVbMF0pO1xuXG4gICAgICBpZiAoc2VsZWN0ZWRJbmRleCA+IC0xKSB7XG4gICAgICAgIG9wZW5BdEluZGV4ID0gc2VsZWN0ZWRJbmRleDtcbiAgICAgIH1cbiAgICB9IC8vIG9ubHkgc2Nyb2xsIGlmIHRoZSBtZW51IGlzbid0IGFscmVhZHkgb3BlblxuXG5cbiAgICB0aGlzLnNjcm9sbFRvRm9jdXNlZE9wdGlvbk9uVXBkYXRlID0gIShpc0ZvY3VzZWQgJiYgdGhpcy5tZW51TGlzdFJlZik7XG4gICAgdGhpcy5pbnB1dElzSGlkZGVuQWZ0ZXJVcGRhdGUgPSBmYWxzZTtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIG1lbnVPcHRpb25zOiBtZW51T3B0aW9ucyxcbiAgICAgIGZvY3VzZWRWYWx1ZTogbnVsbCxcbiAgICAgIGZvY3VzZWRPcHRpb246IG1lbnVPcHRpb25zLmZvY3VzYWJsZVtvcGVuQXRJbmRleF1cbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczIub25NZW51T3BlbigpO1xuXG4gICAgICBfdGhpczIuYW5ub3VuY2VBcmlhTGl2ZUNvbnRleHQoe1xuICAgICAgICBldmVudDogJ21lbnUnXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uZm9jdXNWYWx1ZSA9IGZ1bmN0aW9uIGZvY3VzVmFsdWUoZGlyZWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMTEgPSB0aGlzLnByb3BzLFxuICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxMS5pc011bHRpLFxuICAgICAgICBpc1NlYXJjaGFibGUgPSBfdGhpcyRwcm9wczExLmlzU2VhcmNoYWJsZTtcbiAgICB2YXIgX3RoaXMkc3RhdGU0ID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTQuc2VsZWN0VmFsdWUsXG4gICAgICAgIGZvY3VzZWRWYWx1ZSA9IF90aGlzJHN0YXRlNC5mb2N1c2VkVmFsdWU7IC8vIE9ubHkgbXVsdGlzZWxlY3RzIHN1cHBvcnQgdmFsdWUgZm9jdXNpbmdcblxuICAgIGlmICghaXNNdWx0aSkgcmV0dXJuO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZm9jdXNlZE9wdGlvbjogbnVsbFxuICAgIH0pO1xuICAgIHZhciBmb2N1c2VkSW5kZXggPSBzZWxlY3RWYWx1ZS5pbmRleE9mKGZvY3VzZWRWYWx1ZSk7XG5cbiAgICBpZiAoIWZvY3VzZWRWYWx1ZSkge1xuICAgICAgZm9jdXNlZEluZGV4ID0gLTE7XG4gICAgICB0aGlzLmFubm91bmNlQXJpYUxpdmVDb250ZXh0KHtcbiAgICAgICAgZXZlbnQ6ICd2YWx1ZSdcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHZhciBsYXN0SW5kZXggPSBzZWxlY3RWYWx1ZS5sZW5ndGggLSAxO1xuICAgIHZhciBuZXh0Rm9jdXMgPSAtMTtcbiAgICBpZiAoIXNlbGVjdFZhbHVlLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgc3dpdGNoIChkaXJlY3Rpb24pIHtcbiAgICAgIGNhc2UgJ3ByZXZpb3VzJzpcbiAgICAgICAgaWYgKGZvY3VzZWRJbmRleCA9PT0gMCkge1xuICAgICAgICAgIC8vIGRvbid0IGN5Y2xlIGZyb20gdGhlIHN0YXJ0IHRvIHRoZSBlbmRcbiAgICAgICAgICBuZXh0Rm9jdXMgPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKGZvY3VzZWRJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAvLyBpZiBub3RoaW5nIGlzIGZvY3VzZWQsIGZvY3VzIHRoZSBsYXN0IHZhbHVlIGZpcnN0XG4gICAgICAgICAgbmV4dEZvY3VzID0gbGFzdEluZGV4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5leHRGb2N1cyA9IGZvY3VzZWRJbmRleCAtIDE7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnbmV4dCc6XG4gICAgICAgIGlmIChmb2N1c2VkSW5kZXggPiAtMSAmJiBmb2N1c2VkSW5kZXggPCBsYXN0SW5kZXgpIHtcbiAgICAgICAgICBuZXh0Rm9jdXMgPSBmb2N1c2VkSW5kZXggKyAxO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKG5leHRGb2N1cyA9PT0gLTEpIHtcbiAgICAgIHRoaXMuYW5ub3VuY2VBcmlhTGl2ZUNvbnRleHQoe1xuICAgICAgICBldmVudDogJ2lucHV0JyxcbiAgICAgICAgY29udGV4dDoge1xuICAgICAgICAgIGlzU2VhcmNoYWJsZTogaXNTZWFyY2hhYmxlLFxuICAgICAgICAgIGlzTXVsdGk6IGlzTXVsdGlcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBpbnB1dElzSGlkZGVuOiBuZXh0Rm9jdXMgIT09IC0xLFxuICAgICAgZm9jdXNlZFZhbHVlOiBzZWxlY3RWYWx1ZVtuZXh0Rm9jdXNdXG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmZvY3VzT3B0aW9uID0gZnVuY3Rpb24gZm9jdXNPcHRpb24oZGlyZWN0aW9uKSB7XG4gICAgaWYgKGRpcmVjdGlvbiA9PT0gdm9pZCAwKSB7XG4gICAgICBkaXJlY3Rpb24gPSAnZmlyc3QnO1xuICAgIH1cblxuICAgIHZhciBwYWdlU2l6ZSA9IHRoaXMucHJvcHMucGFnZVNpemU7XG4gICAgdmFyIF90aGlzJHN0YXRlNSA9IHRoaXMuc3RhdGUsXG4gICAgICAgIGZvY3VzZWRPcHRpb24gPSBfdGhpcyRzdGF0ZTUuZm9jdXNlZE9wdGlvbixcbiAgICAgICAgbWVudU9wdGlvbnMgPSBfdGhpcyRzdGF0ZTUubWVudU9wdGlvbnM7XG4gICAgdmFyIG9wdGlvbnMgPSBtZW51T3B0aW9ucy5mb2N1c2FibGU7XG4gICAgaWYgKCFvcHRpb25zLmxlbmd0aCkgcmV0dXJuO1xuICAgIHZhciBuZXh0Rm9jdXMgPSAwOyAvLyBoYW5kbGVzICdmaXJzdCdcblxuICAgIHZhciBmb2N1c2VkSW5kZXggPSBvcHRpb25zLmluZGV4T2YoZm9jdXNlZE9wdGlvbik7XG5cbiAgICBpZiAoIWZvY3VzZWRPcHRpb24pIHtcbiAgICAgIGZvY3VzZWRJbmRleCA9IC0xO1xuICAgICAgdGhpcy5hbm5vdW5jZUFyaWFMaXZlQ29udGV4dCh7XG4gICAgICAgIGV2ZW50OiAnbWVudSdcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChkaXJlY3Rpb24gPT09ICd1cCcpIHtcbiAgICAgIG5leHRGb2N1cyA9IGZvY3VzZWRJbmRleCA+IDAgPyBmb2N1c2VkSW5kZXggLSAxIDogb3B0aW9ucy5sZW5ndGggLSAxO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnZG93bicpIHtcbiAgICAgIG5leHRGb2N1cyA9IChmb2N1c2VkSW5kZXggKyAxKSAlIG9wdGlvbnMubGVuZ3RoO1xuICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAncGFnZXVwJykge1xuICAgICAgbmV4dEZvY3VzID0gZm9jdXNlZEluZGV4IC0gcGFnZVNpemU7XG4gICAgICBpZiAobmV4dEZvY3VzIDwgMCkgbmV4dEZvY3VzID0gMDtcbiAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ3BhZ2Vkb3duJykge1xuICAgICAgbmV4dEZvY3VzID0gZm9jdXNlZEluZGV4ICsgcGFnZVNpemU7XG4gICAgICBpZiAobmV4dEZvY3VzID4gb3B0aW9ucy5sZW5ndGggLSAxKSBuZXh0Rm9jdXMgPSBvcHRpb25zLmxlbmd0aCAtIDE7XG4gICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT09ICdsYXN0Jykge1xuICAgICAgbmV4dEZvY3VzID0gb3B0aW9ucy5sZW5ndGggLSAxO1xuICAgIH1cblxuICAgIHRoaXMuc2Nyb2xsVG9Gb2N1c2VkT3B0aW9uT25VcGRhdGUgPSB0cnVlO1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgZm9jdXNlZE9wdGlvbjogb3B0aW9uc1tuZXh0Rm9jdXNdLFxuICAgICAgZm9jdXNlZFZhbHVlOiBudWxsXG4gICAgfSk7XG4gICAgdGhpcy5hbm5vdW5jZUFyaWFMaXZlQ29udGV4dCh7XG4gICAgICBldmVudDogJ21lbnUnLFxuICAgICAgY29udGV4dDoge1xuICAgICAgICBpc0Rpc2FibGVkOiBpc09wdGlvbkRpc2FibGVkKG9wdGlvbnNbbmV4dEZvY3VzXSlcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gR2V0dGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgX3Byb3RvLmdldFRoZW1lID0gZnVuY3Rpb24gZ2V0VGhlbWUoKSB7XG4gICAgLy8gVXNlIHRoZSBkZWZhdWx0IHRoZW1lIGlmIHRoZXJlIGFyZSBubyBjdXN0b21pemF0aW9ucy5cbiAgICBpZiAoIXRoaXMucHJvcHMudGhlbWUpIHtcbiAgICAgIHJldHVybiBkZWZhdWx0VGhlbWU7XG4gICAgfSAvLyBJZiB0aGUgdGhlbWUgcHJvcCBpcyBhIGZ1bmN0aW9uLCBhc3N1bWUgdGhlIGZ1bmN0aW9uXG4gICAgLy8ga25vd3MgaG93IHRvIG1lcmdlIHRoZSBwYXNzZWQtaW4gZGVmYXVsdCB0aGVtZSB3aXRoXG4gICAgLy8gaXRzIG93biBtb2RpZmljYXRpb25zLlxuXG5cbiAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMudGhlbWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLnRoZW1lKGRlZmF1bHRUaGVtZSk7XG4gICAgfSAvLyBPdGhlcndpc2UsIGlmIGEgcGxhaW4gdGhlbWUgb2JqZWN0IHdhcyBwYXNzZWQgaW4sXG4gICAgLy8gb3ZlcmxheSBpdCB3aXRoIHRoZSBkZWZhdWx0IHRoZW1lLlxuXG5cbiAgICByZXR1cm4gX2V4dGVuZHMkNCh7fSwgZGVmYXVsdFRoZW1lLCB0aGlzLnByb3BzLnRoZW1lKTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0Q29tbW9uUHJvcHMgPSBmdW5jdGlvbiBnZXRDb21tb25Qcm9wcygpIHtcbiAgICB2YXIgY2xlYXJWYWx1ZSA9IHRoaXMuY2xlYXJWYWx1ZSxcbiAgICAgICAgZ2V0U3R5bGVzID0gdGhpcy5nZXRTdHlsZXMsXG4gICAgICAgIHNldFZhbHVlID0gdGhpcy5zZXRWYWx1ZSxcbiAgICAgICAgc2VsZWN0T3B0aW9uID0gdGhpcy5zZWxlY3RPcHRpb24sXG4gICAgICAgIHByb3BzID0gdGhpcy5wcm9wcztcbiAgICB2YXIgY2xhc3NOYW1lUHJlZml4ID0gcHJvcHMuY2xhc3NOYW1lUHJlZml4LFxuICAgICAgICBpc011bHRpID0gcHJvcHMuaXNNdWx0aSxcbiAgICAgICAgaXNSdGwgPSBwcm9wcy5pc1J0bCxcbiAgICAgICAgb3B0aW9ucyA9IHByb3BzLm9wdGlvbnM7XG4gICAgdmFyIHNlbGVjdFZhbHVlID0gdGhpcy5zdGF0ZS5zZWxlY3RWYWx1ZTtcbiAgICB2YXIgaGFzVmFsdWUgPSB0aGlzLmhhc1ZhbHVlKCk7XG5cbiAgICB2YXIgZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIHJldHVybiBzZWxlY3RWYWx1ZTtcbiAgICB9O1xuXG4gICAgdmFyIGN4ID0gY2xhc3NOYW1lcy5iaW5kKG51bGwsIGNsYXNzTmFtZVByZWZpeCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGN4OiBjeCxcbiAgICAgIGNsZWFyVmFsdWU6IGNsZWFyVmFsdWUsXG4gICAgICBnZXRTdHlsZXM6IGdldFN0eWxlcyxcbiAgICAgIGdldFZhbHVlOiBnZXRWYWx1ZSxcbiAgICAgIGhhc1ZhbHVlOiBoYXNWYWx1ZSxcbiAgICAgIGlzTXVsdGk6IGlzTXVsdGksXG4gICAgICBpc1J0bDogaXNSdGwsXG4gICAgICBvcHRpb25zOiBvcHRpb25zLFxuICAgICAgc2VsZWN0T3B0aW9uOiBzZWxlY3RPcHRpb24sXG4gICAgICBzZXRWYWx1ZTogc2V0VmFsdWUsXG4gICAgICBzZWxlY3RQcm9wczogcHJvcHMsXG4gICAgICB0aGVtZTogdGhpcy5nZXRUaGVtZSgpXG4gICAgfTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0TmV4dEZvY3VzZWRWYWx1ZSA9IGZ1bmN0aW9uIGdldE5leHRGb2N1c2VkVmFsdWUobmV4dFNlbGVjdFZhbHVlKSB7XG4gICAgaWYgKHRoaXMuY2xlYXJGb2N1c1ZhbHVlT25VcGRhdGUpIHtcbiAgICAgIHRoaXMuY2xlYXJGb2N1c1ZhbHVlT25VcGRhdGUgPSBmYWxzZTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBfdGhpcyRzdGF0ZTYgPSB0aGlzLnN0YXRlLFxuICAgICAgICBmb2N1c2VkVmFsdWUgPSBfdGhpcyRzdGF0ZTYuZm9jdXNlZFZhbHVlLFxuICAgICAgICBsYXN0U2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTYuc2VsZWN0VmFsdWU7XG4gICAgdmFyIGxhc3RGb2N1c2VkSW5kZXggPSBsYXN0U2VsZWN0VmFsdWUuaW5kZXhPZihmb2N1c2VkVmFsdWUpO1xuXG4gICAgaWYgKGxhc3RGb2N1c2VkSW5kZXggPiAtMSkge1xuICAgICAgdmFyIG5leHRGb2N1c2VkSW5kZXggPSBuZXh0U2VsZWN0VmFsdWUuaW5kZXhPZihmb2N1c2VkVmFsdWUpO1xuXG4gICAgICBpZiAobmV4dEZvY3VzZWRJbmRleCA+IC0xKSB7XG4gICAgICAgIC8vIHRoZSBmb2N1c2VkIHZhbHVlIGlzIHN0aWxsIGluIHRoZSBzZWxlY3RWYWx1ZSwgcmV0dXJuIGl0XG4gICAgICAgIHJldHVybiBmb2N1c2VkVmFsdWU7XG4gICAgICB9IGVsc2UgaWYgKGxhc3RGb2N1c2VkSW5kZXggPCBuZXh0U2VsZWN0VmFsdWUubGVuZ3RoKSB7XG4gICAgICAgIC8vIHRoZSBmb2N1c2VkVmFsdWUgaXMgbm90IHByZXNlbnQgaW4gdGhlIG5leHQgc2VsZWN0VmFsdWUgYXJyYXkgYnlcbiAgICAgICAgLy8gcmVmZXJlbmNlLCBzbyByZXR1cm4gdGhlIG5ldyB2YWx1ZSBhdCB0aGUgc2FtZSBpbmRleFxuICAgICAgICByZXR1cm4gbmV4dFNlbGVjdFZhbHVlW2xhc3RGb2N1c2VkSW5kZXhdO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIF9wcm90by5nZXROZXh0Rm9jdXNlZE9wdGlvbiA9IGZ1bmN0aW9uIGdldE5leHRGb2N1c2VkT3B0aW9uKG9wdGlvbnMpIHtcbiAgICB2YXIgbGFzdEZvY3VzZWRPcHRpb24gPSB0aGlzLnN0YXRlLmZvY3VzZWRPcHRpb247XG4gICAgcmV0dXJuIGxhc3RGb2N1c2VkT3B0aW9uICYmIG9wdGlvbnMuaW5kZXhPZihsYXN0Rm9jdXNlZE9wdGlvbikgPiAtMSA/IGxhc3RGb2N1c2VkT3B0aW9uIDogb3B0aW9uc1swXTtcbiAgfTtcblxuICBfcHJvdG8uaGFzVmFsdWUgPSBmdW5jdGlvbiBoYXNWYWx1ZSgpIHtcbiAgICB2YXIgc2VsZWN0VmFsdWUgPSB0aGlzLnN0YXRlLnNlbGVjdFZhbHVlO1xuICAgIHJldHVybiBzZWxlY3RWYWx1ZS5sZW5ndGggPiAwO1xuICB9O1xuXG4gIF9wcm90by5oYXNPcHRpb25zID0gZnVuY3Rpb24gaGFzT3B0aW9ucygpIHtcbiAgICByZXR1cm4gISF0aGlzLnN0YXRlLm1lbnVPcHRpb25zLnJlbmRlci5sZW5ndGg7XG4gIH07XG5cbiAgX3Byb3RvLmNvdW50T3B0aW9ucyA9IGZ1bmN0aW9uIGNvdW50T3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5tZW51T3B0aW9ucy5mb2N1c2FibGUubGVuZ3RoO1xuICB9O1xuXG4gIF9wcm90by5pc0NsZWFyYWJsZSA9IGZ1bmN0aW9uIGlzQ2xlYXJhYmxlKCkge1xuICAgIHZhciBfdGhpcyRwcm9wczEyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgaXNDbGVhcmFibGUgPSBfdGhpcyRwcm9wczEyLmlzQ2xlYXJhYmxlLFxuICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxMi5pc011bHRpOyAvLyBzaW5nbGUgc2VsZWN0LCBieSBkZWZhdWx0LCBJUyBOT1QgY2xlYXJhYmxlXG4gICAgLy8gbXVsdGkgc2VsZWN0LCBieSBkZWZhdWx0LCBJUyBjbGVhcmFibGVcblxuICAgIGlmIChpc0NsZWFyYWJsZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gaXNNdWx0aTtcbiAgICByZXR1cm4gaXNDbGVhcmFibGU7XG4gIH07XG5cbiAgX3Byb3RvLmlzT3B0aW9uRGlzYWJsZWQgPSBmdW5jdGlvbiBpc09wdGlvbkRpc2FibGVkKG9wdGlvbiwgc2VsZWN0VmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaXMucHJvcHMuaXNPcHRpb25EaXNhYmxlZCA9PT0gJ2Z1bmN0aW9uJyA/IHRoaXMucHJvcHMuaXNPcHRpb25EaXNhYmxlZChvcHRpb24sIHNlbGVjdFZhbHVlKSA6IGZhbHNlO1xuICB9O1xuXG4gIF9wcm90by5pc09wdGlvblNlbGVjdGVkID0gZnVuY3Rpb24gaXNPcHRpb25TZWxlY3RlZChvcHRpb24sIHNlbGVjdFZhbHVlKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICBpZiAoc2VsZWN0VmFsdWUuaW5kZXhPZihvcHRpb24pID4gLTEpIHJldHVybiB0cnVlO1xuXG4gICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzLmlzT3B0aW9uU2VsZWN0ZWQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmlzT3B0aW9uU2VsZWN0ZWQob3B0aW9uLCBzZWxlY3RWYWx1ZSk7XG4gICAgfVxuXG4gICAgdmFyIGNhbmRpZGF0ZSA9IHRoaXMuZ2V0T3B0aW9uVmFsdWUob3B0aW9uKTtcbiAgICByZXR1cm4gc2VsZWN0VmFsdWUuc29tZShmdW5jdGlvbiAoaSkge1xuICAgICAgcmV0dXJuIF90aGlzMy5nZXRPcHRpb25WYWx1ZShpKSA9PT0gY2FuZGlkYXRlO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5maWx0ZXJPcHRpb24gPSBmdW5jdGlvbiBmaWx0ZXJPcHRpb24ob3B0aW9uLCBpbnB1dFZhbHVlKSB7XG4gICAgcmV0dXJuIHRoaXMucHJvcHMuZmlsdGVyT3B0aW9uID8gdGhpcy5wcm9wcy5maWx0ZXJPcHRpb24ob3B0aW9uLCBpbnB1dFZhbHVlKSA6IHRydWU7XG4gIH07XG5cbiAgX3Byb3RvLmZvcm1hdE9wdGlvbkxhYmVsID0gZnVuY3Rpb24gZm9ybWF0T3B0aW9uTGFiZWwoZGF0YSwgY29udGV4dCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5wcm9wcy5mb3JtYXRPcHRpb25MYWJlbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdmFyIGlucHV0VmFsdWUgPSB0aGlzLnByb3BzLmlucHV0VmFsdWU7XG4gICAgICB2YXIgc2VsZWN0VmFsdWUgPSB0aGlzLnN0YXRlLnNlbGVjdFZhbHVlO1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuZm9ybWF0T3B0aW9uTGFiZWwoZGF0YSwge1xuICAgICAgICBjb250ZXh0OiBjb250ZXh0LFxuICAgICAgICBpbnB1dFZhbHVlOiBpbnB1dFZhbHVlLFxuICAgICAgICBzZWxlY3RWYWx1ZTogc2VsZWN0VmFsdWVcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRPcHRpb25MYWJlbChkYXRhKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmZvcm1hdEdyb3VwTGFiZWwgPSBmdW5jdGlvbiBmb3JtYXRHcm91cExhYmVsKGRhdGEpIHtcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5mb3JtYXRHcm91cExhYmVsKGRhdGEpO1xuICB9IC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBNb3VzZSBIYW5kbGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgO1xuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBDb21wb3NpdGlvbiBIYW5kbGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgX3Byb3RvLnN0YXJ0TGlzdGVuaW5nQ29tcG9zaXRpb24gPSBmdW5jdGlvbiBzdGFydExpc3RlbmluZ0NvbXBvc2l0aW9uKCkge1xuICAgIGlmIChkb2N1bWVudCAmJiBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbnN0YXJ0JywgdGhpcy5vbkNvbXBvc2l0aW9uU3RhcnQsIGZhbHNlKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uZW5kJywgdGhpcy5vbkNvbXBvc2l0aW9uRW5kLCBmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zdG9wTGlzdGVuaW5nQ29tcG9zaXRpb24gPSBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nQ29tcG9zaXRpb24oKSB7XG4gICAgaWYgKGRvY3VtZW50ICYmIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIpIHtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NvbXBvc2l0aW9uc3RhcnQnLCB0aGlzLm9uQ29tcG9zaXRpb25TdGFydCk7XG4gICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbmVuZCcsIHRoaXMub25Db21wb3NpdGlvbkVuZCk7XG4gICAgfVxuICB9O1xuXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAvLyBUb3VjaCBIYW5kbGVyc1xuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgX3Byb3RvLnN0YXJ0TGlzdGVuaW5nVG9Ub3VjaCA9IGZ1bmN0aW9uIHN0YXJ0TGlzdGVuaW5nVG9Ub3VjaCgpIHtcbiAgICBpZiAoZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0LCBmYWxzZSk7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLm9uVG91Y2hNb3ZlLCBmYWxzZSk7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMub25Ub3VjaEVuZCwgZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc3RvcExpc3RlbmluZ1RvVG91Y2ggPSBmdW5jdGlvbiBzdG9wTGlzdGVuaW5nVG9Ub3VjaCgpIHtcbiAgICBpZiAoZG9jdW1lbnQgJiYgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0KTtcbiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMub25Ub3VjaE1vdmUpO1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLm9uVG91Y2hFbmQpO1xuICAgIH1cbiAgfTtcblxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgLy8gUmVuZGVyZXJzXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICBfcHJvdG8uY29uc3RydWN0QXJpYUxpdmVNZXNzYWdlID0gZnVuY3Rpb24gY29uc3RydWN0QXJpYUxpdmVNZXNzYWdlKCkge1xuICAgIHZhciBfdGhpcyRzdGF0ZTcgPSB0aGlzLnN0YXRlLFxuICAgICAgICBhcmlhTGl2ZUNvbnRleHQgPSBfdGhpcyRzdGF0ZTcuYXJpYUxpdmVDb250ZXh0LFxuICAgICAgICBzZWxlY3RWYWx1ZSA9IF90aGlzJHN0YXRlNy5zZWxlY3RWYWx1ZSxcbiAgICAgICAgZm9jdXNlZFZhbHVlID0gX3RoaXMkc3RhdGU3LmZvY3VzZWRWYWx1ZSxcbiAgICAgICAgZm9jdXNlZE9wdGlvbiA9IF90aGlzJHN0YXRlNy5mb2N1c2VkT3B0aW9uO1xuICAgIHZhciBfdGhpcyRwcm9wczEzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgb3B0aW9ucyA9IF90aGlzJHByb3BzMTMub3B0aW9ucyxcbiAgICAgICAgbWVudUlzT3BlbiA9IF90aGlzJHByb3BzMTMubWVudUlzT3BlbixcbiAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMTMuaW5wdXRWYWx1ZSxcbiAgICAgICAgc2NyZWVuUmVhZGVyU3RhdHVzID0gX3RoaXMkcHJvcHMxMy5zY3JlZW5SZWFkZXJTdGF0dXM7IC8vIEFuIGFyaWEgbGl2ZSBtZXNzYWdlIHJlcHJlc2VudGluZyB0aGUgY3VycmVudGx5IGZvY3VzZWQgdmFsdWUgaW4gdGhlIHNlbGVjdC5cblxuICAgIHZhciBmb2N1c2VkVmFsdWVNc2cgPSBmb2N1c2VkVmFsdWUgPyB2YWx1ZUZvY3VzQXJpYU1lc3NhZ2Uoe1xuICAgICAgZm9jdXNlZFZhbHVlOiBmb2N1c2VkVmFsdWUsXG4gICAgICBnZXRPcHRpb25MYWJlbDogdGhpcy5nZXRPcHRpb25MYWJlbCxcbiAgICAgIHNlbGVjdFZhbHVlOiBzZWxlY3RWYWx1ZVxuICAgIH0pIDogJyc7IC8vIEFuIGFyaWEgbGl2ZSBtZXNzYWdlIHJlcHJlc2VudGluZyB0aGUgY3VycmVudGx5IGZvY3VzZWQgb3B0aW9uIGluIHRoZSBzZWxlY3QuXG5cbiAgICB2YXIgZm9jdXNlZE9wdGlvbk1zZyA9IGZvY3VzZWRPcHRpb24gJiYgbWVudUlzT3BlbiA/IG9wdGlvbkZvY3VzQXJpYU1lc3NhZ2Uoe1xuICAgICAgZm9jdXNlZE9wdGlvbjogZm9jdXNlZE9wdGlvbixcbiAgICAgIGdldE9wdGlvbkxhYmVsOiB0aGlzLmdldE9wdGlvbkxhYmVsLFxuICAgICAgb3B0aW9uczogb3B0aW9uc1xuICAgIH0pIDogJyc7IC8vIEFuIGFyaWEgbGl2ZSBtZXNzYWdlIHJlcHJlc2VudGluZyB0aGUgc2V0IG9mIGZvY3VzYWJsZSByZXN1bHRzIGFuZCBjdXJyZW50IHNlYXJjaHRlcm0vaW5wdXR2YWx1ZS5cblxuICAgIHZhciByZXN1bHRzTXNnID0gcmVzdWx0c0FyaWFNZXNzYWdlKHtcbiAgICAgIGlucHV0VmFsdWU6IGlucHV0VmFsdWUsXG4gICAgICBzY3JlZW5SZWFkZXJNZXNzYWdlOiBzY3JlZW5SZWFkZXJTdGF0dXMoe1xuICAgICAgICBjb3VudDogdGhpcy5jb3VudE9wdGlvbnMoKVxuICAgICAgfSlcbiAgICB9KTtcbiAgICByZXR1cm4gZm9jdXNlZFZhbHVlTXNnICsgXCIgXCIgKyBmb2N1c2VkT3B0aW9uTXNnICsgXCIgXCIgKyByZXN1bHRzTXNnICsgXCIgXCIgKyBhcmlhTGl2ZUNvbnRleHQ7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlcklucHV0ID0gZnVuY3Rpb24gcmVuZGVySW5wdXQoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzMTQgPSB0aGlzLnByb3BzLFxuICAgICAgICBpc0Rpc2FibGVkID0gX3RoaXMkcHJvcHMxNC5pc0Rpc2FibGVkLFxuICAgICAgICBpc1NlYXJjaGFibGUgPSBfdGhpcyRwcm9wczE0LmlzU2VhcmNoYWJsZSxcbiAgICAgICAgaW5wdXRJZCA9IF90aGlzJHByb3BzMTQuaW5wdXRJZCxcbiAgICAgICAgaW5wdXRWYWx1ZSA9IF90aGlzJHByb3BzMTQuaW5wdXRWYWx1ZSxcbiAgICAgICAgdGFiSW5kZXggPSBfdGhpcyRwcm9wczE0LnRhYkluZGV4O1xuICAgIHZhciBJbnB1dCA9IHRoaXMuY29tcG9uZW50cy5JbnB1dDtcbiAgICB2YXIgaW5wdXRJc0hpZGRlbiA9IHRoaXMuc3RhdGUuaW5wdXRJc0hpZGRlbjtcbiAgICB2YXIgaWQgPSBpbnB1dElkIHx8IHRoaXMuZ2V0RWxlbWVudElkKCdpbnB1dCcpOyAvLyBhcmlhIGF0dHJpYnV0ZXMgbWFrZXMgdGhlIEpTWCBcIm5vaXN5XCIsIHNlcGFyYXRlZCBmb3IgY2xhcml0eVxuXG4gICAgdmFyIGFyaWFBdHRyaWJ1dGVzID0ge1xuICAgICAgJ2FyaWEtYXV0b2NvbXBsZXRlJzogJ2xpc3QnLFxuICAgICAgJ2FyaWEtbGFiZWwnOiB0aGlzLnByb3BzWydhcmlhLWxhYmVsJ10sXG4gICAgICAnYXJpYS1sYWJlbGxlZGJ5JzogdGhpcy5wcm9wc1snYXJpYS1sYWJlbGxlZGJ5J11cbiAgICB9O1xuXG4gICAgaWYgKCFpc1NlYXJjaGFibGUpIHtcbiAgICAgIC8vIHVzZSBhIGR1bW15IGlucHV0IHRvIG1haW50YWluIGZvY3VzL2JsdXIgZnVuY3Rpb25hbGl0eVxuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHVtbXlJbnB1dCwgX2V4dGVuZHMkNCh7XG4gICAgICAgIGlkOiBpZCxcbiAgICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0SW5wdXRSZWYsXG4gICAgICAgIG9uQmx1cjogdGhpcy5vbklucHV0Qmx1cixcbiAgICAgICAgb25DaGFuZ2U6IG5vb3AsXG4gICAgICAgIG9uRm9jdXM6IHRoaXMub25JbnB1dEZvY3VzLFxuICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgZGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgIHRhYkluZGV4OiB0YWJJbmRleCxcbiAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgIH0sIGFyaWFBdHRyaWJ1dGVzKSk7XG4gICAgfVxuXG4gICAgdmFyIF90aGlzJGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcyxcbiAgICAgICAgY3ggPSBfdGhpcyRjb21tb25Qcm9wcy5jeCxcbiAgICAgICAgdGhlbWUgPSBfdGhpcyRjb21tb25Qcm9wcy50aGVtZSxcbiAgICAgICAgc2VsZWN0UHJvcHMgPSBfdGhpcyRjb21tb25Qcm9wcy5zZWxlY3RQcm9wcztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dCwgX2V4dGVuZHMkNCh7XG4gICAgICBhdXRvQ2FwaXRhbGl6ZTogXCJub25lXCIsXG4gICAgICBhdXRvQ29tcGxldGU6IFwib2ZmXCIsXG4gICAgICBhdXRvQ29ycmVjdDogXCJvZmZcIixcbiAgICAgIGN4OiBjeCxcbiAgICAgIGdldFN0eWxlczogdGhpcy5nZXRTdHlsZXMsXG4gICAgICBpZDogaWQsXG4gICAgICBpbm5lclJlZjogdGhpcy5nZXRJbnB1dFJlZixcbiAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICBpc0hpZGRlbjogaW5wdXRJc0hpZGRlbixcbiAgICAgIG9uQmx1cjogdGhpcy5vbklucHV0Qmx1cixcbiAgICAgIG9uQ2hhbmdlOiB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlLFxuICAgICAgb25Gb2N1czogdGhpcy5vbklucHV0Rm9jdXMsXG4gICAgICBzZWxlY3RQcm9wczogc2VsZWN0UHJvcHMsXG4gICAgICBzcGVsbENoZWNrOiBcImZhbHNlXCIsXG4gICAgICB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICB0aGVtZTogdGhlbWUsXG4gICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgIHZhbHVlOiBpbnB1dFZhbHVlXG4gICAgfSwgYXJpYUF0dHJpYnV0ZXMpKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyUGxhY2Vob2xkZXJPclZhbHVlID0gZnVuY3Rpb24gcmVuZGVyUGxhY2Vob2xkZXJPclZhbHVlKCkge1xuICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgdmFyIF90aGlzJGNvbXBvbmVudHMgPSB0aGlzLmNvbXBvbmVudHMsXG4gICAgICAgIE11bHRpVmFsdWUgPSBfdGhpcyRjb21wb25lbnRzLk11bHRpVmFsdWUsXG4gICAgICAgIE11bHRpVmFsdWVDb250YWluZXIgPSBfdGhpcyRjb21wb25lbnRzLk11bHRpVmFsdWVDb250YWluZXIsXG4gICAgICAgIE11bHRpVmFsdWVMYWJlbCA9IF90aGlzJGNvbXBvbmVudHMuTXVsdGlWYWx1ZUxhYmVsLFxuICAgICAgICBNdWx0aVZhbHVlUmVtb3ZlID0gX3RoaXMkY29tcG9uZW50cy5NdWx0aVZhbHVlUmVtb3ZlLFxuICAgICAgICBTaW5nbGVWYWx1ZSA9IF90aGlzJGNvbXBvbmVudHMuU2luZ2xlVmFsdWUsXG4gICAgICAgIFBsYWNlaG9sZGVyID0gX3RoaXMkY29tcG9uZW50cy5QbGFjZWhvbGRlcjtcbiAgICB2YXIgY29tbW9uUHJvcHMgPSB0aGlzLmNvbW1vblByb3BzO1xuICAgIHZhciBfdGhpcyRwcm9wczE1ID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY29udHJvbFNob3VsZFJlbmRlclZhbHVlID0gX3RoaXMkcHJvcHMxNS5jb250cm9sU2hvdWxkUmVuZGVyVmFsdWUsXG4gICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczE1LmlzRGlzYWJsZWQsXG4gICAgICAgIGlzTXVsdGkgPSBfdGhpcyRwcm9wczE1LmlzTXVsdGksXG4gICAgICAgIGlucHV0VmFsdWUgPSBfdGhpcyRwcm9wczE1LmlucHV0VmFsdWUsXG4gICAgICAgIHBsYWNlaG9sZGVyID0gX3RoaXMkcHJvcHMxNS5wbGFjZWhvbGRlcjtcbiAgICB2YXIgX3RoaXMkc3RhdGU4ID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgc2VsZWN0VmFsdWUgPSBfdGhpcyRzdGF0ZTguc2VsZWN0VmFsdWUsXG4gICAgICAgIGZvY3VzZWRWYWx1ZSA9IF90aGlzJHN0YXRlOC5mb2N1c2VkVmFsdWUsXG4gICAgICAgIGlzRm9jdXNlZCA9IF90aGlzJHN0YXRlOC5pc0ZvY3VzZWQ7XG5cbiAgICBpZiAoIXRoaXMuaGFzVmFsdWUoKSB8fCAhY29udHJvbFNob3VsZFJlbmRlclZhbHVlKSB7XG4gICAgICByZXR1cm4gaW5wdXRWYWx1ZSA/IG51bGwgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFBsYWNlaG9sZGVyLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICBrZXk6IFwicGxhY2Vob2xkZXJcIixcbiAgICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICAgIH0pLCBwbGFjZWhvbGRlcik7XG4gICAgfVxuXG4gICAgaWYgKGlzTXVsdGkpIHtcbiAgICAgIHZhciBzZWxlY3RWYWx1ZXMgPSBzZWxlY3RWYWx1ZS5tYXAoZnVuY3Rpb24gKG9wdCwgaW5kZXgpIHtcbiAgICAgICAgdmFyIGlzT3B0aW9uRm9jdXNlZCA9IG9wdCA9PT0gZm9jdXNlZFZhbHVlO1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChNdWx0aVZhbHVlLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICAgIENvbnRhaW5lcjogTXVsdGlWYWx1ZUNvbnRhaW5lcixcbiAgICAgICAgICAgIExhYmVsOiBNdWx0aVZhbHVlTGFiZWwsXG4gICAgICAgICAgICBSZW1vdmU6IE11bHRpVmFsdWVSZW1vdmVcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlzRm9jdXNlZDogaXNPcHRpb25Gb2N1c2VkLFxuICAgICAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICAgICAga2V5OiBfdGhpczQuZ2V0T3B0aW9uVmFsdWUob3B0KSxcbiAgICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgICAgcmVtb3ZlUHJvcHM6IHtcbiAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczQucmVtb3ZlVmFsdWUob3B0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvblRvdWNoRW5kOiBmdW5jdGlvbiBvblRvdWNoRW5kKCkge1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LnJlbW92ZVZhbHVlKG9wdCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25Nb3VzZURvd246IGZ1bmN0aW9uIG9uTW91c2VEb3duKGUpIHtcbiAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZGF0YTogb3B0XG4gICAgICAgIH0pLCBfdGhpczQuZm9ybWF0T3B0aW9uTGFiZWwob3B0LCAndmFsdWUnKSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzZWxlY3RWYWx1ZXM7XG4gICAgfVxuXG4gICAgaWYgKGlucHV0VmFsdWUpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBzaW5nbGVWYWx1ZSA9IHNlbGVjdFZhbHVlWzBdO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNpbmdsZVZhbHVlLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgZGF0YTogc2luZ2xlVmFsdWUsXG4gICAgICBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkXG4gICAgfSksIHRoaXMuZm9ybWF0T3B0aW9uTGFiZWwoc2luZ2xlVmFsdWUsICd2YWx1ZScpKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyQ2xlYXJJbmRpY2F0b3IgPSBmdW5jdGlvbiByZW5kZXJDbGVhckluZGljYXRvcigpIHtcbiAgICB2YXIgQ2xlYXJJbmRpY2F0b3IgPSB0aGlzLmNvbXBvbmVudHMuQ2xlYXJJbmRpY2F0b3I7XG4gICAgdmFyIGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcztcbiAgICB2YXIgX3RoaXMkcHJvcHMxNiA9IHRoaXMucHJvcHMsXG4gICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczE2LmlzRGlzYWJsZWQsXG4gICAgICAgIGlzTG9hZGluZyA9IF90aGlzJHByb3BzMTYuaXNMb2FkaW5nO1xuICAgIHZhciBpc0ZvY3VzZWQgPSB0aGlzLnN0YXRlLmlzRm9jdXNlZDtcblxuICAgIGlmICghdGhpcy5pc0NsZWFyYWJsZSgpIHx8ICFDbGVhckluZGljYXRvciB8fCBpc0Rpc2FibGVkIHx8ICF0aGlzLmhhc1ZhbHVlKCkgfHwgaXNMb2FkaW5nKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgaW5uZXJQcm9wcyA9IHtcbiAgICAgIG9uTW91c2VEb3duOiB0aGlzLm9uQ2xlYXJJbmRpY2F0b3JNb3VzZURvd24sXG4gICAgICBvblRvdWNoRW5kOiB0aGlzLm9uQ2xlYXJJbmRpY2F0b3JUb3VjaEVuZCxcbiAgICAgICdhcmlhLWhpZGRlbic6ICd0cnVlJ1xuICAgIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2xlYXJJbmRpY2F0b3IsIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICBpbm5lclByb3BzOiBpbm5lclByb3BzLFxuICAgICAgaXNGb2N1c2VkOiBpc0ZvY3VzZWRcbiAgICB9KSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlckxvYWRpbmdJbmRpY2F0b3IgPSBmdW5jdGlvbiByZW5kZXJMb2FkaW5nSW5kaWNhdG9yKCkge1xuICAgIHZhciBMb2FkaW5nSW5kaWNhdG9yID0gdGhpcy5jb21wb25lbnRzLkxvYWRpbmdJbmRpY2F0b3I7XG4gICAgdmFyIGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcztcbiAgICB2YXIgX3RoaXMkcHJvcHMxNyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczE3LmlzRGlzYWJsZWQsXG4gICAgICAgIGlzTG9hZGluZyA9IF90aGlzJHByb3BzMTcuaXNMb2FkaW5nO1xuICAgIHZhciBpc0ZvY3VzZWQgPSB0aGlzLnN0YXRlLmlzRm9jdXNlZDtcbiAgICBpZiAoIUxvYWRpbmdJbmRpY2F0b3IgfHwgIWlzTG9hZGluZykgcmV0dXJuIG51bGw7XG4gICAgdmFyIGlubmVyUHJvcHMgPSB7XG4gICAgICAnYXJpYS1oaWRkZW4nOiAndHJ1ZSdcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExvYWRpbmdJbmRpY2F0b3IsIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICBpbm5lclByb3BzOiBpbm5lclByb3BzLFxuICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZDogaXNGb2N1c2VkXG4gICAgfSkpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXJJbmRpY2F0b3JTZXBhcmF0b3IgPSBmdW5jdGlvbiByZW5kZXJJbmRpY2F0b3JTZXBhcmF0b3IoKSB7XG4gICAgdmFyIF90aGlzJGNvbXBvbmVudHMyID0gdGhpcy5jb21wb25lbnRzLFxuICAgICAgICBEcm9wZG93bkluZGljYXRvciA9IF90aGlzJGNvbXBvbmVudHMyLkRyb3Bkb3duSW5kaWNhdG9yLFxuICAgICAgICBJbmRpY2F0b3JTZXBhcmF0b3IgPSBfdGhpcyRjb21wb25lbnRzMi5JbmRpY2F0b3JTZXBhcmF0b3I7IC8vIHNlcGFyYXRvciBkb2Vzbid0IG1ha2Ugc2Vuc2Ugd2l0aG91dCB0aGUgZHJvcGRvd24gaW5kaWNhdG9yXG5cbiAgICBpZiAoIURyb3Bkb3duSW5kaWNhdG9yIHx8ICFJbmRpY2F0b3JTZXBhcmF0b3IpIHJldHVybiBudWxsO1xuICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHM7XG4gICAgdmFyIGlzRGlzYWJsZWQgPSB0aGlzLnByb3BzLmlzRGlzYWJsZWQ7XG4gICAgdmFyIGlzRm9jdXNlZCA9IHRoaXMuc3RhdGUuaXNGb2N1c2VkO1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGljYXRvclNlcGFyYXRvciwgX2V4dGVuZHMkNCh7fSwgY29tbW9uUHJvcHMsIHtcbiAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZFxuICAgIH0pKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyRHJvcGRvd25JbmRpY2F0b3IgPSBmdW5jdGlvbiByZW5kZXJEcm9wZG93bkluZGljYXRvcigpIHtcbiAgICB2YXIgRHJvcGRvd25JbmRpY2F0b3IgPSB0aGlzLmNvbXBvbmVudHMuRHJvcGRvd25JbmRpY2F0b3I7XG4gICAgaWYgKCFEcm9wZG93bkluZGljYXRvcikgcmV0dXJuIG51bGw7XG4gICAgdmFyIGNvbW1vblByb3BzID0gdGhpcy5jb21tb25Qcm9wcztcbiAgICB2YXIgaXNEaXNhYmxlZCA9IHRoaXMucHJvcHMuaXNEaXNhYmxlZDtcbiAgICB2YXIgaXNGb2N1c2VkID0gdGhpcy5zdGF0ZS5pc0ZvY3VzZWQ7XG4gICAgdmFyIGlubmVyUHJvcHMgPSB7XG4gICAgICBvbk1vdXNlRG93bjogdGhpcy5vbkRyb3Bkb3duSW5kaWNhdG9yTW91c2VEb3duLFxuICAgICAgb25Ub3VjaEVuZDogdGhpcy5vbkRyb3Bkb3duSW5kaWNhdG9yVG91Y2hFbmQsXG4gICAgICAnYXJpYS1oaWRkZW4nOiAndHJ1ZSdcbiAgICB9O1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSW5kaWNhdG9yLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgaW5uZXJQcm9wczogaW5uZXJQcm9wcyxcbiAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZFxuICAgIH0pKTtcbiAgfTtcblxuICBfcHJvdG8ucmVuZGVyTWVudSA9IGZ1bmN0aW9uIHJlbmRlck1lbnUoKSB7XG4gICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICB2YXIgX3RoaXMkY29tcG9uZW50czMgPSB0aGlzLmNvbXBvbmVudHMsXG4gICAgICAgIEdyb3VwID0gX3RoaXMkY29tcG9uZW50czMuR3JvdXAsXG4gICAgICAgIEdyb3VwSGVhZGluZyA9IF90aGlzJGNvbXBvbmVudHMzLkdyb3VwSGVhZGluZyxcbiAgICAgICAgTWVudSA9IF90aGlzJGNvbXBvbmVudHMzLk1lbnUsXG4gICAgICAgIE1lbnVMaXN0ID0gX3RoaXMkY29tcG9uZW50czMuTWVudUxpc3QsXG4gICAgICAgIE1lbnVQb3J0YWwgPSBfdGhpcyRjb21wb25lbnRzMy5NZW51UG9ydGFsLFxuICAgICAgICBMb2FkaW5nTWVzc2FnZSA9IF90aGlzJGNvbXBvbmVudHMzLkxvYWRpbmdNZXNzYWdlLFxuICAgICAgICBOb09wdGlvbnNNZXNzYWdlID0gX3RoaXMkY29tcG9uZW50czMuTm9PcHRpb25zTWVzc2FnZSxcbiAgICAgICAgT3B0aW9uID0gX3RoaXMkY29tcG9uZW50czMuT3B0aW9uO1xuICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHM7XG4gICAgdmFyIF90aGlzJHN0YXRlOSA9IHRoaXMuc3RhdGUsXG4gICAgICAgIGZvY3VzZWRPcHRpb24gPSBfdGhpcyRzdGF0ZTkuZm9jdXNlZE9wdGlvbixcbiAgICAgICAgbWVudU9wdGlvbnMgPSBfdGhpcyRzdGF0ZTkubWVudU9wdGlvbnM7XG4gICAgdmFyIF90aGlzJHByb3BzMTggPSB0aGlzLnByb3BzLFxuICAgICAgICBjYXB0dXJlTWVudVNjcm9sbCA9IF90aGlzJHByb3BzMTguY2FwdHVyZU1lbnVTY3JvbGwsXG4gICAgICAgIGlucHV0VmFsdWUgPSBfdGhpcyRwcm9wczE4LmlucHV0VmFsdWUsXG4gICAgICAgIGlzTG9hZGluZyA9IF90aGlzJHByb3BzMTguaXNMb2FkaW5nLFxuICAgICAgICBsb2FkaW5nTWVzc2FnZSA9IF90aGlzJHByb3BzMTgubG9hZGluZ01lc3NhZ2UsXG4gICAgICAgIG1pbk1lbnVIZWlnaHQgPSBfdGhpcyRwcm9wczE4Lm1pbk1lbnVIZWlnaHQsXG4gICAgICAgIG1heE1lbnVIZWlnaHQgPSBfdGhpcyRwcm9wczE4Lm1heE1lbnVIZWlnaHQsXG4gICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczE4Lm1lbnVJc09wZW4sXG4gICAgICAgIG1lbnVQbGFjZW1lbnQgPSBfdGhpcyRwcm9wczE4Lm1lbnVQbGFjZW1lbnQsXG4gICAgICAgIG1lbnVQb3NpdGlvbiA9IF90aGlzJHByb3BzMTgubWVudVBvc2l0aW9uLFxuICAgICAgICBtZW51UG9ydGFsVGFyZ2V0ID0gX3RoaXMkcHJvcHMxOC5tZW51UG9ydGFsVGFyZ2V0LFxuICAgICAgICBtZW51U2hvdWxkQmxvY2tTY3JvbGwgPSBfdGhpcyRwcm9wczE4Lm1lbnVTaG91bGRCbG9ja1Njcm9sbCxcbiAgICAgICAgbWVudVNob3VsZFNjcm9sbEludG9WaWV3ID0gX3RoaXMkcHJvcHMxOC5tZW51U2hvdWxkU2Nyb2xsSW50b1ZpZXcsXG4gICAgICAgIG5vT3B0aW9uc01lc3NhZ2UgPSBfdGhpcyRwcm9wczE4Lm5vT3B0aW9uc01lc3NhZ2UsXG4gICAgICAgIG9uTWVudVNjcm9sbFRvVG9wID0gX3RoaXMkcHJvcHMxOC5vbk1lbnVTY3JvbGxUb1RvcCxcbiAgICAgICAgb25NZW51U2Nyb2xsVG9Cb3R0b20gPSBfdGhpcyRwcm9wczE4Lm9uTWVudVNjcm9sbFRvQm90dG9tO1xuICAgIGlmICghbWVudUlzT3BlbikgcmV0dXJuIG51bGw7IC8vIFRPRE86IEludGVybmFsIE9wdGlvbiBUeXBlIGhlcmVcblxuICAgIHZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIocHJvcHMpIHtcbiAgICAgIC8vIGZvciBwZXJmb3JtYW5jZSwgdGhlIG1lbnUgb3B0aW9ucyBpbiBzdGF0ZSBhcmVuJ3QgY2hhbmdlZCB3aGVuIHRoZVxuICAgICAgLy8gZm9jdXNlZCBvcHRpb24gY2hhbmdlcyBzbyB3ZSBjYWxjdWxhdGUgYWRkaXRpb25hbCBwcm9wcyBiYXNlZCBvbiB0aGF0XG4gICAgICB2YXIgaXNGb2N1c2VkID0gZm9jdXNlZE9wdGlvbiA9PT0gcHJvcHMuZGF0YTtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaXNGb2N1c2VkID8gX3RoaXM1LmdldEZvY3VzZWRPcHRpb25SZWYgOiB1bmRlZmluZWQ7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChPcHRpb24sIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCBwcm9wcywge1xuICAgICAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZFxuICAgICAgfSksIF90aGlzNS5mb3JtYXRPcHRpb25MYWJlbChwcm9wcy5kYXRhLCAnbWVudScpKTtcbiAgICB9O1xuXG4gICAgdmFyIG1lbnVVSTtcblxuICAgIGlmICh0aGlzLmhhc09wdGlvbnMoKSkge1xuICAgICAgbWVudVVJID0gbWVudU9wdGlvbnMucmVuZGVyLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICBpZiAoaXRlbS50eXBlID09PSAnZ3JvdXAnKSB7XG4gICAgICAgICAgdmFyIHR5cGUgPSBpdGVtLnR5cGUsXG4gICAgICAgICAgICAgIGdyb3VwID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UkMihpdGVtLCBbXCJ0eXBlXCJdKTtcblxuICAgICAgICAgIHZhciBoZWFkaW5nSWQgPSBpdGVtLmtleSArIFwiLWhlYWRpbmdcIjtcbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChHcm91cCwgX2V4dGVuZHMkNCh7fSwgY29tbW9uUHJvcHMsIGdyb3VwLCB7XG4gICAgICAgICAgICBIZWFkaW5nOiBHcm91cEhlYWRpbmcsXG4gICAgICAgICAgICBoZWFkaW5nUHJvcHM6IHtcbiAgICAgICAgICAgICAgaWQ6IGhlYWRpbmdJZFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxhYmVsOiBfdGhpczUuZm9ybWF0R3JvdXBMYWJlbChpdGVtLmRhdGEpXG4gICAgICAgICAgfSksIGl0ZW0ub3B0aW9ucy5tYXAoZnVuY3Rpb24gKG9wdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHJlbmRlcihvcHRpb24pO1xuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtLnR5cGUgPT09ICdvcHRpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIHJlbmRlcihpdGVtKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChpc0xvYWRpbmcpIHtcbiAgICAgIHZhciBtZXNzYWdlID0gbG9hZGluZ01lc3NhZ2Uoe1xuICAgICAgICBpbnB1dFZhbHVlOiBpbnB1dFZhbHVlXG4gICAgICB9KTtcbiAgICAgIGlmIChtZXNzYWdlID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICAgIG1lbnVVSSA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQoTG9hZGluZ01lc3NhZ2UsIGNvbW1vblByb3BzLCBtZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF9tZXNzYWdlID0gbm9PcHRpb25zTWVzc2FnZSh7XG4gICAgICAgIGlucHV0VmFsdWU6IGlucHV0VmFsdWVcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoX21lc3NhZ2UgPT09IG51bGwpIHJldHVybiBudWxsO1xuICAgICAgbWVudVVJID0gUmVhY3QuY3JlYXRlRWxlbWVudChOb09wdGlvbnNNZXNzYWdlLCBjb21tb25Qcm9wcywgX21lc3NhZ2UpO1xuICAgIH1cblxuICAgIHZhciBtZW51UGxhY2VtZW50UHJvcHMgPSB7XG4gICAgICBtaW5NZW51SGVpZ2h0OiBtaW5NZW51SGVpZ2h0LFxuICAgICAgbWF4TWVudUhlaWdodDogbWF4TWVudUhlaWdodCxcbiAgICAgIG1lbnVQbGFjZW1lbnQ6IG1lbnVQbGFjZW1lbnQsXG4gICAgICBtZW51UG9zaXRpb246IG1lbnVQb3NpdGlvbixcbiAgICAgIG1lbnVTaG91bGRTY3JvbGxJbnRvVmlldzogbWVudVNob3VsZFNjcm9sbEludG9WaWV3XG4gICAgfTtcbiAgICB2YXIgbWVudUVsZW1lbnQgPSBSZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVQbGFjZXIsIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCBtZW51UGxhY2VtZW50UHJvcHMpLCBmdW5jdGlvbiAoX3JlZjgpIHtcbiAgICAgIHZhciByZWYgPSBfcmVmOC5yZWYsXG4gICAgICAgICAgX3JlZjgkcGxhY2VyUHJvcHMgPSBfcmVmOC5wbGFjZXJQcm9wcyxcbiAgICAgICAgICBwbGFjZW1lbnQgPSBfcmVmOCRwbGFjZXJQcm9wcy5wbGFjZW1lbnQsXG4gICAgICAgICAgbWF4SGVpZ2h0ID0gX3JlZjgkcGxhY2VyUHJvcHMubWF4SGVpZ2h0O1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudSwgX2V4dGVuZHMkNCh7fSwgY29tbW9uUHJvcHMsIG1lbnVQbGFjZW1lbnRQcm9wcywge1xuICAgICAgICBpbm5lclJlZjogcmVmLFxuICAgICAgICBpbm5lclByb3BzOiB7XG4gICAgICAgICAgb25Nb3VzZURvd246IF90aGlzNS5vbk1lbnVNb3VzZURvd24sXG4gICAgICAgICAgb25Nb3VzZU1vdmU6IF90aGlzNS5vbk1lbnVNb3VzZU1vdmVcbiAgICAgICAgfSxcbiAgICAgICAgaXNMb2FkaW5nOiBpc0xvYWRpbmcsXG4gICAgICAgIHBsYWNlbWVudDogcGxhY2VtZW50XG4gICAgICB9KSwgUmVhY3QuY3JlYXRlRWxlbWVudChTY3JvbGxDYXB0b3JTd2l0Y2gsIHtcbiAgICAgICAgaXNFbmFibGVkOiBjYXB0dXJlTWVudVNjcm9sbCxcbiAgICAgICAgb25Ub3BBcnJpdmU6IG9uTWVudVNjcm9sbFRvVG9wLFxuICAgICAgICBvbkJvdHRvbUFycml2ZTogb25NZW51U2Nyb2xsVG9Cb3R0b21cbiAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2Nyb2xsQmxvY2ssIHtcbiAgICAgICAgaXNFbmFibGVkOiBtZW51U2hvdWxkQmxvY2tTY3JvbGxcbiAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUxpc3QsIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICAgIGlubmVyUmVmOiBfdGhpczUuZ2V0TWVudUxpc3RSZWYsXG4gICAgICAgIGlzTG9hZGluZzogaXNMb2FkaW5nLFxuICAgICAgICBtYXhIZWlnaHQ6IG1heEhlaWdodFxuICAgICAgfSksIG1lbnVVSSkpKSk7XG4gICAgfSk7IC8vIHBvc2l0aW9uaW5nIGJlaGF2aW91ciBpcyBhbG1vc3QgaWRlbnRpY2FsIGZvciBwb3J0YWxsZWQgYW5kIGZpeGVkLFxuICAgIC8vIHNvIHdlIHVzZSB0aGUgc2FtZSBjb21wb25lbnQuIHRoZSBhY3R1YWwgcG9ydGFsbGluZyBsb2dpYyBpcyBmb3JrZWRcbiAgICAvLyB3aXRoaW4gdGhlIGNvbXBvbmVudCBiYXNlZCBvbiBgbWVudVBvc2l0aW9uYFxuXG4gICAgcmV0dXJuIG1lbnVQb3J0YWxUYXJnZXQgfHwgbWVudVBvc2l0aW9uID09PSAnZml4ZWQnID8gUmVhY3QuY3JlYXRlRWxlbWVudChNZW51UG9ydGFsLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgYXBwZW5kVG86IG1lbnVQb3J0YWxUYXJnZXQsXG4gICAgICBjb250cm9sRWxlbWVudDogdGhpcy5jb250cm9sUmVmLFxuICAgICAgbWVudVBsYWNlbWVudDogbWVudVBsYWNlbWVudCxcbiAgICAgIG1lbnVQb3NpdGlvbjogbWVudVBvc2l0aW9uXG4gICAgfSksIG1lbnVFbGVtZW50KSA6IG1lbnVFbGVtZW50O1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXJGb3JtRmllbGQgPSBmdW5jdGlvbiByZW5kZXJGb3JtRmllbGQoKSB7XG4gICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICB2YXIgX3RoaXMkcHJvcHMxOSA9IHRoaXMucHJvcHMsXG4gICAgICAgIGRlbGltaXRlciA9IF90aGlzJHByb3BzMTkuZGVsaW1pdGVyLFxuICAgICAgICBpc0Rpc2FibGVkID0gX3RoaXMkcHJvcHMxOS5pc0Rpc2FibGVkLFxuICAgICAgICBpc011bHRpID0gX3RoaXMkcHJvcHMxOS5pc011bHRpLFxuICAgICAgICBuYW1lID0gX3RoaXMkcHJvcHMxOS5uYW1lO1xuICAgIHZhciBzZWxlY3RWYWx1ZSA9IHRoaXMuc3RhdGUuc2VsZWN0VmFsdWU7XG4gICAgaWYgKCFuYW1lIHx8IGlzRGlzYWJsZWQpIHJldHVybjtcblxuICAgIGlmIChpc011bHRpKSB7XG4gICAgICBpZiAoZGVsaW1pdGVyKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHNlbGVjdFZhbHVlLm1hcChmdW5jdGlvbiAob3B0KSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzNi5nZXRPcHRpb25WYWx1ZShvcHQpO1xuICAgICAgICB9KS5qb2luKGRlbGltaXRlcik7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgdHlwZTogXCJoaWRkZW5cIixcbiAgICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgaW5wdXQgPSBzZWxlY3RWYWx1ZS5sZW5ndGggPiAwID8gc2VsZWN0VmFsdWUubWFwKGZ1bmN0aW9uIChvcHQsIGkpIHtcbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgIGtleTogXCJpLVwiICsgaSxcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICB0eXBlOiBcImhpZGRlblwiLFxuICAgICAgICAgICAgdmFsdWU6IF90aGlzNi5nZXRPcHRpb25WYWx1ZShvcHQpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pIDogUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgIHR5cGU6IFwiaGlkZGVuXCJcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIGlucHV0KTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZTIgPSBzZWxlY3RWYWx1ZVswXSA/IHRoaXMuZ2V0T3B0aW9uVmFsdWUoc2VsZWN0VmFsdWVbMF0pIDogJyc7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICB0eXBlOiBcImhpZGRlblwiLFxuICAgICAgICB2YWx1ZTogX3ZhbHVlMlxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXJMaXZlUmVnaW9uID0gZnVuY3Rpb24gcmVuZGVyTGl2ZVJlZ2lvbigpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUuaXNGb2N1c2VkKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBMTF5VGV4dCwge1xuICAgICAgXCJhcmlhLWxpdmVcIjogXCJwb2xpdGVcIlxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIHtcbiAgICAgIGlkOiBcImFyaWEtc2VsZWN0aW9uLWV2ZW50XCJcbiAgICB9LCBcIlxceEEwXCIsIHRoaXMuc3RhdGUuYXJpYUxpdmVTZWxlY3Rpb24pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7XG4gICAgICBpZDogXCJhcmlhLWNvbnRleHRcIlxuICAgIH0sIFwiXFx4QTBcIiwgdGhpcy5jb25zdHJ1Y3RBcmlhTGl2ZU1lc3NhZ2UoKSkpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJGNvbXBvbmVudHM0ID0gdGhpcy5jb21wb25lbnRzLFxuICAgICAgICBDb250cm9sID0gX3RoaXMkY29tcG9uZW50czQuQ29udHJvbCxcbiAgICAgICAgSW5kaWNhdG9yc0NvbnRhaW5lciA9IF90aGlzJGNvbXBvbmVudHM0LkluZGljYXRvcnNDb250YWluZXIsXG4gICAgICAgIFNlbGVjdENvbnRhaW5lciA9IF90aGlzJGNvbXBvbmVudHM0LlNlbGVjdENvbnRhaW5lcixcbiAgICAgICAgVmFsdWVDb250YWluZXIgPSBfdGhpcyRjb21wb25lbnRzNC5WYWx1ZUNvbnRhaW5lcjtcbiAgICB2YXIgX3RoaXMkcHJvcHMyMCA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNsYXNzTmFtZSA9IF90aGlzJHByb3BzMjAuY2xhc3NOYW1lLFxuICAgICAgICBpZCA9IF90aGlzJHByb3BzMjAuaWQsXG4gICAgICAgIGlzRGlzYWJsZWQgPSBfdGhpcyRwcm9wczIwLmlzRGlzYWJsZWQsXG4gICAgICAgIG1lbnVJc09wZW4gPSBfdGhpcyRwcm9wczIwLm1lbnVJc09wZW47XG4gICAgdmFyIGlzRm9jdXNlZCA9IHRoaXMuc3RhdGUuaXNGb2N1c2VkO1xuICAgIHZhciBjb21tb25Qcm9wcyA9IHRoaXMuY29tbW9uUHJvcHMgPSB0aGlzLmdldENvbW1vblByb3BzKCk7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2VsZWN0Q29udGFpbmVyLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBpbm5lclByb3BzOiB7XG4gICAgICAgIGlkOiBpZCxcbiAgICAgICAgb25LZXlEb3duOiB0aGlzLm9uS2V5RG93blxuICAgICAgfSxcbiAgICAgIGlzRGlzYWJsZWQ6IGlzRGlzYWJsZWQsXG4gICAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZFxuICAgIH0pLCB0aGlzLnJlbmRlckxpdmVSZWdpb24oKSwgUmVhY3QuY3JlYXRlRWxlbWVudChDb250cm9sLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgaW5uZXJSZWY6IHRoaXMuZ2V0Q29udHJvbFJlZixcbiAgICAgIGlubmVyUHJvcHM6IHtcbiAgICAgICAgb25Nb3VzZURvd246IHRoaXMub25Db250cm9sTW91c2VEb3duLFxuICAgICAgICBvblRvdWNoRW5kOiB0aGlzLm9uQ29udHJvbFRvdWNoRW5kXG4gICAgICB9LFxuICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZCxcbiAgICAgIGlzRm9jdXNlZDogaXNGb2N1c2VkLFxuICAgICAgbWVudUlzT3BlbjogbWVudUlzT3BlblxuICAgIH0pLCBSZWFjdC5jcmVhdGVFbGVtZW50KFZhbHVlQ29udGFpbmVyLCBfZXh0ZW5kcyQ0KHt9LCBjb21tb25Qcm9wcywge1xuICAgICAgaXNEaXNhYmxlZDogaXNEaXNhYmxlZFxuICAgIH0pLCB0aGlzLnJlbmRlclBsYWNlaG9sZGVyT3JWYWx1ZSgpLCB0aGlzLnJlbmRlcklucHV0KCkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGljYXRvcnNDb250YWluZXIsIF9leHRlbmRzJDQoe30sIGNvbW1vblByb3BzLCB7XG4gICAgICBpc0Rpc2FibGVkOiBpc0Rpc2FibGVkXG4gICAgfSksIHRoaXMucmVuZGVyQ2xlYXJJbmRpY2F0b3IoKSwgdGhpcy5yZW5kZXJMb2FkaW5nSW5kaWNhdG9yKCksIHRoaXMucmVuZGVySW5kaWNhdG9yU2VwYXJhdG9yKCksIHRoaXMucmVuZGVyRHJvcGRvd25JbmRpY2F0b3IoKSkpLCB0aGlzLnJlbmRlck1lbnUoKSwgdGhpcy5yZW5kZXJGb3JtRmllbGQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIFNlbGVjdDtcbn0oQ29tcG9uZW50KTtcblxuU2VsZWN0LmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0IHsgU2VsZWN0IGFzIFMsIGRlZmF1bHRUaGVtZSBhcyBhLCBjcmVhdGVGaWx0ZXIgYXMgYywgZGVmYXVsdFByb3BzIGFzIGQsIG1lcmdlU3R5bGVzIGFzIG0gfTtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyB2YXIga2V5LCBpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2Uoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSk7IHN1YkNsYXNzLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHN1YkNsYXNzOyBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG52YXIgZGVmYXVsdFByb3BzID0ge1xuICBkZWZhdWx0SW5wdXRWYWx1ZTogJycsXG4gIGRlZmF1bHRNZW51SXNPcGVuOiBmYWxzZSxcbiAgZGVmYXVsdFZhbHVlOiBudWxsXG59O1xuXG52YXIgbWFuYWdlU3RhdGUgPSBmdW5jdGlvbiBtYW5hZ2VTdGF0ZShTZWxlY3RDb21wb25lbnQpIHtcbiAgdmFyIF9jbGFzcywgX3RlbXA7XG5cbiAgcmV0dXJuIF90ZW1wID0gX2NsYXNzID1cbiAgLyojX19QVVJFX18qL1xuICBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFN0YXRlTWFuYWdlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBTdGF0ZU1hbmFnZXIoKSB7XG4gICAgICB2YXIgX3RoaXM7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuY2FsbC5hcHBseShfQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuc2VsZWN0ID0gdm9pZCAwO1xuICAgICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICAgIGlucHV0VmFsdWU6IF90aGlzLnByb3BzLmlucHV0VmFsdWUgIT09IHVuZGVmaW5lZCA/IF90aGlzLnByb3BzLmlucHV0VmFsdWUgOiBfdGhpcy5wcm9wcy5kZWZhdWx0SW5wdXRWYWx1ZSxcbiAgICAgICAgbWVudUlzT3BlbjogX3RoaXMucHJvcHMubWVudUlzT3BlbiAhPT0gdW5kZWZpbmVkID8gX3RoaXMucHJvcHMubWVudUlzT3BlbiA6IF90aGlzLnByb3BzLmRlZmF1bHRNZW51SXNPcGVuLFxuICAgICAgICB2YWx1ZTogX3RoaXMucHJvcHMudmFsdWUgIT09IHVuZGVmaW5lZCA/IF90aGlzLnByb3BzLnZhbHVlIDogX3RoaXMucHJvcHMuZGVmYXVsdFZhbHVlXG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5vbkNoYW5nZSA9IGZ1bmN0aW9uICh2YWx1ZSwgYWN0aW9uTWV0YSkge1xuICAgICAgICBfdGhpcy5jYWxsUHJvcCgnb25DaGFuZ2UnLCB2YWx1ZSwgYWN0aW9uTWV0YSk7XG5cbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIF90aGlzLm9uSW5wdXRDaGFuZ2UgPSBmdW5jdGlvbiAodmFsdWUsIGFjdGlvbk1ldGEpIHtcbiAgICAgICAgLy8gVE9ETzogZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5LCB3ZSBhbGxvdyB0aGUgcHJvcCB0byByZXR1cm4gYSBuZXdcbiAgICAgICAgLy8gdmFsdWUsIGJ1dCBub3cgaW5wdXRWYWx1ZSBpcyBhIGNvbnRyb2xsYWJsZSBwcm9wIHdlIHByb2JhYmx5IHNob3VsZG4ndFxuICAgICAgICB2YXIgbmV3VmFsdWUgPSBfdGhpcy5jYWxsUHJvcCgnb25JbnB1dENoYW5nZScsIHZhbHVlLCBhY3Rpb25NZXRhKTtcblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgaW5wdXRWYWx1ZTogbmV3VmFsdWUgIT09IHVuZGVmaW5lZCA/IG5ld1ZhbHVlIDogdmFsdWVcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBfdGhpcy5vbk1lbnVPcGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpcy5jYWxsUHJvcCgnb25NZW51T3BlbicpO1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtZW51SXNPcGVuOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgX3RoaXMub25NZW51Q2xvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmNhbGxQcm9wKCdvbk1lbnVDbG9zZScpO1xuXG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBtZW51SXNPcGVuOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICB2YXIgX3Byb3RvID0gU3RhdGVNYW5hZ2VyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5mb2N1cyA9IGZ1bmN0aW9uIGZvY3VzKCkge1xuICAgICAgdGhpcy5zZWxlY3QuZm9jdXMoKTtcbiAgICB9O1xuXG4gICAgX3Byb3RvLmJsdXIgPSBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgdGhpcy5zZWxlY3QuYmx1cigpO1xuICAgIH0gLy8gRklYTUU6IHVudHlwZWQgZmxvdyBjb2RlLCByZXR1cm4gYW55XG4gICAgO1xuXG4gICAgX3Byb3RvLmdldFByb3AgPSBmdW5jdGlvbiBnZXRQcm9wKGtleSkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHNba2V5XSAhPT0gdW5kZWZpbmVkID8gdGhpcy5wcm9wc1trZXldIDogdGhpcy5zdGF0ZVtrZXldO1xuICAgIH0gLy8gRklYTUU6IHVudHlwZWQgZmxvdyBjb2RlLCByZXR1cm4gYW55XG4gICAgO1xuXG4gICAgX3Byb3RvLmNhbGxQcm9wID0gZnVuY3Rpb24gY2FsbFByb3AobmFtZSkge1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLnByb3BzW25hbWVdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBfdGhpcyRwcm9wcztcblxuICAgICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIgPiAxID8gX2xlbjIgLSAxIDogMCksIF9rZXkyID0gMTsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKF90aGlzJHByb3BzID0gdGhpcy5wcm9wcylbbmFtZV0uYXBwbHkoX3RoaXMkcHJvcHMsIGFyZ3MpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBfdGhpcyRwcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGRlZmF1bHRJbnB1dFZhbHVlID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRJbnB1dFZhbHVlLFxuICAgICAgICAgIGRlZmF1bHRNZW51SXNPcGVuID0gX3RoaXMkcHJvcHMyLmRlZmF1bHRNZW51SXNPcGVuLFxuICAgICAgICAgIGRlZmF1bHRWYWx1ZSA9IF90aGlzJHByb3BzMi5kZWZhdWx0VmFsdWUsXG4gICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wczIsIFtcImRlZmF1bHRJbnB1dFZhbHVlXCIsIFwiZGVmYXVsdE1lbnVJc09wZW5cIiwgXCJkZWZhdWx0VmFsdWVcIl0pO1xuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTZWxlY3RDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihfcmVmKSB7XG4gICAgICAgICAgX3RoaXMyLnNlbGVjdCA9IF9yZWY7XG4gICAgICAgIH0sXG4gICAgICAgIGlucHV0VmFsdWU6IHRoaXMuZ2V0UHJvcCgnaW5wdXRWYWx1ZScpLFxuICAgICAgICBtZW51SXNPcGVuOiB0aGlzLmdldFByb3AoJ21lbnVJc09wZW4nKSxcbiAgICAgICAgb25DaGFuZ2U6IHRoaXMub25DaGFuZ2UsXG4gICAgICAgIG9uSW5wdXRDaGFuZ2U6IHRoaXMub25JbnB1dENoYW5nZSxcbiAgICAgICAgb25NZW51Q2xvc2U6IHRoaXMub25NZW51Q2xvc2UsXG4gICAgICAgIG9uTWVudU9wZW46IHRoaXMub25NZW51T3BlbixcbiAgICAgICAgdmFsdWU6IHRoaXMuZ2V0UHJvcCgndmFsdWUnKVxuICAgICAgfSkpO1xuICAgIH07XG5cbiAgICByZXR1cm4gU3RhdGVNYW5hZ2VyO1xuICB9KENvbXBvbmVudCksIF9jbGFzcy5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHMsIF90ZW1wO1xufTtcblxuZXhwb3J0IHsgbWFuYWdlU3RhdGUgYXMgbSB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBtZW1vaXplT25lIGZyb20gJ21lbW9pemUtb25lJztcbmltcG9ydCB7IENhY2hlUHJvdmlkZXIgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCAncmVhY3QtZG9tJztcbmltcG9ydCAncHJvcC10eXBlcyc7XG5pbXBvcnQgJy4vdXRpbHMtMDZiMGQ1YTQuYnJvd3Nlci5lc20uanMnO1xuZXhwb3J0IHsgeSBhcyBjb21wb25lbnRzIH0gZnJvbSAnLi9pbmRleC00MzIyYzBlZC5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgeyBTIGFzIFNlbGVjdCB9IGZyb20gJy4vU2VsZWN0LTlmZGI4Y2QwLmJyb3dzZXIuZXNtLmpzJztcbmV4cG9ydCB7IGMgYXMgY3JlYXRlRmlsdGVyLCBhIGFzIGRlZmF1bHRUaGVtZSwgbSBhcyBtZXJnZVN0eWxlcyB9IGZyb20gJy4vU2VsZWN0LTlmZGI4Y2QwLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCAnQGVtb3Rpb24vY3NzJztcbmltcG9ydCAncmVhY3QtaW5wdXQtYXV0b3NpemUnO1xuaW1wb3J0IHsgbSBhcyBtYW5hZ2VTdGF0ZSB9IGZyb20gJy4vc3RhdGVNYW5hZ2VyLTA0ZjczNGEyLmJyb3dzZXIuZXNtLmpzJztcbmltcG9ydCBjcmVhdGVDYWNoZSBmcm9tICdAZW1vdGlvbi9jYWNoZSc7XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpOyBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzczsgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTm9uY2VQcm92aWRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShOb25jZVByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBOb25jZVByb3ZpZGVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5jcmVhdGVFbW90aW9uQ2FjaGUgPSBmdW5jdGlvbiAobm9uY2UpIHtcbiAgICAgIHJldHVybiBjcmVhdGVDYWNoZSh7XG4gICAgICAgIG5vbmNlOiBub25jZVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIF90aGlzLmNyZWF0ZUVtb3Rpb25DYWNoZSA9IG1lbW9pemVPbmUoX3RoaXMuY3JlYXRlRW1vdGlvbkNhY2hlKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTm9uY2VQcm92aWRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgZW1vdGlvbkNhY2hlID0gdGhpcy5jcmVhdGVFbW90aW9uQ2FjaGUodGhpcy5wcm9wcy5ub25jZSk7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ2FjaGVQcm92aWRlciwge1xuICAgICAgdmFsdWU6IGVtb3Rpb25DYWNoZVxuICAgIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICB9O1xuXG4gIHJldHVybiBOb25jZVByb3ZpZGVyO1xufShDb21wb25lbnQpO1xuXG52YXIgaW5kZXggPSBtYW5hZ2VTdGF0ZShTZWxlY3QpO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbmV4cG9ydCB7IE5vbmNlUHJvdmlkZXIgfTtcbiIsImltcG9ydCBNb2RhbCBmcm9tIFwicmVhY3QtbW9kYWxcIjtcclxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgRHJvcGRvd24gZnJvbSBcInJlYWN0LWRyb3Bkb3duXCI7XHJcbmltcG9ydCBTZWxlY3QgZnJvbSBcInJlYWN0LXNlbGVjdFwiO1xyXG5pbXBvcnQgXCJyZWFjdC1kcm9wZG93bi9zdHlsZS5jc3NcIjtcclxuY29uc3QgY3VzdG9tU3R5bGVzID0ge1xyXG4gIGNvbnRlbnQ6IHtcclxuICAgIHRvcDogXCI1MCVcIixcclxuICAgIGxlZnQ6IFwiNTAlXCIsXHJcbiAgICBoZWlnaHQ6IFwiNTAwcHhcIixcclxuICAgIHdpZHRoOiBcIjUwMHB4XCIsXHJcbiAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKC01MCUsIC01MCUpXCIsXHJcbiAgICB6SW5kZXg6IDEwLFxyXG4gIH0sXHJcbn07XHJcblxyXG5jbGFzcyBBZGRRdWVzdGlvbk1vZGFsIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG5cclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIHFPYmo6IHt9LFxyXG4gICAgICBtY0xpc3Q6IFtdLFxyXG4gICAgICB0eXBlTGlzdDogW10sXHJcbiAgICAgIHNlbGVjdGVkVGFnTGlzdDogW10sXHJcbiAgICAgIHFUZXh0OiBcIlwiLFxyXG4gICAgICBzZWxlY3RlZFFUeXBlOiAwLFxyXG4gICAgICBzZWxlY3RlZFFUeXBlT2JqOiB7fSxcclxuICAgICAgdGZDaG9pY2U6IFwiXCIsXHJcbiAgICAgIG1jQ2hvaWNlOiAwLFxyXG4gICAgICBhbnN3ZXI6IFwiXCIsXHJcbiAgICB9O1xyXG4gICAgdGhpcy5pbml0aWFsaXplRGF0YSA9IHRoaXMuaW5pdGlhbGl6ZURhdGEuYmluZCh0aGlzKTtcclxuICAgIHRoaXMucmVuZGVyVGFibGVCb2R5ID0gdGhpcy5yZW5kZXJUYWJsZUJvZHkuYmluZCh0aGlzKTtcclxuICAgIHRoaXMucmVuZGVyVGFncyA9IHRoaXMucmVuZGVyVGFncy5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5oYW5kbGVTdWJtaXQgPSB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5jbGVhckRhdGEgPSB0aGlzLmNsZWFyRGF0YS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5vblFUeXBlQ2hhbmdlID0gdGhpcy5vblFUeXBlQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZU9wdGlvbkNoYW5nZSA9IHRoaXMuaGFuZGxlT3B0aW9uQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZVRhZ0NoYW5nZSA9IHRoaXMuaGFuZGxlVGFnQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZU9uQmx1ciA9IHRoaXMuaGFuZGxlT25CbHVyLmJpbmQodGhpcyk7XHJcbiAgfVxyXG5cclxuICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgIHRoaXMuaW5pdGlhbGl6ZURhdGEoKTtcclxuICB9XHJcblxyXG4gIGluaXRpYWxpemVEYXRhKCkge1xyXG4gICAgdmFyIHFPYmogPSB7IHFUZXh0OiBcIlwiLCBxQW5zOiBcIlwiIH07XHJcbiAgICB2YXIgbWNMaXN0ID0gW1xyXG4gICAgICB7IG9wdGlvbjogMSwgdmFsdWU6IFwiXCIsIGFuc3dlcjogZmFsc2UgfSxcclxuICAgICAgeyBvcHRpb246IDIsIHZhbHVlOiBcIlwiLCBhbnN3ZXI6IGZhbHNlIH0sXHJcbiAgICAgIHsgb3B0aW9uOiAzLCB2YWx1ZTogXCJcIiwgYW5zd2VyOiBmYWxzZSB9LFxyXG4gICAgICB7IG9wdGlvbjogNCwgdmFsdWU6IFwiXCIsIGFuc3dlcjogZmFsc2UgfSxcclxuICAgIF07XHJcbiAgICB0aGlzLnNldFN0YXRlKChwcmV2U3RhdGUsIHByb3BzKSA9PiB7XHJcbiAgICAgIHJldHVybiB7IHFPYmo6IHFPYmosIG1jTGlzdDogbWNMaXN0IH07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG9uUVR5cGVDaGFuZ2UoZSkge1xyXG4gICAgY29uc29sZS5sb2coXCJvblFUeXBlQ2hhbmdlOiBcIiwgZSk7XHJcbiAgICB2YXIgdmFsdWUgPSBlLnZhbHVlO1xyXG4gICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlLCBwcm9wcykgPT4ge1xyXG4gICAgICByZXR1cm4geyBzZWxlY3RlZFFUeXBlOiB2YWx1ZSwgc2VsZWN0ZWRRVHlwZU9iajogZSB9O1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVPcHRpb25DaGFuZ2UoZSkge1xyXG4gICAgY29uc29sZS5sb2coXCJoYW5kbGVPcHRpb25DaGFuZ2U6IFwiLCBlKTtcclxuICAgIGNvbnNvbGUubG9nKFwib24gdGFyZ2V0OiBcIiwgZS50YXJnZXQpO1xyXG4gICAgLy9pZiBjaGFuZ2luZyBvcHRpb24gb24gVHJ1ZSBGYWxzZVxyXG4gICAgaWYgKGUudGFyZ2V0Lm5hbWUgPT0gXCJ0ZkNob2ljZVwiKSB7XHJcbiAgICAgIHZhciBzZWxlY3RlZCA9IGUudGFyZ2V0LnZhbHVlID09IFwiVHJ1ZVwiO1xyXG4gICAgICB2YXIgcU9iaiA9IE9iamVjdC5hc3NpZ24odGhpcy5zdGF0ZS5xT2JqKTtcclxuICAgICAgcU9iai5xQW5zID0gc2VsZWN0ZWQ7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSwgcHJvcHMpID0+IHtcclxuICAgICAgICByZXR1cm4geyB0ZkNob2ljZTogc2VsZWN0ZWQsIGFuc3dlcjogc2VsZWN0ZWQsIHFPYmogfTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvL3VzZXIgY2hvb3NlIHdoYXQgcXVlc3Rpb24gaXMgcmlnaHQgYW1vbmcgbXVsdGkgY2hvaWNlXHJcbiAgICBlbHNlIGlmIChlLnRhcmdldC5uYW1lID09IFwibWNDaG9pY2VcIikge1xyXG4gICAgICB2YXIgc2VsZWN0ZWQgPSBlLnRhcmdldC52YWx1ZTtcclxuICAgICAgLy9maW5kIHdoaWNoIG9wdGlvblxyXG4gICAgICB2YXIgb3AgPSBlLnRhcmdldC5pZC5zcGxpdChcIi1cIilbMV07XHJcbiAgICAgIHZhciBhbnMgPSBcIlwiO1xyXG4gICAgICBsZXQgbWNMaXN0ID0gWy4uLnRoaXMuc3RhdGUubWNMaXN0XTtcclxuICAgICAgbWNMaXN0LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgICBpZiAoaXRlbS5vcHRpb24gPT0gb3ApIHtcclxuICAgICAgICAgIGl0ZW0uYW5zd2VyID0gdHJ1ZTtcclxuICAgICAgICAgIGFucyA9IGl0ZW0udmFsdWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGl0ZW0uYW5zd2VyID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgdmFyIHFPYmogPSBPYmplY3QuYXNzaWduKHRoaXMuc3RhdGUucU9iaik7XHJcbiAgICAgIHFPYmoucUFucyA9IGFucztcclxuXHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSwgcHJvcHMpID0+IHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgbWNDaG9pY2U6IG9wLFxyXG4gICAgICAgICAgbWNMaXN0LFxyXG4gICAgICAgICAgcU9iaixcclxuICAgICAgICB9O1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGhhbmRsZVRhZ0NoYW5nZShlKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImhhbmRsZVRhZ0NoYW5nZSBcIiwgZSk7XHJcbiAgICB2YXIgc2VsZWN0ZWRUYWdMaXN0ID0gWy4uLmVdO1xyXG4gICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlLCBwcm9wcykgPT4ge1xyXG4gICAgICByZXR1cm4geyBzZWxlY3RlZFRhZ0xpc3Q6IHNlbGVjdGVkVGFnTGlzdCB9O1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBoYW5kbGVPbkJsdXIoZSkge1xyXG4gICAgY29uc29sZS5sb2coXCJoYW5kbGVPbkJsdXI6IFwiLCBlLnRhcmdldCk7XHJcbiAgICBjb25zb2xlLmxvZyhcImhhbmRsZU9uQmx1cjogXCIsIGUudGFyZ2V0LnZhbHVlKTtcclxuICAgIC8vdXNlciBhZGQgYW5zd2VyXHJcbiAgICBpZiAoZS50YXJnZXQubmFtZSA9PSBcIm1jT3B0aW9uXCIpIHtcclxuICAgICAgLy9maW5kIHdoaWNoIG9wdGlvblxyXG4gICAgICB2YXIgb3AgPSBlLnRhcmdldC5pZC5zcGxpdChcIi1cIilbMV07XHJcbiAgICAgIGxldCBtY0xpc3QgPSBbLi4udGhpcy5zdGF0ZS5tY0xpc3RdO1xyXG4gICAgICBtY0xpc3QuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgIGlmIChpdGVtLm9wdGlvbiA9PSBvcCkge1xyXG4gICAgICAgICAgaXRlbS52YWx1ZSA9IGUudGFyZ2V0LnZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBtY0xpc3QgfSk7XHJcbiAgICB9XHJcbiAgICAvL3VzZXIgdHlwZSBpbiBxdWVzdGlvblxyXG4gICAgZWxzZSBpZiAoZS50YXJnZXQubmFtZSA9PSBcInFUZXh0XCIpIHtcclxuICAgICAgdmFyIHFPYmogPSBPYmplY3QuYXNzaWduKHRoaXMuc3RhdGUucU9iaik7XHJcbiAgICAgIHFPYmoucVRleHQgPSBlLnRhcmdldC52YWx1ZTtcclxuICAgICAgdGhpcy5zZXRTdGF0ZShxT2JqKTtcclxuICAgIH0gZWxzZSBpZiAoKGUudGFyZ2V0Lm5hbWUgPSBcInFBbnNcIikpIHtcclxuICAgICAgdmFyIHFPYmogPSBPYmplY3QuYXNzaWduKHRoaXMuc3RhdGUucU9iaik7XHJcbiAgICAgIHFPYmoucUFucyA9IGUudGFyZ2V0LnZhbHVlO1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHFPYmopO1xyXG4gICAgfVxyXG4gIH1cclxuICBoYW5kbGVTdWJtaXQoZSkge1xyXG4gICAgY29uc29sZS5sb2coXCJoYW5kbGVTdWJtaXQ6IFwiLCBlKTtcclxuICAgIHZhciBfX1JlcXVlc3RWZXJpZmljYXRpb25Ub2tlbiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKFxyXG4gICAgICBcIl9fUmVxdWVzdFZlcmlmaWNhdGlvblRva2VuXCJcclxuICAgIClbMF0udmFsdWU7XHJcbiAgICB2YXIgZGF0YSA9IHtcclxuICAgICAgc2VsZWN0ZWRRVHlwZTogdGhpcy5zdGF0ZS5zZWxlY3RlZFFUeXBlLFxyXG4gICAgICBxT2JqOiB0aGlzLnN0YXRlLnFPYmosXHJcbiAgICAgIG1jTGlzdDogdGhpcy5zdGF0ZS5tY0xpc3QsXHJcbiAgICAgIHNlbGVjdGVkVGFnTGlzdDogdGhpcy5zdGF0ZS5zZWxlY3RlZFRhZ0xpc3QsXHJcbiAgICB9O1xyXG4gICAgdmFyIHZhbHVlID0gSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBzZWxlY3RlZFFUeXBlOiB0aGlzLnN0YXRlLnNlbGVjdGVkUVR5cGUsXHJcbiAgICAgIHFPYmo6IHRoaXMuc3RhdGUucU9iaixcclxuICAgICAgbWNMaXN0OiB0aGlzLnN0YXRlLm1jTGlzdCxcclxuICAgICAgc2VsZWN0ZWRUYWdMaXN0OiB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnTGlzdCxcclxuICAgIH0pO1xyXG4gICAgY29uc29sZS5sb2coXCJTZWRuaW5nIGRhdGE6IFwiLCB2YWx1ZSk7XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICB1cmw6IFwiL1F1ZXN0aW9uSW5wdXQvQ3JlYXRlXCIsXHJcbiAgICAgIC8vIGRhdGFUeXBlOiBcImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOFwiLFxyXG4gICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGRhdGE6IHsgX19SZXF1ZXN0VmVyaWZpY2F0aW9uVG9rZW4sIHZhbHVlIH0sXHJcbiAgICAgIHN1Y2Nlc3M6ICgpID0+IHtcclxuICAgICAgICBhbGVydChcInN1Y2Nlc3Mgc2F2aW5nIHF1ZXN0aW9uXCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiU3VjY2VzczogXCIpO1xyXG4gICAgICAgIHRoaXMuY2xlYXJEYXRhKCk7XHJcbiAgICAgICAgdGhpcy5wcm9wcy5jbG9zZU1vZGFsKCk7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgIH0sXHJcbiAgICAgIGVycm9yOiAoZSkgPT4ge1xyXG4gICAgICAgIGFsZXJ0KFwiZXJyb3Igc2F2aW5nIHF1ZXN0aW9uXCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3I6IFwiLCBlKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsZWFyRGF0YSgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiQ2xlYXJpbmcgRGF0YVwiKTtcclxuICAgIHRoaXMuc2V0U3RhdGUoKHByZXZTdGF0ZSwgcHJvcHMpID0+IHtcclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICBxT2JqOiB7fSxcclxuICAgICAgICBtY0xpc3Q6IFtdLFxyXG4gICAgICAgIHR5cGVMaXN0OiBbXSxcclxuICAgICAgICBzZWxlY3RlZFRhZ0xpc3Q6IFtdLFxyXG4gICAgICAgIHNlbGVjdGVkUVR5cGU6IDAsXHJcbiAgICAgICAgc2VsZWN0ZWRRVHlwZU9iajoge30sXHJcbiAgICAgICAgdGZDaG9pY2U6IHRydWUsXHJcbiAgICAgICAgbWNDaG9pY2U6IDAsXHJcbiAgICAgICAgYW5zd2VyOiBcIlwiLFxyXG4gICAgICB9O1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHJlbmRlclRhYmxlQm9keSgpIHtcclxuICAgIHZhciByb3dzID0gW107XHJcbiAgICB0aGlzLnN0YXRlLm1jTGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHJvd3MucHVzaChcclxuICAgICAgICA8dHIgaWQ9e2l0ZW0ub3B0aW9ufSBrZXk9e2l0ZW0ub3B0aW9ufT5cclxuICAgICAgICAgIDx0ZD57aXRlbS5vcHRpb259PC90ZD5cclxuICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICAgIGlkPXtcImlucHV0LVwiICsgaXRlbS5vcHRpb259XHJcbiAgICAgICAgICAgICAgbmFtZT1cIm1jT3B0aW9uXCJcclxuICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMuaGFuZGxlT25CbHVyfVxyXG4gICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT1cIlwiXHJcbiAgICAgICAgICAgID48L2lucHV0PlxyXG4gICAgICAgICAgPC90ZD5cclxuICAgICAgICAgIDx0ZD5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCJcclxuICAgICAgICAgICAgICBuYW1lPVwibWNDaG9pY2VcIlxyXG4gICAgICAgICAgICAgIGlkPXtcInJhZGlvLVwiICsgaXRlbS5vcHRpb259XHJcbiAgICAgICAgICAgICAgdmFsdWU9ezB9XHJcbiAgICAgICAgICAgICAgY2hlY2tlZD17aXRlbS5hbnN3ZXJ9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlT3B0aW9uQ2hhbmdlfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC90ZD5cclxuICAgICAgICA8L3RyPlxyXG4gICAgICApO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcm93cztcclxuICB9XHJcblxyXG4gIHJlbmRlclRhZ3MoKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8U2VsZWN0XHJcbiAgICAgICAgbmFtZT1cInRhZ1NlbGVjdFwiXHJcbiAgICAgICAgb3B0aW9ucz17dGhpcy5wcm9wcy50YWdMaXN0fVxyXG4gICAgICAgIGlzTXVsdGlcclxuICAgICAgICBjbG9zZU1lbnVPblNlbGVjdD17ZmFsc2V9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlVGFnQ2hhbmdlfVxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiTW9kYWwgc3RhdGU6IFwiLCB0aGlzLnN0YXRlKTtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnN0YXRlLnR5cGVMaXN0O1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxNb2RhbFxyXG4gICAgICAgIHN0eWxlPXtjdXN0b21TdHlsZXN9XHJcbiAgICAgICAgaXNPcGVuPXt0aGlzLnByb3BzLmlzT3Blbn1cclxuICAgICAgICBhcmlhSGlkZUFwcD17ZmFsc2V9XHJcbiAgICAgID5cclxuICAgICAgICA8aDI+QWRkIE5ldyBRdWVzdGlvbjwvaDI+XHJcblxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgPGxhYmVsXHJcbiAgICAgICAgICAgICAgaHRtbEZvcj1cInFUZXh0XCJcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJsYWJlbFwiXHJcbiAgICAgICAgICAgICAgc3R5bGU9e3sgdmVydGljYWxBbGlnbjogXCJ0b3BcIiB9fVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgUXVlc3Rpb246XHJcbiAgICAgICAgICAgIDwvbGFiZWw+XHJcbiAgICAgICAgICAgIDx0ZXh0YXJlYVxyXG4gICAgICAgICAgICAgIGlkPVwicVRleHRcIlxyXG4gICAgICAgICAgICAgIG5hbWU9XCJxVGV4dFwiXHJcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgcXVlc3Rpb25cIlxyXG4gICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dGhpcy5zdGF0ZS5xVGV4dH1cclxuICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogXCI0NTBweFwiIH19XHJcbiAgICAgICAgICAgICAgcm93cz17NH1cclxuICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMuaGFuZGxlT25CbHVyfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgPGxhYmVsXHJcbiAgICAgICAgICAgICAgaHRtbEZvcj1cInFUeXBlXCJcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJsYWJlbFwiXHJcbiAgICAgICAgICAgICAgc3R5bGU9e3sgdmVydGljYWxBbGlnbjogXCJ0b3BcIiB9fVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgUXVlc3Rpb24gVHlwZTpcclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgICAgPERyb3Bkb3duXHJcbiAgICAgICAgICAgICAgaWQ9XCJxVHlwZVwiXHJcbiAgICAgICAgICAgICAgbmFtZT1cInFUeXBlXCJcclxuICAgICAgICAgICAgICBvcHRpb25zPXt0aGlzLnByb3BzLnR5cGVMaXN0fVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uUVR5cGVDaGFuZ2V9XHJcbiAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuc2VsZWN0ZWRRVHlwZU9ian1cclxuICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlNlbGVjdCBhbiBvcHRpb25cIlxyXG4gICAgICAgICAgICAgIHN0eWxlPXt7IGhlaWdodDogXCI0MHB4XCIgfX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgey8qIElmIHN0cmluZyBxdWVzdGlvbiAqL31cclxuICAgICAgICAgIHt0aGlzLnN0YXRlLnNlbGVjdGVkUVR5cGUgPT0gMSAmJiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxyXG4gICAgICAgICAgICAgIDxsYWJlbFxyXG4gICAgICAgICAgICAgICAgaHRtbEZvcj1cInFBbnNcIlxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgdmVydGljYWxBbGlnbjogXCJ0b3BcIiB9fVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIEFuc3dlcjpcclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG4gICAgICAgICAgICAgIDx0ZXh0YXJlYVxyXG4gICAgICAgICAgICAgICAgaWQ9XCJxQW5zXCJcclxuICAgICAgICAgICAgICAgIG5hbWU9XCJxQW5zXCJcclxuICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiRW50ZXIgYW5zd2VyXCJcclxuICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT17dGhpcy5zdGF0ZS5xQW5zfVxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6IFwiNDUwcHhcIiB9fVxyXG4gICAgICAgICAgICAgICAgcm93cz17MX1cclxuICAgICAgICAgICAgICAgIG9uQmx1cj17dGhpcy5oYW5kbGVPbkJsdXJ9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgICAgey8qIElmIFRydWUvIEZhbHNlIHF1ZXN0aW9uICovfVxyXG4gICAgICAgICAge3RoaXMuc3RhdGUuc2VsZWN0ZWRRVHlwZSA9PSAyICYmIChcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgPGxhYmVsXHJcbiAgICAgICAgICAgICAgICBodG1sRm9yPVwicVRleHRcIlxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibGFiZWxcIlxyXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgdmVydGljYWxBbGlnbjogXCJ0b3BcIiB9fVxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIEFuc3dlcjpcclxuICAgICAgICAgICAgICA8L2xhYmVsPlxyXG5cclxuICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXHJcbiAgICAgICAgICAgICAgICAgIG5hbWU9XCJ0ZkNob2ljZVwiXHJcbiAgICAgICAgICAgICAgICAgIHZhbHVlPVwiVHJ1ZVwiXHJcbiAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3RoaXMuc3RhdGUudGZDaG9pY2UgPT0gdHJ1ZX1cclxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlT3B0aW9uQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIFRydWVcclxuICAgICAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIlxyXG4gICAgICAgICAgICAgICAgICBuYW1lPVwidGZDaG9pY2VcIlxyXG4gICAgICAgICAgICAgICAgICB2YWx1ZT1cIkZhbHNlXCJcclxuICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS50ZkNob2ljZSA9PSBmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMuaGFuZGxlT3B0aW9uQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIEZhbHNlXHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIHsvKiBJZiBtdWx0aXBsZSBjaG9pY2UgcXVlc3Rpb24gKi99XHJcbiAgICAgICAgICB7dGhpcy5zdGF0ZS5zZWxlY3RlZFFUeXBlID09IDMgJiYgKFxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICA8dGFibGUgY2xhc3NOYW1lPVwidGFibGVcIj5cclxuICAgICAgICAgICAgICAgIDx0aGVhZCBjbGFzc05hbWU9XCJ0aGVhZFwiPlxyXG4gICAgICAgICAgICAgICAgICA8dHI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHRkPk9wdGlvbiBOdW1iZXI8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD5BbnN3ZXI8L3RkPlxyXG4gICAgICAgICAgICAgICAgICAgIDx0ZD5Db3JyZWN0PC90ZD5cclxuICAgICAgICAgICAgICAgICAgPC90cj5cclxuICAgICAgICAgICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgICAgICAgICA8dGJvZHk+e3RoaXMucmVuZGVyVGFibGVCb2R5KCl9PC90Ym9keT5cclxuICAgICAgICAgICAgICA8L3RhYmxlPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICB7dGhpcy5yZW5kZXJUYWdzKCl9XHJcbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eyh0aGlzLmNsZWFyRGF0YSwgdGhpcy5wcm9wcy5jbG9zZU1vZGFsKX0+XHJcbiAgICAgICAgICAgIGNsb3NlXHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5oYW5kbGVTdWJtaXR9PkFkZDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L01vZGFsPlxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFkZFF1ZXN0aW9uTW9kYWw7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcInJlYWN0LWRvbVwiO1xyXG4vLyBpbXBvcnQgXCJib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3NcIjtcclxuaW1wb3J0IFF1ZXN0aW9uQ29udGFpbmVyIGZyb20gXCIuL1F1ZXN0aW9uQ29udGFpbmVyXCI7XHJcblxyXG5jb25zdCBBUFBTID0ge1xyXG4gIFF1ZXN0aW9uQ29udGFpbmVyLFxyXG59O1xyXG5cclxuZnVuY3Rpb24gcmVuZGVyQXBwSW5FbGVtZW50KGVsKSB7XHJcbiAgdmFyIEFwcCA9IEFQUFNbZWwuaWRdO1xyXG4gIGlmICghQXBwKSByZXR1cm47XHJcblxyXG4gIC8vIGdldCBwcm9wcyBmcm9tIGVsZW1lbnRzIGRhdGEgYXR0cmlidXRlLCBsaWtlIHRoZSBwb3N0X2lkXHJcbiAgY29uc3QgcHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBlbC5kYXRhc2V0KTtcclxuXHJcbiAgLy8gICBSZWFjdERPTS5yZW5kZXIoPEFwcCB7Li4ucHJvcHN9IC8+LCBlbCk7XHJcbiAgUmVhY3RET00ucmVuZGVyKDxBcHAgey4uLnByb3BzfSAvPiwgZWwpO1xyXG59XHJcblxyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLl9fcmVhY3Qtcm9vdFwiKS5mb3JFYWNoKHJlbmRlckFwcEluRWxlbWVudCk7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcclxuLy8gaW1wb3J0IFJlYWN0VGFibGUgZnJvbSBcInJlYWN0LXRhYmxlLXY2XCI7XHJcbmltcG9ydCBBZGRRdWVzdGlvbk1vZGFsIGZyb20gXCIuL0FkZFF1ZXN0aW9uTW9kYWxcIjtcclxuaW1wb3J0IHsgTW9kYWwgfSBmcm9tIFwicmVhY3QtYm9vdHN0cmFwXCI7XHJcbmNsYXNzIFF1ZXN0aW9uQ29udGFpbmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgcXVlc3Rpb25zOiBbXSxcclxuICAgICAgdGFnTGlzdDogW10sXHJcbiAgICAgIHR5cGVMaXN0OiBbXSxcclxuICAgICAgaXNPcGVuOiBmYWxzZSxcclxuICAgICAgaXNMb2FkaW5nOiB0cnVlLFxyXG4gICAgfTtcclxuICAgIHRoaXMuZ2V0UXVlc3Rpb24gPSB0aGlzLmdldFF1ZXN0aW9uLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmdldFRhZ0xpc3RzID0gdGhpcy5nZXRUYWdMaXN0cy5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5nZXRUeXBlTGlzdHMgPSB0aGlzLmdldFR5cGVMaXN0cy5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy50b2dnbGVNb2RhbCA9IHRoaXMudG9nZ2xlTW9kYWwuYmluZCh0aGlzKTtcclxuICAgIHRoaXMuY2xvc2VNb2RhbCA9IHRoaXMuY2xvc2VNb2RhbC5iaW5kKHRoaXMpO1xyXG5cclxuICAgIC8vdGhpcy5oYW5kbGVTdWJtaXQgPSB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XHJcbiAgICB0aGlzLmdldFF1ZXN0aW9uKCk7XHJcbiAgICB0aGlzLmdldFRhZ0xpc3RzKCk7XHJcbiAgICB0aGlzLmdldFR5cGVMaXN0cygpO1xyXG4gIH1cclxuICAvL3JlbmRlclF1ZXN0aW9uSW5wdXRcclxuICBnZXRRdWVzdGlvbigpIHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgIHVybDogXCIvUXVlc3Rpb25JbnB1dC9HZXRRdWVzdGlvbnNcIixcclxuICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxyXG4gICAgICB0eXBlOiBcIkdFVFwiLFxyXG5cclxuICAgICAgLy9kYXRhOiBkYXRhLFxyXG4gICAgICBzdWNjZXNzOiAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJEb25lOiBcIiwgcmVzdWx0KTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgIHF1ZXN0aW9uczogcmVzdWx0LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvcjogXCIsIGUpO1xyXG4gICAgICAgIGFsZXJ0KFwiZXJyb3JcIik7XHJcbiAgICAgIH0sXHJcbiAgICB9KTtcclxuICB9XHJcbiAgZ2V0VGFnTGlzdHMoKSB7XHJcbiAgICAkLmFqYXgoe1xyXG4gICAgICB1cmw6IFwiL1F1ZXN0aW9uSW5wdXQvR2V0VGFnc1wiLFxyXG4gICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgIHR5cGU6IFwiR0VUXCIsXHJcbiAgICAgIHN1Y2Nlc3M6IChyZXN1bHQpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkRvbmU6IFwiLCByZXN1bHQpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgdGFnTGlzdDogcmVzdWx0LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yOiBcIiwgZSk7XHJcbiAgICAgICAgYWxlcnQoXCJlcnJvclwiKTtcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0VHlwZUxpc3RzKCkge1xyXG4gICAgJC5hamF4KHtcclxuICAgICAgdXJsOiBcIi9RdWVzdGlvbklucHV0L0dldFR5cGVzXCIsXHJcbiAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgdHlwZTogXCJHRVRcIixcclxuICAgICAgc3VjY2VzczogKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRG9uZTogXCIsIHJlc3VsdCk7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgICAgICB0eXBlTGlzdDogcmVzdWx0LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgICBlcnJvcjogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yOiBcIiwgZSk7XHJcbiAgICAgICAgYWxlcnQoXCJlcnJvclwiKTtcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH1cclxuICB0b2dnbGVNb2RhbCgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwidG9nZ2xlTW9kYWwuLi4uXCIpO1xyXG4gICAgdGhpcy5zZXRTdGF0ZSgocHJldlN0YXRlLCBwcm9wcykgPT4ge1xyXG4gICAgICByZXR1cm4geyBpc09wZW46ICFwcmV2U3RhdGUuaXNPcGVuIH07XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsb3NlTW9kYWwoKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKChwcmV2U3RhdGUsIHByb3BzKSA9PiB7XHJcbiAgICAgIHJldHVybiB7IGlzT3BlbjogIXByZXZTdGF0ZS5pc09wZW4gfTtcclxuICAgIH0pO1xyXG4gIH1cclxuICByZW5kZXJRdWVzdGlvblRhYmxlKCkge1xyXG4gICAgLy8gY29uc3QgY29sdW1ucyA9IFtcclxuICAgIC8vICAge1xyXG4gICAgLy8gICAgIEhlYWRlcjogXCJRdWVzdGlvblwiLFxyXG4gICAgLy8gICAgIGFjY2Vzc29yOiBcInFUZXh0XCIsXHJcbiAgICAvLyAgICAgZmlsdGVyTWV0aG9kOiAoZmlsdGVyLCByb3cpID0+IHtcclxuICAgIC8vICAgICAgIHJldHVybiByb3dbZmlsdGVyLmlkXS5pbmNsdWRlcyhmaWx0ZXIudmFsdWUpO1xyXG4gICAgLy8gICAgIH0sXHJcbiAgICAvLyAgIH0sXHJcbiAgICAvLyAgIHtcclxuICAgIC8vICAgICBIZWFkZXI6IFwiQW5zd2VyXCIsXHJcbiAgICAvLyAgICAgYWNjZXNzb3I6IFwicUFuc1wiLFxyXG4gICAgLy8gICAgIGZpbHRlck1ldGhvZDogKGZpbHRlciwgcm93KSA9PiB7XHJcbiAgICAvLyAgICAgICByZXR1cm4gcm93W2ZpbHRlci5pZF0uaW5jbHVkZXMoZmlsdGVyLnZhbHVlKTtcclxuICAgIC8vICAgICB9LFxyXG4gICAgLy8gICB9LFxyXG4gICAgLy8gICB7XHJcbiAgICAvLyAgICAgSGVhZGVyOiBcIlF1ZXN0aW9uIFR5cGVcIixcclxuICAgIC8vICAgICBhY2Nlc3NvcjogXCJxVHlwZVwiLFxyXG4gICAgLy8gICAgIGZpbHRlck1ldGhvZDogKGZpbHRlciwgcm93KSA9PiB7XHJcbiAgICAvLyAgICAgICByZXR1cm4gcm93W2ZpbHRlci5pZF0uaW5jbHVkZXMoZmlsdGVyLnZhbHVlKTtcclxuICAgIC8vICAgICB9LFxyXG4gICAgLy8gICB9LFxyXG4gICAgLy8gXTtcclxuICAgIC8vIHJldHVybiAoXHJcbiAgICAvLyAgIDxkaXY+XHJcbiAgICAvLyAgICAgPFJlYWN0VGFibGVcclxuICAgIC8vICAgICAgIGRhdGE9e3RoaXMuc3RhdGUucXVlc3Rpb25zfVxyXG4gICAgLy8gICAgICAgY29sdW1ucz17Y29sdW1uc31cclxuICAgIC8vICAgICAgIHBhZ2VTaXplPXsxMH1cclxuICAgIC8vICAgICAgIGZpbHRlcmFibGVcclxuICAgIC8vICAgICAgIGRlZmF1bHRGaWx0ZXJNZXRob2Q9eyhmaWx0ZXIsIHJvdykgPT5cclxuICAgIC8vICAgICAgICAgU3RyaW5nKHJvd1tmaWx0ZXIuaWRdKSA9PT0gZmlsdGVyLnZhbHVlXHJcbiAgICAvLyAgICAgICB9XHJcbiAgICAvLyAgICAgPjwvUmVhY3RUYWJsZT5cclxuICAgIC8vICAgPC9kaXY+XHJcbiAgICB2YXIgY291bnQgPSAwO1xyXG4gICAgdmFyIHRhYmwgPSBbXTtcclxuICAgIC8vIHRhYmwucHVzaCgpO1xyXG4gICAgY291bnQgPSBjb3VudCArIDE7XHJcbiAgICB0aGlzLnN0YXRlLnF1ZXN0aW9ucy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHZhciB0YWdzID0gXCJcIjtcclxuICAgICAgaXRlbS5xVGFnLmZvckVhY2goKHRhZykgPT4ge1xyXG4gICAgICAgIHRhZ3MgPSB0YWdzICsgXCIjXCIgKyB0YWcudE5hbWUgKyBcIiBcIjtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0YWJsLnB1c2goXHJcbiAgICAgICAgPHRyIGtleT17XCJyb3dcIiArIGNvdW50fSBjbGFzc05hbWU9XCJ0YWJsZSB0clwiPlxyXG4gICAgICAgICAgPHRkPntpdGVtLnFUZXh0fTwvdGQ+XHJcbiAgICAgICAgICA8dGQ+e2l0ZW0ucUFuc308L3RkPlxyXG4gICAgICAgICAgPHRkPntpdGVtLnFUeXBlfTwvdGQ+XHJcbiAgICAgICAgICA8dGQ+e3RhZ3N9PC90ZD5cclxuICAgICAgICA8L3RyPlxyXG4gICAgICApO1xyXG4gICAgICBjb3VudCA9IGNvdW50ICsgMTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDx0YWJsZVxyXG4gICAgICAgIGNsYXNzTmFtZT1cInRhYmxlLXJlc3BvbnNpdmVcIlxyXG4gICAgICAgIHN0eWxlPXt7XHJcbiAgICAgICAgICBib3JkZXI6IFwiMXB4IHNvbGlkICNkZGRcIixcclxuICAgICAgICAgIG1heEhlaWdodDogXCIzMDAgcHhcIixcclxuICAgICAgICAgIG92ZXJmbG93OiBcInNjcm9sbFwiLFxyXG4gICAgICAgIH19XHJcbiAgICAgID5cclxuICAgICAgICA8dGhlYWQ+XHJcbiAgICAgICAgICA8dHIga2V5PXtcInJvd1wiICsgY291bnR9IGNsYXNzTmFtZT1cInRhYmxlIHRoXCI+XHJcbiAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjb2wtc20tNlwiPlF1ZXN0aW9uPC90aD5cclxuICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC1zbS0yXCI+QW5zd2VyPC90aD5cclxuICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC1zbS0xXCI+UXVlc3Rpb24gVHlwZTwvdGg+XHJcbiAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjb2wtc20tM1wiPntcIlRhZyhzKVwifTwvdGg+XHJcbiAgICAgICAgICA8L3RyPlxyXG4gICAgICAgIDwvdGhlYWQ+XHJcbiAgICAgICAgPHRib2R5Pnt0YWJsfTwvdGJvZHk+XHJcbiAgICAgIDwvdGFibGU+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgaGVhZGVyVGFiKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdj5cclxuICAgICAgICA8aDE+UGVyc29uYWwgUXVlc3Rpb25zIExpYnJhcnk8L2gxPlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIGNsYXNzTmFtZT1cImJ0bi1zdWNjZXNzIGJ0bi1zbVwiXHJcbiAgICAgICAgICB2YXJpYW50PVwib3V0bGluZS1zdWNjZXNzXCJcclxuICAgICAgICAgIG9uQ2xpY2s9e3RoaXMudG9nZ2xlTW9kYWx9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgQWRkIFF1ZXN0aW9uXHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcbiAgYWRkUXVlc3Rpb25Nb2RhbCgpIHtcclxuICAgIHZhciBtb2RhbCA9IFwiXCI7XHJcbiAgICBtb2RhbCA9IChcclxuICAgICAgPEFkZFF1ZXN0aW9uTW9kYWxcclxuICAgICAgICBpc09wZW49e3RoaXMuc3RhdGUuaXNPcGVufVxyXG4gICAgICAgIGNsb3NlTW9kYWw9e3RoaXMuY2xvc2VNb2RhbH1cclxuICAgICAgICB0YWdMaXN0PXt0aGlzLnN0YXRlLnRhZ0xpc3R9XHJcbiAgICAgICAgdHlwZUxpc3Q9e3RoaXMuc3RhdGUudHlwZUxpc3R9XHJcbiAgICAgIC8+XHJcbiAgICApO1xyXG4gICAgcmV0dXJuIG1vZGFsO1xyXG4gIH1cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIlJlbmRlcmluZyBRdWVzdGlvbkNvbnRhaW5lcjogXCIsIHRoaXMuc3RhdGUpO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGRpdj5cclxuICAgICAgICB7dGhpcy5oZWFkZXJUYWIoKX1cclxuICAgICAgICB7dGhpcy5yZW5kZXJRdWVzdGlvblRhYmxlKCl9XHJcbiAgICAgICAge3RoaXMuYWRkUXVlc3Rpb25Nb2RhbCgpfVxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbi8vY29uc3QgY29udGFpbmVyRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiUXVlc3Rpb25Db250YWluZXJcIik7XHJcbi8vUmVhY3RET00ucmVuZGVyKDxRdWVzdGlvbkNvbnRhaW5lciAvPiwgY29udGFpbmVyRWxlbWVudCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBRdWVzdGlvbkNvbnRhaW5lcjtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==